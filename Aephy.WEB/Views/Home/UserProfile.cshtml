@{
    ViewData["Title"] = "User profile";
    ViewData["Role"] = Context.Session.GetString("LoggedUserRole");
    ViewData["Fullname"] = Context.Session.GetString("FullName");
    ViewData["ProfileImage"] = Context.Session.GetString("UserProfileImage");
    bool isStripeCompleted = Convert.ToBoolean(ViewData["IsCompleted"]); //ViewData["IsCompleted"]
}

<main id="main" class="main">

    <div class="pagetitle">
        <h1>Profile</h1>
    </div><!-- End Page Title -->

    <section class="section profile">
        <div class="row">
            <div class="col-xl-4">

                <div class="card">
                    <div class="card-body profile-card pt-4 d-flex flex-column align-items-center">
                        @{
                            if (ViewData["ProfileImage"] != "")
                            {
                                                    <img src="@ViewData["ProfileImage"]" alt="Profile" class="rounded-circle profile-img">
                            }
                            else
                            {
                                                    <div id="name-initial" class="profile-pic profile-img">@Context.Session.GetString("ShortName")</div>
                            }
                        }

                        <h2 id="fullName"></h2>
                        <h3 id="userRole"></h3>
                        <div class="social-links mt-2">
                            <a href="#" class="twitter"><i class="bi bi-twitter"></i></a>
                            <a href="#" class="facebook"><i class="bi bi-facebook"></i></a>
                            <a href="#" class="instagram"><i class="bi bi-instagram"></i></a>
                            <a href="#" class="linkedin"><i class="bi bi-linkedin"></i></a>
                        </div>
                    </div>
                </div>

            </div>

            <div class="col-xl-8">

                <div class="card">
                    <div class="card-body pt-3">
                        <!-- Bordered Tabs -->
                        <ul class="nav nav-tabs nav-tabs-bordered">

                            <li class="nav-item">
                                <button class="nav-link active" data-bs-toggle="tab" data-bs-target="#profile-overview" onclick="GetUserData()">Overview</button>
                            </li>

                            <li class="nav-item">
                                <button class="nav-link" data-bs-toggle="tab" data-bs-target="#profile-edit" onclick="GetUserData()">Edit Profile</button>
                            </li>

                            <li class="nav-item">
                                <button class="nav-link" data-bs-toggle="tab" data-bs-target="#profile-change-password">Change Password</button>
                            </li>

                            @{
                                if(@Context.Session.GetString("LoggedUserRole") == "Freelancer")
                                {
                                            <li class="nav-item">
                                                <button class="nav-link" data-bs-toggle="tab" data-bs-target="#profile-calander" id="calendar-Menu">Calendar</button>
                                            </li>
                                }
                            }
                           

                        </ul>
                        <div class="tab-content pt-2">

                            <div class="tab-pane fade show active profile-overview" id="profile-overview">

                                <h5 class="card-title">Profile Details</h5>
                                <div class="row">
                                    <div class="col-lg-4 col-md-6 label ">First Name</div>
                                    <div class="col-md-8 col-lg-8">
                                        <input name="fullName" type="text" class="form-control firstName" readonly>
                                    </div>

                                </div>

                                <div class="row">
                                    <div class="col-lg-4 col-md-6 label">Last Name</div>
                                    <div class="col-md-8 col-lg-8">
                                        <input name="fullName" type="text" class="form-control lastName" readonly>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-lg-4 col-md-6 label">Role</div>
                                    <div class="col-md-8 col-lg-8">
                                        <input name="roles" type="text" class="form-control role" readonly>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-lg-4 col-md-6 label">Email</div>
                                    <div class="col-md-8 col-lg-8">
                                        <input name="emailaddress" type="email" class="form-control emailId" readonly>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-lg-4 col-md-6 label">Preferred Currency</div>
                                    <div class="col-md-8 col-lg-8">
                                        <input name="preferredCurrency" type="text" class="form-control cls-preferredCurrency" readonly>
                                    </div>
                                </div>


                                <div class="ClientFields" style="display:none;">
                                    <div class="row">
                                        <div class="col-lg-4 col-md-6 label">Description</div>
                                        <div class="col-md-8 col-lg-8">
                                            <textarea name="Description" type="text" class="form-control description" rows="4" cols="50" readonly></textarea>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-lg-4 col-md-6 label">Company Name</div>
                                        <div class="col-md-8 col-lg-8">
                                            <input name="CompanyName" type="text" class="form-control cls-client-companyname" id="txtCompanyName" readonly>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-lg-4 col-md-6 label">Country</div>
                                        <div class="col-md-8 col-lg-8">
                                            <input name="Country" type="text" class="form-control cls-country" readonly>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-lg-4 col-md-6 label">Address</div>
                                        <div class="col-md-8 col-lg-8">
                                            <textarea name="Address" type="text" class="form-control cls-client-address" rows="4" cols="50" readonly></textarea>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-lg-4 col-md-6 label">City</div>
                                        <div class="col-md-8 col-lg-8">
                                            <input name="City" type="text" class="form-control cls-client-city" readonly />
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-lg-4 col-md-6 label">Post Code</div>
                                        <div class="col-md-8 col-lg-8">
                                            <input name="PostCode" type="text" class="form-control cls-client-postcode" readonly />
                                        </div>
                                    </div>
                                </div>

                                <div class="FreelancerFields" style="display:none;">
                                    <input type="hidden" value="" id="CVPath-id" />

                                    <div class="row">
                                        <div class="col-lg-4 col-md-6 label">Country</div>
                                        <div class="col-md-8 col-lg-8">
                                            <input name="Country" type="text" class="form-control cls-country" readonly>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-lg-4 col-md-6 label">Revoult Bank Account</div>
                                        <div class="col-md-8 col-lg-8">
                                            <input type="radio" class="cls-bankaccount_Yes" name="readonly_revoult_BankAccount" value="YES" onclick="return false">
                                            <label for="yes">Yes</label>&nbsp;&nbsp;&nbsp;
                                            <input type="radio" class="cls-bankaccount_No" name="readonly_revoult_BankAccount" value="NO" onclick="return false">
                                            <label for="no">No</label>
                                        </div>
                                    </div>

                                    <div class="row mb-3 cls-revtagSection" style="display:none;">
                                        <label for="RevTag" class="col-lg-4 col-md-6 col-form-label">Rev Tag</label>
                                        <div class="col-md-8 col-lg-8">
                                            <input name="RevTag" type="text" class="form-control cls-revTag" readonly />
                                        </div>
                                    </div>

                                    <div class="RevoultStatusSection">
                                        <div class="row RevolutPending" style="display:none;">
                                            <div class="col-lg-4 col-md-6 label">Other Bank Account</div>
                                            <div class="col-md-8 col-lg-8">
                                                <span class="badge bg-danger">PENDING</span>
                                            </div>
                                        </div>

                                        <div class="row RevolutCompleted" style="display:none;">
                                            <div class="col-lg-4 col-md-6 label">Other Bank Account</div>
                                            <div class="col-md-8 col-lg-8">
                                                <span class="badge bg-success">COMPLETED</span>
                                            </div>
                                        </div>
                                    </div>


                                    <div class="row">
                                        <div class="col-lg-4 col-md-6 label cls-freelancer-CurrencybasedhourlyRate"></div>
                                        <div class="col-md-8 col-lg-8">
                                            <input name="HourlyRate" type="text" class="form-control hourlyRate" readonly>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-lg-4 col-md-6 label">Education</div>
                                        <div class="col-md-8 col-lg-8">
                                            <input name="Education" type="text" class="form-control education" readonly />
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-lg-4 col-md-6 label">Professional Experience</div>
                                        <div class="col-md-8 col-lg-8">
                                            <input name="ProffessionalExperience" type="text" class="form-control proffessionalExperience" readonly />
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-lg-4 col-md-6 label">Address</div>
                                        <div class="col-md-8 col-lg-8">
                                            <input name="Address" type="text" class="form-control cls-freelancer-address" readonly />
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-lg-4 col-md-6 label">City</div>
                                        <div class="col-md-8 col-lg-8">
                                            <input name="City" type="text" class="form-control cls-freelancer-city" readonly />
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-lg-4 col-md-6 label">Post Code</div>
                                        <div class="col-md-8 col-lg-8">
                                            <input name="PostCode" type="text" class="form-control cls-freelancer-postcode" readonly />
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-lg-4 col-md-6 label">Freelancer Level</div>
                                        <div class="col-md-8 col-lg-8">
                                            <input name="freelancerLevel" type="text" class="form-control drp-freelancer-level" readonly />
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-lg-4 col-md-6 label">Resume</div>
                                        <div class="ccol-md-8 col-lg-8">
                                            <a onclick="DownloadCv()" class="cls-resume-dwld" style="cursor:pointer">Download Resume</a>
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-lg-4 col-md-6 label">Tax Type</div>
                                    <div class="col-md-8 col-lg-8">
                                        <input name="taxType" type="text" class="form-control cls-taxType" readonly>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-lg-4 col-md-6 label">Tax Number</div>
                                    <div class="col-md-8 col-lg-8">
                                        <input name="taxNumber" type="text" class="form-control cls-taxNumber" readonly>
                                    </div>
                                </div>

                                 <div class="row">
                                    <div class="col-lg-4 col-md-6 label">Start Hours</div>
                                    <div class="col-md-8 col-lg-8">
                                        <input name="startTime" type="time" class="form-control cls-startHours" readonly>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-lg-4 col-md-6 label">End Hours</div>
                                    <div class="col-md-8 col-lg-8">
                                        <input name="endHours" type="time" class="form-control cls-endHours" readonly>
                                    </div>
                                </div>

                            </div>

                            <div class="tab-pane fade profile-edit pt-3" id="profile-edit">
                                <form name="UpdateForm">
                                    <div class="row mb-3">
                                        <label for="profileImage" class="col-md-6 col-lg-4 col-form-label">Profile Image</label>
                                        <div class="col-md-8 col-lg-8">
                                            <img src="" alt="Profile" id="profile-image">
                                            <div class="profile-pic" style="border-radius:0%;" id="profile-intial">@Context.Session.GetString("ShortName")</div>
                                            <div class="pt-2">
                                                <input type="file" id="Freelancer-profile" class="form-control" onchange="ShowUserImage(this)">
                                                @*<a href="#" class="btn btn-primary btn-sm" title="Upload new profile image"><i class="bi bi-upload"></i></a>*@
                                                @*<a href="#" class="btn btn-danger btn-sm" title="Remove my profile image"><i class="bi bi-trash"></i></a>*@
                                            </div>
                                        </div>
                                    </div>

                                    <input type="hidden" class="UserId" value="">
                                    <div class="row mb-3">
                                        <label for="firstName" class="col-md-6 col-lg-4 col-form-label">First Name</label>
                                        <div class="col-md-8 col-lg-8">
                                            <input name="firstName" type="text" class="form-control firstName" id="firstname">
                                        </div>
                                    </div>

                                    <div class="row mb-3">
                                        <label for="lastName" class="col-md-6 col-lg-4 col-form-label">Last Name</label>
                                        <div class="col-md-8 col-lg-8">
                                            <input name="lastName" type="text" class="form-control lastName" id="lastName">
                                        </div>
                                    </div>
                                    <div class="row mb-3">
                                        <label for="role" class="col-md-6 col-lg-4 col-form-label">Role</label>
                                        <div class="col-md-8 col-lg-8">
                                            <select class="form-select role" aria-label="Default select example" name="role" id="userType" disabled="true">
                                                <option value="Client">Client</option>
                                                <option value="Freelancer">Freelancer</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="row mb-3">
                                        <label for="Email" class="col-md-6 col-lg-4 col-form-label">Email</label>
                                        <div class="col-md-8 col-lg-8">
                                            <input name="email" type="email" class="form-control emailId" id="emailId" readonly>
                                        </div>
                                    </div>

                                    <div class="row mb-3">
                                        <label for="PreferredCurrency" class="col-md-6 col-lg-4 col-form-label">Preferred Currency</label>
                                        <div class="col-md-8 col-lg-8">
                                            <select class="form-select cls-preferredCurrency" aria-label="Default select example" name="preferredCurrency" id="PreferredCurrency">
                                                <option value="">Select Currency</option>
                                                <option value="USD">USD</option>
                                                <option value="GBP">GBP</option>
                                                <option value="EUR">EUR</option>
                                            </select>

                                        </div>
                                    </div>

                                    <div class="ClientFields" style="display:none;">
                                        <div class="row mb-3">
                                            <label for="Description" class="col-md-6 col-lg-4 col-form-label">Description</label>
                                            <div class="col-md-8 col-lg-8">
                                                <textarea name="Description" type="text" class="form-control description" id="Description" rows="4" cols="50"></textarea>
                                            </div>
                                        </div>
                                        <div class="row mb-3">
                                            <label for="CompanyName" class="col-md-6 col-lg-4 col-form-label">Company Name</label>
                                            <div class="col-md-8 col-lg-8">
                                                <input name="CompanyName" type="text" class="form-control cls-client-companyname" id="Client-CompanyName">
                                            </div>
                                        </div>
                                        <div class="row mb-3">
                                            <label for="Country" class="col-md-6 col-lg-4 col-form-label">Country</label>
                                            <div class="col-md-8 col-lg-8">
                                                <select class="form-select cls-Usercountry" aria-label="Default select example" name="country" id="client-country">
                                                    <option value="0">Select Country</option>
                                                </select>
                                            </div>
                                        </div>

                                        <div class="row mb-3">
                                            <label for="Address" class="col-md-6 col-lg-4 col-form-label">Address</label>
                                            <div class="col-md-8 col-lg-8">
                                                <textarea name="Address" type="text" class="form-control cls-client-address" id="Client-Address" rows="4" cols="50"></textarea>
                                            </div>
                                        </div>

                                        <div class="row mb-3">
                                            <label for="City" class="col-md-6 col-lg-4 col-form-label">City</label>
                                            <div class="col-md-8 col-lg-8">
                                                <input name="City" type="text" class="form-control cls-client-city" id="Client-City" />
                                            </div>
                                        </div>

                                        <div class="row mb-3">
                                            <label for="PostCode" class="col-md-6 col-lg-4 col-form-label">Post Code</label>
                                            <div class="col-md-8 col-lg-8">
                                                <input name="PostCode" type="text" class="form-control cls-client-postcode" id="Client-postcode" />
                                            </div>
                                        </div>

                                    </div>

                                    <div class="FreelancerFields" style="display:none;">
                                        <div class="row mb-3">
                                            <label for="Country" class="col-md-6 col-lg-4 col-form-label">Country</label>
                                            <div class="col-md-8 col-lg-8">
                                                <select class="form-select cls-Usercountry" aria-label="Default select example" name="country" id="freelancer-country">
                                                    <option value="0">Select Country</option>
                                                </select>
                                            </div>
                                        </div>

                                        <div class="row mb-3">
                                            <label for="RevoultBankAccount" class="col-md-6 col-lg-4 col-form-label">Revoult Bank Account</label>
                                            <div class="col-md-8 col-lg-8">
                                                <input type="radio" id="revoultBankYes" name="revoult_BankAccount" value="YES" onclick="ShowRevField()" class="cls-bankaccount_Yes">
                                                <label for="yes">Yes</label>&nbsp;&nbsp;&nbsp;
                                                <input type="radio" id="revoultBankNo" name="revoult_BankAccount" value="NO" onclick="ShowRevField()" class="cls-bankaccount_No">
                                                <label for="no">No</label>
                                            </div>
                                        </div>

                                        <div class="row mb-3 cls-revtagSection" style="display:none;">
                                            <label for="RevTag" class="col-md-6 col-lg-4 col-form-label">Rev Tag</label>
                                            <div class="col-md-8 col-lg-8">
                                                <input name="RevTag" type="text" class="form-control cls-revTag" id="RevTag" />
                                            </div>
                                        </div>

                                        <div class="RevoultStatusSection">
                                            <div class="row mb-3 RevolutPending" style="display:none;">
                                                <label for="StripeStatus" class="col-md-6 col-lg-4 col-form-label">Other Bank Account</label>
                                                <div class="col-md-8 col-lg-8">
                                                    <span class="badge bg-danger">PENDING</span>
                                                    <span style="padding-left: 2%"><a onclick="RevolutRegister()" class="cls-stripe-link">Click here to Register to Revolut</a></span>
                                                </div>
                                            </div>

                                            <div class="row mb-3 RevolutCompleted" style="display:none;">
                                                <label for="StripeStatus" class="col-md-6 col-lg-4 col-form-label">Other Bank Account</label>
                                                <div class="col-md-8 col-lg-8">
                                                    <span class="badge bg-success">COMPLETED</span>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row mb-3">
                                            <label for="HourlyRate" class="col-md-6 col-lg-4 col-form-label cls-freelancer-CurrencybasedhourlyRate"></label>
                                            <div class="col-md-8 col-lg-8">
                                                <input name="HourlyRate" type="number" class="form-control hourlyRate" id="HourlyRate" />
                                            </div>
                                        </div>

                                        <div class="row mb-3">
                                            <label for="Education" class="col-md-6 col-lg-4 col-form-label">Education</label>
                                            <div class="col-md-8 col-lg-8">
                                                <input name="Education" type="text" class="form-control education" id="Education" />
                                            </div>
                                        </div>

                                        <div class="row mb-3">
                                            <label for="ProffessionalExperience" class="col-md-6 col-lg-4 col-form-label">Professional Experience</label>
                                            <div class="col-md-8 col-lg-8">
                                                <input name="ProffessionalExperience" type="text" class="form-control proffessionalExperience" id="ProffessionalExperience" />
                                            </div>
                                        </div>

                                        <div class="row mb-3">
                                            <label for="Address" class="col-md-6 col-lg-4 col-form-label">Address</label>
                                            <div class="col-md-8 col-lg-8">
                                                <textarea name="Address" type="text" class="form-control cls-freelancer-address" id="Freelancer-Address" rows="4" cols="50"></textarea>
                                            </div>
                                        </div>

                                        <div class="row mb-3">
                                            <label for="City" class="col-md-6 col-lg-4 col-form-label">City</label>
                                            <div class="col-md-8 col-lg-8">
                                                <input name="City" type="text" class="form-control cls-freelancer-city" id="Freelancer-City" />
                                            </div>
                                        </div>

                                        <div class="row mb-3">
                                            <label for="PostCode" class="col-md-6 col-lg-4 col-form-label">Post Code</label>
                                            <div class="col-md-8 col-lg-8">
                                                <input name="PostCode" type="text" class="form-control cls-freelancer-postcode" id="Freelancer-postcode" />
                                            </div>
                                        </div>

                                        <div class="row mb-3">
                                            <label for="Level" class="col-md-6 col-lg-4 col-form-label">Freelancer Level</label>
                                            <div class="col-md-8 col-lg-8">
                                                <select class="form-select drp-freelancer-level" aria-label="Default select example" name="level" id="level" disabled="true">
                                                    <option value="">Select Level</option>
                                                    <option value="Expert">Expert</option>
                                                    <option value="Associate">Associate</option>
                                                    <option value="Project Manager">Project Manager</option>
                                                </select>
                                            </div>
                                        </div>
                                        <div class="row mb-3">
                                            <label for="CVPath" class="col-md-6 col-lg-4 col-form-label">Upload CV</label>
                                            <div class="col-md-8 col-lg-8">
                                                <input class="form-control" type="file" id="CVPath" name="CVPath" accept=".pdf,.docx" style="max-height:37px;">
                                            </div>
                                        </div>
                                    </div>



                                    <div class="row mb-3">
                                        <label for="TaxType" class="col-md-6 col-lg-4 col-form-label">Tax Type</label>
                                        <div class="col-md-8 col-lg-8">
                                            <input type="text" id="TaxType" class="form-control cls-taxType" name="taxType" placeholder="VAT" />
                                        </div>
                                    </div>

                                    <div class="row mb-3">
                                        <label for="TaxNumber" class="col-md-6 col-lg-4 col-form-label">Tax Number</label>
                                        <div class="col-md-8 col-lg-8">
                                            <input type="text" id="TaxNumber" class="form-control cls-taxNumber" name="taxNumber" placeholder="EL999999999" />
                                        </div>
                                    </div>

                                    @* <div class="row mb-3">
                                        <label for="StartHours" class="col-md-6 col-lg-4 col-form-label">Start Hours</label>
                                        <div class="col-md-8 col-lg-8">
                                            <input type="time" name="startTime" class="form-control cls-startHours" id="StartHours">
                                        </div>
                                    </div>

                                    <div class="row mb-3">
                                        <label for="EndHours" class="col-md-6 col-lg-4 col-form-label">End Hours</label>
                                        <div class="col-md-8 col-lg-8">
                                            <input type="time" name="endHours" class="form-control cls-endHours" id="EndHours">
                                        </div>
                                    </div> *@

                                    <div class="text-center">
                                        <button type="submit" class="btn btn-primary">Save Changes</button>
                                    </div>
                                </form>
                            </div>

                            <div class="tab-pane fade pt-3" id="profile-change-password">
                                <!-- Change Password Form -->
                                <form name="UpdatepasswordForm">
                                    <div class="row mb-3">
                                        <label for="currentPassword" class="col-md-4 col-lg-3 col-form-label">Current Password</label>
                                        <div class="col-md-8 col-lg-9">
                                            <input name="password" type="password" class="form-control" id="currentPassword">
                                        </div>
                                    </div>

                                    <div class="row mb-3">
                                        <label for="newPassword" class="col-md-4 col-lg-3 col-form-label">New Password</label>
                                        <div class="col-md-8 col-lg-9">
                                            <input name="newpassword" type="password" class="form-control" id="newPassword">
                                        </div>
                                    </div>

                                    <div class="row mb-3">
                                        <label for="renewPassword" class="col-md-4 col-lg-3 col-form-label">Re-enter New Password</label>
                                        <div class="col-md-8 col-lg-9">
                                            <input name="renewpassword" type="password" class="form-control" id="renewPassword">
                                        </div>
                                    </div>

                                    <div class="text-center">
                                        <button type="submit" class="btn btn-primary">Change Password</button>
                                    </div>
                                </form><!-- End Change Password Form -->

                            </div>

                            <div class="tab-pane fade pt-3" id="profile-calander">
                                <form class="row g-3 mt-3" name="CalendarDataForm">

                                    <div class="row mb-3">
                                        <div class="col-12 mb-3">
                                            <div class="">
                                                <input type="checkbox" id="unavailableNext6Months" name="unavailableNext6Months" onchange="unavailableNextFewMonths();" class="form-check-input" />
                                                <label for="unavailableNext6Months" class="form-label px-2">Unavailable for the next 6 months</label>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row mb-3">
                                        <label for="StartHours" class="col-md-6 col-lg-4 col-form-label">Start Hours</label>
                                        <div class="col-md-8 col-lg-8">
                                            <input type="time" name="startHours" class="form-control cls-startHours" id="StartHours">
                                        </div>
                                    </div>

                                    <div class="row mb-3">
                                        <label for="EndHours" class="col-md-6 col-lg-4 col-form-label">End Hours</label>
                                        <div class="col-md-8 col-lg-8">
                                            <input type="time" name="endHours" class="form-control cls-endHours" id="EndHours">
                                        </div>
                                    </div>

                                    <div class="row mb-3">
                                        <label for="StartHours" class="col-md-6 col-lg-4 col-form-label">Start Date</label>
                                        <div class="col-md-8 col-lg-8">
                                            <input type="date" class="form-control" id="startDate" name="startDate">
                                        </div>
                                    </div>

                                    <div class="row mb-3">
                                        <label for="EndHours" class="col-md-6 col-lg-4 col-form-label">End Date</label>
                                        <div class="col-md-8 col-lg-8">
                                            <input type="date" class="form-control" id="endDate" name="endDate">
                                        </div>
                                    </div>

                                    <div class="row mb-3">
                                        <div class="col-12 mb-3">
                                            <div class="">
                                                <input type="checkbox" id="excludeWeekends" name="excludeWeekends" class="form-check-input" />
                                                <label for="excludeWeekends" class="form-label px-2">Is Exclude weekends</label>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row mb-3">
                                        <label for="renewPassword" class="col-md-3 col-lg-3 col-form-label">Select Exclude Date</label>
                                        <div class="col-md-6 col-lg-6">
                                            <input type="date" name="ExcludeTime" class="form-control" id="exclude-time">
                                        </div>
                                        <div class="col-md-3 col-lg-3">
                                            <button type="submit" class="btn btn-primary" id="btnAddDate">Add</button>
                                        </div>
                                    </div>

                                    <div class="row mt-5" style="max-height: 18rem;overflow: scroll;">
                                        <table class="table table-borderless datatable" id="table-excludeDate">
                                            <thead>
                                                <tr>
                                                    <th scope="col">Exclude Date</th>
                                                    <th scope="col">Action</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                            </tbody>
                                        </table>
                                    </div>

                                    <div class="text-center mt-3">
                                        <input type="submit" class="btn btn-primary" value="Save"/>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    @*<div id="preloader" style="display:none;"></div>*@
</main><!-- End #main -->


<div class="modal" id="RevolutOnBoardingFeildsModal" tabindex="-1" aria-labelledby="RevolutOnBoardingFeildsModal" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title main-title cls-revoultonboarding-title">Details</h4>
                <a class="close" onclick="CloseRevolutPopup();"><i class="bi bi-x-circle"></i></a>
            </div>
            <div class="modal-body p-0">
                <div class="row">
                    <div class="col">
                        <div class="card">
                            <div class="card-body">
                                <div class="col-6">
                                    <input type="checkbox" id="IbanCheck" name="IbanCheck" value="IbanCheck" onclick="return false">
                                    <label for="IbanCheck"> IBAN</label><br>
                                </div>
                                <form class="row g-3 mt-3" name="RevolutOnBoardForm">
                                    <div class="col-6">
                                        <label for="bankCountry" class="form-label">Bank Country</label>
                                        <div class="col-md-8 col-lg-9">
                                            <input type="text" id="bankCountry" class="form-control" name="BankCountry" readonly />
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <label for="currency" class="form-label">Currency</label>
                                        <div class="col-md-8 col-lg-9">
                                            <input type="text" id="Currency" class="form-control" name="Currency" readonly />
                                        </div>
                                    </div>
                                    <div class="col-6 cls-non-mexican-field cls-aus-field cls-us-field cls-indian-field cls-Ibannot-mandatory">
                                        <label for="accountNo" class="form-label">Account No.</label>
                                        <div class="col-md-8 col-lg-9">
                                            <input type="text" id="accountNo" class="form-control" name="AccountNo" />
                                        </div>
                                    </div>
                                    <div class="col-6 cls-no-Iban non-indian-field cls-non-mexican-field cls-us-field cls-non-aus-field">
                                        <label for="routingNumber" class="form-label">Routing Number</label>
                                        <div class="col-md-8 col-lg-9">
                                            <input type="text" id="routingNumber" class="form-control" name="RoutingNumber" />
                                        </div>
                                    </div>
                                    <div class="col-6 non-indian-field cls-non-us-field cls-non-mexican-field cls-iban-mandantory cls-non-aus-field">
                                        <label for="ibanNumber" class="form-label">IBAN</label>
                                        <div class="col-md-8 col-lg-9">
                                            <input type="text" id="ibanNumber" class="form-control" name="IbanNumber" />
                                        </div>
                                    </div>
                                    <div class="col-6 cls-non-us-field cls-indian-field cls-mexican-field cls-aus-field cls-both-iban">
                                        <label for="bicNumber" class="form-label">BIC</label>
                                        <div class="col-md-8 col-lg-9">
                                            <input type="text" id="bicNumber" class="form-control" name="BicNumber" />
                                        </div>
                                    </div>
                                    <div class="col-6 cls-non-us-field cls-no-Iban cls-mexican-field non-indian-field cls-non-aus-field">
                                        <label for="clabeNumber" class="form-label">Clabe</label>
                                        <div class="col-md-8 col-lg-9">
                                            <input type="text" id="clabeNumber" class="form-control" name="clabeNumber" />
                                        </div>
                                    </div>
                                    <div class="text-center">
                                        <button type="submit" class="btn btn-brand">Submit</button>
                                        <button type="button" class="btn btn-secondary" onclick="CloseRevolutPopup();">Reset</button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(function () {
        $("form[name='UpdateForm']").validate({
            rules: {
                firstName: { required: true },
                lastName: { required: true },
                email: {
                    required: true,
                    email: true
                },
                role: { required: true }
            },
            messages: {
                firstName: { required: "Please enter a firstname", },
                lastName: { required: "Please enter a lastname", },
                email: {
                    required: "Please enter email address",
                    email: "Please enter a valid email address"
                },
                role: { required: "Select valid role" },
            },
            submitHandler: function (form) {
                if ('@ViewData["Role"]' != 'Freelancer') {
                    UpdateUserData();
                } else {
                    validateFreelancerRate();
                }

            }
        });

        $("form[name='UpdatepasswordForm']").validate({
            rules: {
                password: { required: true },
                newpassword: { required: true },
                renewpassword: {
                    required: true,
                    equalTo: "#newPassword"
                },
            },
            messages: {
                password: { required: "Please enter a password", },
                newpassword: { required: "Please enter a new password", },
                renewpassword: {
                    required: "Please enter confirm password",
                    equalTo: "password and new password should be same"
                },
            },
            submitHandler: function (form) {
                ChangePassword()
            }
        });

        $("form[name='RevolutOnBoardForm']").validate({
            rules: {
                Currency: { required: true },
                AccountNo: { required: true },
                RoutingNumber: { required: true },
                IbanNumber: { required: true },
                BicNumber: { required: true },
            },
            messages: {
                Currency: { required: "Please enter Currency", },
                AccountNo: { required: "Please enter Account Number" },
                RoutingNumber: { required: "Please enter Routing Number" },
                IbanNumber: { required: "Please enter Iban Number" },
                BicNumber: { required: "Please enter Bic Number" }
            },
            submitHandler: function (form) {
                OnboardUserRevoultAccount()
            }
        });

        $("form[name='CalendarDataForm']").validate({
            rules: {
                startDate: { required: true },
                endDate: { required: true },
                startHours: {required: true,},
                endHours: { required: true }
            },
            messages: {
                startDate: { required: "Please Insert Start Date"},
                endDate: { required: "Please Insert End Date"},
                startHours: {required: "Please Insert Start Hours"},
                endHours: { required: "Please Insert End Hours"}
            },
            errorElement: 'span',
            errorPlacement: function (error, element) {
                if (element.parent('.rating-group').length) {
                    error.insertAfter(element.parent());
                }
                else {
                    error.insertAfter(element);
                }
            },
            submitHandler: function (form) {
                submitCalendarData()
            }
        });

        GetUserData()

        bindFreelancerExcludeGrid();
    });

    function GetUserData() {
        $('#preloader').show();
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            url: "@Url.Action("GetUserData", "Home")",
            success: function (result) {
                if (result != null) {
                    var data = result.Result;
                    CheckUserBasedonUserTye(data.Role)
                    $(".UserId").val(data.UserId)
                    $(".firstName").val(data.FirstName)
                    $(".lastName").val(data.LastName)
                    $(".role").val(data.Role)
                    $(".emailId").val(data.Email)
                    var Fullname = data.FirstName + " " + data.LastName
                    $("#fullName").text(Fullname)
                    $("#userRole").text(data.Role)
                    $(".hourlyRate").val(data.HourlyRate)
                    $(".education").val(data.Education)
                    $(".proffessionalExperience").val(data.ProffessionalExperience)
                    $(".cls-freelancer-address").val(data.FreelancerAddress)
                    $(".cls-client-address").val(data.ClientAddress)
                    $(".description").val(data.Description)
                    $(".drp-freelancer-level").val(data.FreelancerLevel)
                    $(".cls-freelancer-city").val(data.FreelancerCity)
                    $(".cls-freelancer-postcode").val(data.FreelancerPostCode)
                    $(".cls-client-city").val(data.ClientCity)
                    $(".cls-client-postcode").val(data.ClientPostCode)
                    $(".cls-client-companyname").val(data.CompanyName)
                    $("#bankCountry").val(data.BackCountry)
                    $(".cls-preferredCurrency").val(data.PreferredCurrency)
                    var preferredCurrency = $("#PreferredCurrency").val();
                    $(".cls-freelancer-CurrencybasedhourlyRate").html('');
                    $(".cls-startHours").val(moment(data.StartHour).format('hh:mm'));
                    $(".cls-endHours").val(moment(data.EndHour).format('hh:mm'));

                    if (data.Role == "Freelancer") {
                        if (data.IsNotAvailableForNextSixMonth){
                            $('#unavailableNext6Months').prop('checked',true);
                            $('#StartHours').val(moment(data.StartHour).format('hh:mm')).prop('disabled', 'disabled');
                            $('#EndHours').val(moment(data.EndHour).format('hh:mm')).prop('disabled', 'disabled');
                            $('#startDate').val(moment(data.StartDate).format('YYYY-MM-DD')).prop('disabled', 'disabled');
                            $('#endDate').val(moment(data.EndDate).format('YYYY-MM-DD')).prop('disabled', 'disabled');
                            $('#excludeWeekends').prop('checked', data.IsWeekendExclude).prop('disabled', 'disabled');
                        }else{
                            $('#unavailableNext6Months').prop('checked', false);
                            $('#StartHours').val(moment(data.StartHour).format('hh:mm')).prop('disabled', false);
                            $('#EndHours').val(moment(data.EndHour).format('hh:mm')).prop('disabled', false);
                            $('#startDate').val(moment(data.StartDate).format('YYYY-MM-DD')).prop('disabled', false);
                            $('#endDate').val(moment(data.EndDate).format('YYYY-MM-DD')).prop('disabled', false);
                            $('#excludeWeekends').prop('checked', data.IsWeekendExclude).prop('disabled', false);
                        }
                    }

                    var currencyhourlyRate = "";
                    if (preferredCurrency != '') {
                        if (preferredCurrency == 'USD') {
                            currencyhourlyRate = "Hourly Rate Per Day ($)"
                        }
                        if (preferredCurrency == 'GBP') {
                            currencyhourlyRate = "Hourly Rate Per Day (£)"
                        }
                        if (preferredCurrency == 'EUR') {
                            currencyhourlyRate = "Hourly Rate Per Day (€)"
                        }
                    } else {
                        currencyhourlyRate = "Hourly Rate Per Day (€)"
                    }
                    $(".cls-freelancer-CurrencybasedhourlyRate").html(currencyhourlyRate);

                    $(".cls-taxType").val(data.TaxType)
                    $(".cls-taxNumber").val(data.TaxNumber)
                    if (data.IsRevoultBankAccount) {
                        $(".cls-bankaccount_Yes").prop("checked", true);
                        $(".cls-revTag").val(data.RevTag);
                    } else {
                        $(".cls-bankaccount_No").prop("checked", true);
                    }
                    ShowRevField();

                    //revoultBankYes


                    setTimeout(function () {
                        $("#client-country").val(data.CountryId)
                        $("#freelancer-country").val(data.CountryId)
                    }, 2500);
                    $(".cls-country").val(data.CountryName)
                    $("#CVPath-id").val(data.CVPath)
                    if (data.CVPath != null) {
                        addNameToFile(data.CVPath.split("/")[4])
                    }
                    if (data.ImageUrlWithSas != null) {
                        $("#profile-intial").css("display", "none")
                        $("#profile-image").attr("src", data.ImageUrlWithSas);
                        $('.profile-img').attr("src", data.ImageUrlWithSas);
                        $("#Freelancer-profile").val("");

                    } else {
                        $("#Freelancer-profile").val("");
                        $('.profile-img').attr("src", data.ImageUrlWithSas);
                        $("#profile-image").css("display", "none")
                        $("#profile-intial").css("display", "flex")
                    }
                    if (data.RevoultStatus) {
                        $(".RevolutPending").hide();
                        $(".RevolutCompleted").show();
                    } else {
                        $(".RevolutPending").show();
                        $(".RevolutCompleted").hide();
                    }

                    if (data.IsIBanMandantory) {
                        $(".cls-Ibannot-mandatory").hide();
                        $(".cls-iban-mandantory").show();
                        $(".cls-both-iban").show();
                        $(".cls-no-Iban").hide();
                        $('#IbanCheck').prop('checked', true);
                    } else {
                        $('#IbanCheck').prop('checked', false);
                        $(".cls-Ibannot-mandatory").show();
                        $(".cls-iban-mandantory").hide();
                        $(".cls-no-Iban").hide();
                        $(".cls-both-iban").show();
                    }
                    if (data.ShowIndiaField) {
                        $(".non-indian-field").hide();
                        $(".cls-indian-field").show();
                    }
                    if (data.ShowUsField) {
                        $(".cls-us-field").show();
                        $(".cls-non-us-field").hide();
                    }
                    if (data.ShowMexicanField) {
                        $(".cls-non-mexican-field").hide();
                        $(".cls-mexican-field").show();
                    }
                    if (data.ShowAustraliaField) {
                        $(".cls-aus-field").show();
                        $(".cls-non-aus-field").hide();
                    }
                }

                $('#preloader').hide();

            },
            error: function (result) {
                $('#preloader').hide();
                showToaster("error", "Error !", "Something went wrong !!");
            }
        });
    }

    function addNameToFile(url) {
        getImgURL(url, (imgBlob) => {
            let file = new File([imgBlob], url, { type: "pdf/application", lastModified: new Date().getTime() }, 'utf-8');
            let container = new DataTransfer();
            container.items.add(file);
            document.querySelector('#CVPath').files = container.files;
        })
    }

    function getImgURL(url, callback) {
        var xhr = new XMLHttpRequest();
        xhr.onload = function () {
            callback(xhr.response);
        };
        xhr.open('GET', url);
        xhr.responseType = 'blob';
        xhr.send();
    }


    function validateManually() {
        var hourlyRate = $("#HourlyRate").val();
        var level = $("#level").val();
        if (hourlyRate != null && level != null) {
            if (level == "Expert") {
                hourlyRate < 40 ? UpdateUserData() : alert('Hourly rate for ' + level + ' cannot be greater than $' + 40 + '.');
            } else if (level == "Associate" && hourlyRate < 20) {
                hourlyRate < 20 ? UpdateUserData() : alert('Hourly rate for ' + level + ' cannot be greater than $' + 20 + '.');
            } else if (level == "Project Manager" && hourlyRate < 80) {
                hourlyRate < 80 ? UpdateUserData() : alert('Hourly rate for ' + level + ' cannot be greater than $' + 80 + '.');
            } else if (level == "Project Leader") {
                UpdateUserData();
            } else {
                //alert('invalid insertion..')
                showToaster("error", "Error !", "invalid insertion..");
            }
        }
    }

    function unavailableNextFewMonths(){
        var isUnavailableNext6Months = $('#unavailableNext6Months').is(':checked');
        if (isUnavailableNext6Months){
            $('#StartHours').prop('disabled','disabled');
            $('#EndHours').prop('disabled', 'disabled');
            $('#startDate').prop('disabled', 'disabled');
            $('#endDate').prop('disabled', 'disabled');
            $('#excludeWeekends').prop('disabled', 'disabled');
        }else{
            $('#StartHours').prop('disabled', false);
            $('#EndHours').prop('disabled', false);
            $('#startDate').prop('disabled', false);
            $('#endDate').prop('disabled', false);
            $('#excludeWeekends').prop('disabled', false);
        }
    }

    function submitCalendarData(){      
        var calendarData = {
            Id: "",
            StartDate:$('#startDate').val(),
            EndDate: $('#endDate').val(),
            StartHour:$('#StartHours').val(),
            EndHour: $('#EndHours').val(),
            IsWeekendExclude: $('#excludeWeekends').is(':checked'),
            IsNotAvailableForNextSixMonth: $('#unavailableNext6Months').is(':checked')
        };

        var formData = new FormData();
        formData.append("CalendarData", JSON.stringify(calendarData));

        $('#preloader').show();
        $.ajax({
            type: "POST",
            url: "@Url.Action("SaveCalenderData", "Home")",
            contentType: false,
            processData:false,
            data: formData,
            success: function (result) {
                var test = result.split(",")[1].split(":")[1]
                showToaster("success", "Success", test.replace(/\"/g, ""));
                GetUserData();
                //showToaster("success", "Success", result.Message);
                $('#preloader').hide();
            },
            error: function (result) {
                $('#preloader').hide();
                showToaster("error", "Error !", "Failure");
            }
        });
    }

    function UpdateUserData() {
        var filename = $("#CVPath").val();
        if (filename != "") {
            var validFileExtentions = /(\.pdf|\.docx)$/i;
            if (!(validFileExtentions.exec(filename))) {
                showToaster("error", "Error !", "You can upload only PDF or Document file..");
                return
            }
        }

        var fileUpload = $("#CVPath").get(0);
        var files = fileUpload.files;

        var profile = $("#Freelancer-profile").get(0);
        var profileFiles = profile.files;

        var RevoultBankAccount = false;
        var RevoultBank = $('input[name="revoult_BankAccount"]:checked').val();
        if (RevoultBank == "YES") {
            var RevData = $("#RevTag").val();
            if (RevData == "") {
                showToaster("error", "Error !", "Please fill rev tag field!");
                return
            }
            RevoultBankAccount = true;
        }

        var preferredCurrency = $("#PreferredCurrency").val();
        if (preferredCurrency == "") {
            showToaster("error", "Error !", "Please select valid preferred currency");
            return;
        }

        var FreelancerDetail = {
            HourlyRate: $("#HourlyRate").val(),
            Education: $("#Education").val(),
            ProffessionalExperience: $("#ProffessionalExperience").val(),
            FreelancerAddress: $("#Freelancer-Address").val(),
            CountryId: $("#freelancer-country").val(),
            City: $("#Freelancer-City").val(),
            PostCode: $("#Freelancer-postcode").val(),
            IsRevoultBankAccount: RevoultBankAccount,
            RevTag: $("#RevTag").val()
        }

        var ClientDetail = {
            Description: $("#Description").val(),
            ClientAddress: $("#Client-Address").val(),
            CountryId: $("#client-country").val(),
            CompanyName: $("#Client-CompanyName").val(),
            City: $("#Client-City").val(),
            PostCode: $("#Client-postcode").val()
        }

        var Userdata = {
            Id: $(".UserId").val(),
            FirstName: $("#firstname").val(),
            LastName: $("#lastName").val(),
            UserType: $("#userType").val(),
            Email: $("#emailId").val(),
            freelancerDetail: FreelancerDetail,
            clientDetail: ClientDetail,
            PreferredCurrency: $("#PreferredCurrency").val(),
            TaxType: $("#TaxType").val(),
            TaxNumber: $("#TaxNumber").val(),
            // StartHour: $("#StartHours").val(),
            // EndHour: $("#EndHours").val(),
        }

        var formData = new FormData();
        for (var i = 0; i < files.length; i++) {
            formData.append("httpPostedFileBase", files[i]);
        }
        for (var i = 0; i < profileFiles.length; i++) {
            formData.append("httpPostedFileBaseProfile", profileFiles[i]);
        }
        formData.append("Userdata", JSON.stringify(Userdata));
        $('#preloader').show();
        $.ajax({
            type: "POST",
            url: "@Url.Action("EditUserData", "Home")",
            contentType: false,
            processData: false,
            data: formData,
            success: function (result) {
                var test = result.split(",")[1].split(":")[1]
                showToaster("success", "Success", test.replace(/\"/g, ""));
                $('#preloader').hide();
                GetUserData()
            },
            error: function (result) {
                $('#preloader').hide();
                showToaster("error", "Error !", "Failure");
            }
        });
    }

    function ChangePassword() {
        var passwordData = {
            Id: $(".UserId").val(),
            CurrentPassword: $("#currentPassword").val(),
            NewPassword: $("#newPassword").val(),
        }
        $('#preloader').show();
        $.ajax({
            type: "POST",
            url: "@Url.Action("UpdateUserPassword", "Home")",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(passwordData),
            success: function (result) {
                showToaster("success", "Success", result.Message);
                ResetUpdateForm()
                $('#preloader').hide();
            },
            error: function (result) {
                showToaster("error", "Error !", "Something went wrong !!");
            }
        });
    }

    function validateFreelancerRate() {
        var range = {
            ID: 0,
            Level: $('#level').val(),
        }
        var hourlyRate = parseFloat($("#HourlyRate").val()).toFixed(2);
        $('#preloader').show();
        $.ajax({
            type: "POST",
            url: "@Url.Action("getSavedLevelsdataByName", "Home")",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(range),
            success: function (result) {
                $('#preloader').hide();
                if (result.Result != null) {
                    if (result.Result.ID != 0) {
                        if (result.Result.minLevel <= hourlyRate && result.Result.maxLevel >= hourlyRate) {
                            UpdateUserData();
                        } else {
                            showToaster("error", "Error !", "Hourly rate must be between $" + parseFloat(result.Result.minLevel).toFixed(2) + " to $" + parseFloat(result.Result.maxLevel).toFixed(2));
                            return false;
                        }
                    }
                }

            },
            error: function (result) {
                $('#preloader').hide();
                return false;
                showToaster("error", "Error !", "Something went wrong !!");
            }
        });
    }

    function ResetUpdateForm() {
        $("#currentPassword").val("");
        $("#newPassword").val("");
        $("#renewPassword").val("")
    }

    function CheckUserBasedonUserTye(role) {
        if (role == "Freelancer") {
            $(".FreelancerFields").show();
            $(".ClientFields").hide()
        }
        else {
            $(".FreelancerFields").hide();
            $(".ClientFields").show();
        }
        BindCountry();
    }

    function DownloadCv() {
        var Cvname = $("#CVPath-id").val()
        if (Cvname != "") {
            window.location = "@Url.Action("DownloadApplicantCV", "Home")?Cvname=" + Cvname;
        }
    }

    function ShowUserImage(value) {
        $("#profile-intial").css("display", "none")
        $("#profile-image").css("display", "block")
        if (value.files && value.files[0]) {
            var reader = new FileReader();
            reader.onload = (function (e) {
                $("#profile-image").attr("src", e.target.result);
            });

            reader.readAsDataURL(value.files[0]);
        }
    }

    function RevolutRegister() {
        var countryExists = $("#freelancer-country").val();
        var addressExists = $("#Freelancer-Address").val();
        var cityExists = $("#Freelancer-City").val();
        var postcodeExists = $("#Freelancer-postcode").val();
        var hourlyRate = $("#HourlyRate").val()

        if (countryExists != 0 && addressExists != "" && cityExists != "" && postcodeExists != "" && hourlyRate != "") {
            $("#RevolutOnBoardingFeildsModal").modal('show');
            var prefreedCurrency = $("#PreferredCurrency").val();
            if (prefreedCurrency != "") {
                $("#Currency").val(prefreedCurrency)
            } else {
                $("#Currency").val("EUR")
            }
        } else {
            showToaster("error", "Error !", "Please fill all address and hourlyrate fields");
        }
    }

    function BindCountry() {
        $("#preloader").show();
        $.ajax({
            type: "Get",
            url: "@Url.Action("GetCountryList", "Home")",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                if (result.Message == "success") {
                    $("#client-country option:not(:first)").remove()
                    $.each(result.Result, function (data, value) {
                        $("#client-country").append($("<option     />").val(value.Id).text(value.CountryName));
                    })

                    $("#freelancer-country option:not(:first)").remove()
                    $.each(result.Result, function (data, value) {
                        $("#freelancer-country").append($("<option     />").val(value.Id).text(value.CountryName));
                    })
                }

                $("#preloader").hide();


            },
            error: function (result) {
                $("#preloader").hide();
                showToaster("error", "Error !", "Failure");
            }
        });
    }

    function CloseRevolutPopup() {
        $("#Currency").val("");
        $("#accountNo").val("");
        $("#routingNumber").val("");
        $("#ibanNumber").val("");
        $("#bicNumber").val("");
        $('#IbanCheck').prop('checked', false);
        $("#clabeNumber").val("");
        $("#RevolutOnBoardingFeildsModal").modal('hide');
    }

    function OnboardUserRevoultAccount() {
        var data = {
            BankCountry: $("#bankCountry").val(),
            Currency: $("#Currency").val(),
            AccountNo: $("#accountNo").val(),
            RoutingNumber: $("#routingNumber").val(),
            Iban: $("#ibanNumber").val(),
            Bic: $("#bicNumber").val(),
            Clabe: $("#clabeNumber").val(),
            IbanMandantory: $("#IbanCheck").is(":checked")
        }
        $("#preloader").show();
        $.ajax({
            type: "POST",
            url: "@Url.Action("OnboardUserRevoultAccount", "Home")",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(data),
            dataType: "json",
            success: function (result) {
                if (result.Message == "Account Created") {
                    CloseRevolutPopup();
                    GetUserData();
                    showToaster("success", "Success !", result.Message);
                } else {
                    showToaster("error", "Error !", result.Message);
                }

                $("#preloader").hide();


            },
            error: function (result) {
                $("#preloader").hide();
                showToaster("error", "Error !", "Failure");
            }
        });
    }

    function ShowRevField() {
        var Revoultbankaccount = $('input[name="revoult_BankAccount"]:checked').val();
        if (Revoultbankaccount == "YES") {
            $(".cls-revtagSection").show();
            $(".RevoultStatusSection").hide();
        } else {
            $(".cls-revtagSection").hide();
            $(".RevoultStatusSection").show();
        }
    }

    let excludeData = [];

    $("#btnAddDate").click(function () {

        if ($("#exclude-time").val() == '') {
            showToaster("error", "Required !", "Please select date !!");
        }
        else {

            $.ajax({
                type: "POST",
                url: "@Url.Action("SaveFreelancerExcludeDate", "Home")",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ excludeDate: new Date($("#exclude-time").val()) }),
                dataType: "json",
                success: function (result) {
                    if (result.StatusCode == 200) {
                        showToaster("success", "Saved.", "Data has been saved.");
                        bindFreelancerExcludeGrid();
                        $("#exclude-time").val('');
                    }
                    else {
                        $("#preloader").hide();
                        showToaster("error", "Error !", result.Message);
                    }
                },
                error: function (result) {
                    $("#preloader").hide();
                    showToaster("error", "Error !", "Failure");
                }
            });
        }
    });

    function bindFreelancerExcludeGrid() {
        $.ajax({
            type: "GET",
            url: "@Url.Action("GetFreelancerExcludeDateData", "Home")",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                console.log(result.Result);
                if (result.StatusCode == 200) {
                    $('#table-excludeDate').DataTable({
                        destroy: true,
                        searching: false, 
                        paging: false, 
                        info: false,
                        data: result.Result,
                        "columns": [
                            {
                                "data": "ExcludeDate",
                                "render": function (data, type, full, meta) {
                                    var date = moment(data).format('DD-MM-YYYY HH:MM:SS');;
                                    return '<span>' + date + '</span>';
                                }
                            },
                            {
                                "data": "action",
                                "render": function (data, type, row) {
                                    return "<button type=\"button\" class=\"btn btn-danger\" onclick=\"removeFreelancerExclude("+row.Id+")\">Delete</button>";
                                }
                            }
                        ]
                    });
                }
                $("#preloader").hide();
                $("#table-excludeDate").removeAttr("style");
            },
            error: function (result) {
                showToaster("error", "Error !", "Failure");
                $("#preloader").hide();
            }
        });
    }

    function removeFreelancerExclude(id) {
        $.ajax({
            type: "POST",
            url: "@Url.Action("RemoveFreelancerExcludeDate", "Home")",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ id: id }),
            dataType: "json",
            success: function (result) {
                showToaster("success", "Saved.", "Data has been saved.");
                bindFreelancerExcludeGrid();
                $("#exclude-time").val('');
            },
            error: function (result) {
                $("#preloader").hide();
                showToaster("error", "Error !", "Failure");
            }
        });
    }
</script>