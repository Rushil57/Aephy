@{
    ViewData["Title"] = "- Users list";
}
<style>
    #solutionsList {
        width: 100% !important;
    }
</style>

<main id="main" class="main">
    <div class="row">
        <!-- Recent Sales -->
        <div class="col-12">
            <div class="card recent-sales overflow-auto">
                <div class="card-body">
                    <h5 class="card-title">User List</h5>

                    <table class="table table-borderless datatable" id="userList">
                        <thead>
                            <tr>
                                <th scope="col">FirstName</th>
                                <th scope="col">LastName</th>
                                <th scope="col">EmailAddress</th>
                                <th scope="col">UserRole</th>
                                <th scope="col">Level</th>
                                <th scope="col">Solution</th>
                                <th></th>
                                <th></th>
                                <th></th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div><!-- End Recent Sales -->
    </div>


</main>

<div class="modal fade" id="userPopupModal" tabindex="-1" aria-labelledby="userPopupModal" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title main-title">Edit User</h4>
                <a class="close" data-dismiss="#userPopupModal" onclick="closeUserPopupModal();"><i class="bi bi-x-circle"></i></a>
            </div>
            <div class="modal-body p-0">
                <div class="row">
                    <div class="col">
                        <div class="card">
                            <div class="card-body" style="margin:2rem;">
                                <input type="hidden" id="Freelancer-id" value="" />
                                <div id="dropdown-div">
                                    <select class="dropdown btn-dropdown" name="service" id="drp-services" onchange="GetServicesValues()">
                                        <option value="All">All Services</option>
                                    </select>

                                    <select class="dropdown btn-dropdown" name="solution" id="drp-solutions" onchange="GetSolutionsValues()">
                                        <option value="All">All Solutions</option>
                                    </select>

                                    <select class="dropdown btn-dropdown" name="service" id="drp-industries">
                                        <option value="All">All Industries</option>
                                    </select>

                                    <div class="col-12 pt-3" style="display:none;padding-left: 1%;" id="architect-div">
                                        <input type="checkbox" id="IsProjectArchitect" name="IsProjectarchitect" value="IsProjectArchitect">
                                        <label for="IsProjectArchitect">Project Architect</label><br>
                                    </div>

                                    <div class="p-3">
                                        <button type="button" class="btn btn-brand" onclick="SaveAssignedFreelancer()">Add</button>
                                    </div>
                                </div>

                                <table class="table table-borderless datatable" id="solutionsList">
                                    <thead>
                                        <tr>
                                            <th scope="col">Solution Id</th>
                                            <th scope="col">Solution Name</th>
                                            <th scope="col">Industry Name</th>
                                        </tr>
                                    </thead>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal" id="editUserModalPopup" tabindex="-1" aria-labelledby="editUserModalPopup" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Update User</h4>
                <a class="close" onclick="CloseEditUserModalPopup();"><i class="bi bi-x-circle"></i></a>
            </div>
            <div class="modal-body p-0">
                <div class="row">
                    <div class="col">
                        <div class="card">
                            <div class="card-body">

                                <form class="row g-3 mt-3" name="editUserForm">
                                    <input type="hidden" id="Id" value="0">

                                    <div class="col-12">
                                        <label for="FirstName" class="form-label">FirstName</label>
                                        <div class="input-group">
                                            <input type="text" class="form-control" id="FirstName" name="FirstName" readonly>
                                        </div>
                                    </div>
                                    <div class="col-12">
                                        <label for="LastName" class="form-label">LastName</label>
                                        <div class="input-group">
                                            <input type="text" class="form-control" id="LastName" name="LastName" readonly>
                                        </div>
                                    </div>
                                    <div class="col-12">
                                        <label for="EmailAddress" class="form-label">Email Address</label>
                                        <div class="input-group">
                                            <input type="text" class="form-control" id="EmailAddress" name="EmailAddress" readonly>
                                        </div>
                                    </div>
                                    <div class="col-12">
                                        <label for="UserRole" class="form-label">User Role</label>
                                        <div class="input-group">
                                            <input type="text" class="form-control" id="UserRole" name="UserRole" readonly>
                                        </div>
                                    </div>
                                    <div class="form-group" id="freelancer-level">
                                        <label for="FreelancerLevel">Levels</label>
                                        <select class="form-select" aria-label="Default select example" name="level" id="FreelancerLevel">
                                            <option value="">Select Level</option>
                                            <option value="Expert">Expert</option>
                                            <option value="Associate">Associate</option>
                                            <option value="Project Manager">Project Manager</option>
                                        </select>
                                    </div>
                                    <div class="text-center">
                                        <button type="submit" class="btn btn-brand" id="update_btn">Update</button>
                                    </div>
                                </form><!-- Vertical Form -->

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>

    $(function () {
        $.validator.setDefaults({ ignore: ":hidden:not(.chosen-select)" })
        $("form[name='editUserForm']").validate({
            rules: {
                level: { required: true }
            },
            messages: {
                level: { required: "please select valid level" }
                //SolutionImage: { required: "Please chhose an image" }
            },
            errorPlacement: function (error, element) {
                if (element.parent('.input-group').length) {
                    error.insertAfter(element.parent());
                }
                else {
                    error.insertAfter(element);
                }
            },
            submitHandler: function (form) {
                editUser();
            }
        });
        GetUserList()
    });

    function OpenEditUserModalPopup() {
        resetUsersForm();
        $("#editUserModalPopup").modal('show')
    }
    function CloseEditUserModalPopup() {
        $("#editUserModalPopup").modal('hide')
    }

    function resetUsersForm() {
        $("#FirstName").val("");
        $("#LastName").val("");
        $("#EmailAddress").val("");
        $("#UserRole").val("");
    }

    function editUser() {
        var freelancerDetails = {
            Id: $('#Id').val(),
            FreelancerLevel: $('#FreelancerLevel').val()
        }

        $("#preloader").show();
        $.ajax({
            type: "POST",
            url: "@Url.Action("EditFreelancerData", "Users")",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(freelancerDetails),
            success: function (result) {
                showToaster("success", "Success", result.Message);
                CloseEditUserModalPopup();
                $("#preloader").hide();
                GetUserList();
            },
            error: function (result) {
                $("#preloader").hide();
                CloseEditUserModalPopup();
                showToaster("error", "Error !", "Failure");
            }
        });
    }

    function GetUserList() {
        $("#preloader").show();
        $.ajax({
            type: "Get",
            url: "@Url.Action("GetUsers", "Users")",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                $('#userList').DataTable({
                    destroy: true,
                    data: result.Result,
                    "columns": [

                        { "data": "FirstName" },
                        { "data": "LastName" },
                        { "data": "EmailAddress" },
                        { "data": "UserRole" },
                        {
                            "data": "FreelancerLevel",
                            className:'cls-level'
                        },
                        { "data": "SolutionName" },
                        {
                            "data": "Id",
                            "render": function (data, type, row) {
                                if (row.SolutionID != 0) {
                                    return '<a class="btn btn-primary" onclick=SoutionsList(this,"' + data + '")>View</a>';
                                }
                                else {
                                    return '';
                                }
                            }
                        },
                        {
                            "data": "Id",
                            "render": function (data, type, row) {
                                return '<a class="btn btn-success" onclick=GetUserById("' + data + '")>Edit</a>';
                            }
                        },
                        {
                            "data": "Id",
                            "render": function (data, type, row) {
                                return '<a class="btn btn-danger" onclick=DeleteUser("' + data + '")>Delete</a>';
                            }
                        },

                    ]
                });
                $("#preloader").hide();
            },
            error: function (result) {
                //alert("failure");
                showToaster("error", "Error !", "Failure");
            }
        });
    }

    function SoutionsList(data,Id) {
        $('#userPopupModal').modal('show');
        var freelencerLevel = $(data).parents('tr').find(".cls-level").text();
        if (freelencerLevel == "Project Manager") {
            $("#architect-div").css("display", "block")
        }
        BindMainServices();
        BindMainSolutions();
        BindMainIndustries();
        GetFreelancerDetailsById(Id)
    }

    function GetFreelancerDetailsById(Id){
        var data = {
            Id: Id,
        };
        $("#preloader").show();
        $.ajax({
            type: "POST",
            url: "@Url.Action("getFreelancerSolutionsById", "Users")",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(data),
            success: function (result) {
                $("#Freelancer-id").val(Id);
                $('#solutionsList').DataTable({
                    destroy: true,
                    data: result.Result,
                    "columns": [

                        { "data": "Id" },
                        { "data": "Title" },
                        { "data": "IndustryName" }
                    ]
                });
                $("#preloader").hide();
            },
            error: function (result) {
                $("#preloader").hide();
                showToaster("error", "Error !", "Something went wrong !!");
            }
        });
    }

    function GetUserById(userId) {
        var UserData = {
            Id: userId
        };
        $("#preloader").show();
        $.ajax({
            type: "POST",
            url: "@Url.Action("getUserById", "Users")",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(UserData),
            success: function (result) {
                if (result != null) {
                    OpenEditUserModalPopup();
                    $("#Id").val(result.Result.Id);
                    $("#FirstName").val(result.Result.FirstName);
                    $("#LastName").val(result.Result.LastName);
                    $("#EmailAddress").val(result.Result.EmailAddress);
                    $("#UserRole").val(result.Result.UserRole);
                    if (result.Result.UserRole == "Freelancer") {
                        $('#freelancer-level').show();
                        $('#update_btn').show();
                        $('#FreelancerLevel').val(result.Result.FreelancerLevel).trigger('chosen:updated');
                    } else {
                        $('#freelancer-level').hide();
                        $('#update_btn').hide();
                    }
                }
                $("#preloader").hide();
            },
            error: function (result) {
                $("#preloader").hide();
                showToaster("error", "Error !", "Something went wrong !!");
            }
        });
    }

    function DeleteUser(Id) {
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then(function (t) {
            if (!t.isConfirmed) return;

            var ServiceData = {
                Id: Id,
            };

            $.ajax({
                type: "POST",
                url: "@Url.Action("UpdateUserIsDelete", "Users")",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify(ServiceData),
                success: function (result) {
                    //alert(result.Message)
                    showToaster("success", "Success", result.Message);
                    GetUserList()

                },
                error: function (result) {
                    //alert("Error occured..");
                    showToaster("error", "Error !", "Something went wrong !!");
                }
            });
        });
    }

    function closeUserPopupModal() {
        $('#userPopupModal').modal('hide');
        $('#solutionsList').find("tr:gt(0)").remove();
        $("#Freelancer-id").val("");
        $("#architect-div").css("display","none")
    }

    function BindMainServices() {
        $.ajax({
            type: "Get",
            async: false,
            url: "@Url.Action("GetServicesList", "Users")",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                $("#drp-services option:not(:first)").remove()
                $.each(result.Result, function (data, value) {
                    $("#drp-services").append($("<option     />").val(value.Id).text(value.ServicesName));
                })
            },
            error: function (result) {
                alert("failure");
            }
        });
    }

    function BindMainSolutions() {
        $.ajax({
            type: "GET",
            async: false,
            url: "@Url.Action("GetSolutionList", "Users")",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                $("#drp-solutions option:not(:first)").remove()
                $.each(result.Result, function (data, value) {
                    $("#drp-solutions").append($("<option     />").val(value.Id).text(value.Title));
                })

            },
            error: function (result) {
                alert("failure");
            }
        });
    }

    function BindMainIndustries() {

        $.ajax({
            type: "GET",
            async: false,
            url: "@Url.Action("GetIndustryList", "Users")",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                $("#drp-industries option:not(:first)").remove()
                $.each(result.Result, function (data, value) {
                    $("#drp-industries").append($("<option     />").val(value.Id).text(value.IndustryName));
                })

            },
            error: function (result) {
                alert("failure");
            }
        });
    }

    function SaveAssignedFreelancer() {
        var solutionId = $("#drp-solutions").val();
        var industryId = $("#drp-industries").val();
        var freelancerid = $("#Freelancer-id").val();

        var data ={
            SolutionId: solutionId,
            IndustryId: industryId,
            ServiceId: $("#drp-services").val(),
            FreelancerId: freelancerid,
            ProjectArchitect: $("#IsProjectArchitect").is(":checked")
        }

        if($("#drp-solutions").val() == "All" || $("#drp-industries").val() == "All") {
            alert("Select Proper Details")
            return
        }
        $("#preloader").show();
        $.ajax({
            type: "POST",
            async: false,
            url: "@Url.Action("SaveFreelancer", "Users")",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(data),
            success: function (result) {
                showToaster("success", "Success", result.Message);
                $('#IsProjectArchitect').prop('checked', false);
                GetServicesValues();
                GetFreelancerDetailsById(freelancerid)
                $("#preloader").hide();

            },
            error: function (result) {
                alert("failure");
            }
        });
    }

    function GetServicesValues() {
        var serviceId = $("#drp-services").val();
        if(serviceId == "All"){
            //serviceId = 0;
            BindMainSolutions();
            BindMainIndustries();
            return
        }
        var data ={
            Id: serviceId,
        }

        $.ajax({
            type: "POST",
            async: false,
            url: "@Url.Action("GetSolutionBasedonServiceSelected", "Users")",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(data),
            success: function (result) {
                //$("#drp-services").val("All")
                var data = result.Result.SolutionData;
                $("#drp-solutions option:not(:first)").remove()
                $("#drp-industries option:not(:first)").remove()
                $.each(data, function (data, value) {
                    $("#drp-solutions").append($("<option     />").val(value.Id).text(value.Title));
                })
                $.each(result.Result.IndustriesData, function (datas, values) {
                    $("#drp-industries").append($("<option     />").val(values.Id).text(values.IndustryName));
                })

            },
            error: function (result) {
                alert("failure");
            }
        });
    }

    function GetSolutionsValues() {
        var solutionId = $("#drp-solutions").val();
        if(solutionId == "All") {
            GetServicesValues();
            return
        }
        var data = {
            Id: solutionId,
        }

        $.ajax({
            type: "POST",
            async: false,
            url: "@Url.Action("GetSolutionBasedonSolutionSelected", "Users")",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(data),
            success: function (result) {
                $("#drp-industries option:not(:first)").remove()
                $.each(result.Result, function (datas, values) {
                    $("#drp-industries").append($("<option     />").val(values.Id).text(values.IndustryName));
                })
            },
            error: function (result) {
                alert("failure");
            }
        });
    }
</script>
