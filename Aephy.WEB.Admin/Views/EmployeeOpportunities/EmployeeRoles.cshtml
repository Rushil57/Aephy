@{
    ViewData["Title"] = "- Create Opportunity";
}
<main id="main" class="main">
    <div class="row">
        <!-- Recent Sales -->
        <div class="col-12">
            <div class="card recent-sales overflow-auto">

                <div class="card-body">
                    <h5 class="card-title">Employee Roles</h5>

                    <a class="btn btn-brand m-2" onclick="OpenAddRolesModalPopup();">Create Roles</a>

                    <table class="table table-borderless datatable" id="EmployeeRolesList">
                        <thead>
                            <tr>
                                <th scope="col">Id</th>
                                <th scope="col">Department</th>
                                <th scope="col">Title</th>
                                <th scope="col">Type</th>
                                <th scope="col">Location</th>
                                <th scope="col">Description</th>
                                <th scope="col"></th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>


    <div class="modal" id="addRolesModal" tabindex="-1" aria-labelledby="addRolesModal" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Create Roles</h4>
                    <a class="close" onclick="CloseAddRolesModalPopup();"><i class="bi bi-x-circle"></i></a>
                </div>
                <div class="modal-body p-0">
                    <div class="row">
                        <div class="col">
                            <div class="card">
                                <div class="card-body">

                                    <form class="row g-3 mt-3" name="addEmployeeRolesForm">
                                        <input type="hidden" id="ID" value="0">

                                        <div class="col-12">
                                            <label for="department" class="form-label">Department</label>
                                            <div class="input-group" id="department">
                                                <input type="text" id="textDepartment" name="textDepartment" class="form-control" />
                                            </div>
                                        </div>

                                        <div class="col-12">
                                            <label for="Title" class="form-label">Title</label>
                                            <div class="input-group" id="Title">
                                                <input type="text" id="textTitle" name="textTitle" class="form-control" />
                                            </div>
                                        </div>
                                        <div class="col-12">
                                            <label for="Job-Type" class="form-label">Type</label>
                                            <div class="input-group" id="Job-Type">
                                                <select data-placeholder="Choose tags ..." id="drpType" name="drpType" class="form-control dropdown">
                                                    <option value="">Choose Type</option>
                                                    <option value="full time">Full-time</option>
                                                    <option value="part time">Part-time</option>
                                                </select>
                                            </div>
                                        </div>

                                        <div class="col-12">
                                            <label for="Location" class="form-label">Location</label>
                                            <div class="input-group" id="Location">
                                                <input type="text" class="form-control" id="textLocation" name="textLocation">
                                            </div>
                                        </div>
                                        <div class="col-12">
                                            <label for="Description" class="form-label">Job Description</label>
                                            <div class="input-group">
                                                <textarea class="form-control" id="Description" name="Description" style="height:150px;"></textarea>
                                            </div>
                                        </div>

                                        <div class="text-center">
                                            <button type="submit" class="btn btn-brand">Submit</button>
                                            <button type="reset" class="btn btn-secondary" onclick="ResetRolesForm();">Reset</button>
                                        </div>
                                    </form><!-- Vertical Form -->
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>
<script>
    var allIndustries = [];
    var allServices = [];
    $(function () {
        GetRolesList()
        //$(".chosen-select").chosen();
        //BindSolutions();
        //GetIndustriesList();
        //GetServiceList();
        //OpenGigRoles
        $("form[name='addEmployeeRolesForm']").validate({
            rules: {
                textDepartment: { required: true },
                textTitle: { required: true },
                drpType: { required: true },
                textLocation: { required: true },
                Description: { required: true }

            },
            messages: {
                textDepartment: { required: "Please enter department" },
                textTitle: { required: "Please enter title" },
                drpType: { required: "Please select job type." },
                textLocation: {required: "Please enter a location."},
                Description: {required:"Please enter job description."}
            },
            errorPlacement: function (error, element) {
                if (element.parent('.input-group').length) {
                    error.insertAfter(element.parent());
                }
                else {
                    error.insertAfter(element);
                }
            },
            submitHandler: function (form) {
                addEmployeeRoles()
            }
        });
    });
    function addEmployeeRoles() {
        var id = $("#ID").val();
        if (id == null) {
            id = 0;
        }
        var Data = {
            Id: id,
            Department: $("#textDepartment").val(),
            Title: $("#textTitle").val(),
            Type: $("#drpType").val(),
            Location: $("#textLocation").val(),
            JobDescription: $("#Description").val()
        };
        $("#preloader").show();
        $.ajax({
            url: '/EmployeeOpportunities/AddorEditEmployeeRoles',
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(Data),
            success: function (result) {
                $("#preloader").hide();
                CloseAddRolesModalPopup();
                //alert(result.Message);
                showToaster("success", "Success", result.Message);
                ResetRolesForm();
                GetRolesList();
            },
            error: function (err) {
                $("#preloader").hide();
                CloseAddRolesModalPopup();
                showToaster("error", "Error !", result.responseText);
            }
        });

    }

    function ResetRolesForm() {
        //$("#ID").val(0);
        $("#textDepartment").val("");
        $(".modal-title").html("Add Roles");
        $('#textTitle').val("");
        $('#textLocation').val("");
        $('#Description').val("");
        $("#drpType").val("").trigger('chosen:updated');
    }

    function GetRolesList() {
        $("#preloader").show();
        $.ajax({
            type: "Get",
            url: "@Url.Action("GetRolesList", "EmployeeOpportunities")",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                $('#EmployeeRolesList').DataTable({
                    destroy: true,
                    data: result.Result,
                    "columns": [
                        {
                            "data": "Id",
                            "render": function (data, type, row) {
                                return '<a class="cls-RolesId" onclick=GetDataById(' + data + ')>' + data + '</a>';
                            }
                        },
                        {
                            "data": "Department",
                            "render": function (data, type, row) {
                                if (data != null) {
                                    var Department = data.length > 30 ? data.substring(0, 30) + "..." : data;
                                    return "<span title='" + data + "'>" + Department + "</span>";
                                }
                                else {
                                    return "<span></span>";
                                }
                            }
                        },
                        {   
                            "data": "Title",
                            "render": function (data, type, row) {
                                if (data != null) {
                                    var Title = data.length > 35 ? data.substring(0, 35) + "..." : data;
                                    return "<span title='" + data + "'>" + Title + "</span>";
                                }
                                else {
                                    return "<span></span>";
                                }
                            }
                        },
                        {"data": "Type"},
                        {
                            "data": "Location",
                            "render": function (data, type, row) {
                                if (data != null) {
                                    var Location = data.length > 35 ? data.substring(0, 35) + "..." : data;
                                    return "<span title='" + data + "'>" + Location + "</span>";
                                }
                                else {
                                    return "<span></span>";
                                }
                            }
                        },
                        {
                            "data": "JobDescription",
                            "render": function (data, type, row) {
                                if (data != null) {
                                    var JobDescription = data.length > 35 ? data.substring(0, 35) + "..." : data;
                                    return "<span title='" + data + "'>" + JobDescription + "</span>";
                                }
                                else {
                                    return "<span></span>";
                                }
                            }
                        },
                        {
                            "data": "Id",
                            "render": function (data, type, row) {
                                return '<a class="btn btn-danger btn-sm" style="color: white;" onclick=DeleteEmployeeRole(' + row.Id + ')>Delete</a>';

                            }
                        }

                    ]
                });
                $("#preloader").hide();
            },
            error: function (result) {
                showToaster("error", "Error !", result.responseText);
                $("#preloader").hide();
            }
        });
    }

    function DeleteEmployeeRole(Id) {

        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then(function (t) {
            if (!t.isConfirmed) return;

            $("#preloader").show();
            var RolesData = {
                Id: Id
            };
            $.ajax({
                type: "POST",
                url: "@Url.Action("DeleteEmployeeRole", "EmployeeOpportunities")",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify(RolesData),
                success: function (result) {
                    $("#preloader").hide();
                    showToaster("success", "Success", result.Message);
                    GetRolesList();
                },
                error: function (result) {
                    $("#preloader").hide();
                    showToaster("error", "Error !", result.responseText);
                }
            });
        });
    }

    function CloseAddRolesModalPopup() {
        ResetRolesForm();
        $("#addRolesModal").modal('hide')
    }
    function OpenAddRolesModalPopup() {
        $('#Service').css("display", "none");
        $('#Industry').css("display", "none");
        $("#addRolesModal").modal('show')
    }

    function BindSolutions() {
        $.ajax({
            type: "Get",
            url: "@Url.Action("GetSolutionsList", "OpenGigRoles")",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                $.each(result.Result, function (data, value) {
                    $("#drp-Solutions").append($("<option     />").val(value.Id).text(value.Title));
                })
                $('#drp-Solutions').trigger('chosen:updated');
            },
            error: function (result) {
                showToaster("error", "Error !", result.responseText);
            }
        });
    }

    function GetDataById(Id) {
        if (Id != 0) {

            var RolesData = {
                ID: Id,
            };
            $.ajax({
                type: "POST",
                url: "@Url.Action("GetRolesdataById", "EmployeeOpportunities")",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify(RolesData),
                success: function (result) {
                    if (result != null) {
                        $("#addRolesModal").modal('show');
                        $(".modal-title").html("Edit Roles");

                        $("#ID").val(result.Result.Id);
                        $("#textDepartment").val(result.Result.Department);
                        $('#textTitle').val(result.Result.Title);
                        $('#textLocation').val(result.Result.Location);
                        $('#Description').val(result.Result.JobDescription);
                        $("#drpType").val(result.Result.Type).trigger('chosen:updated');
                    }
                },
                error: function (result) {
                    showToaster("error", "Error !", result.responseText);
                }
            });
        }
    }
    function GetSolutionDataById() {

        $('#Service').css("display", "block");
        $('#Industry').css("display", "block");
        $('#drp-industries').empty();
        $('#txt-services').val("");
        var SolutionId = $('#drp-Solutions').val();
        var ID = parseInt(SolutionId);
        var SolutionData = {
            Id: ID,
        };
        $.ajax({
            type: "POST",
            async: false,
            url: "@Url.Action("GetSolutiondataById", "OpenGigRoles")",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(SolutionData),
            success: function (result) {
                if (result != null) {

                    if (result.Result.ServiceResult.length > 0) {
                        var serName = allServices.filter(x => x.Id == result.Result.ServiceResult[0].ServicesId)[0].ServicesName;
                        if (serName != undefined) {
                            $('#txt-services').val(serName);
                        }
                    }
                    if (result.Result.IndustryResult.length > 0) {
                        for (var j = 0; j < result.Result.IndustryResult.length; j++) {
                            var industry = allIndustries.filter(x => x.Id == result.Result.IndustryResult[j].IndustryId)[0];
                            if (industry != undefined) {
                                $('#drp-industries').append("<option value='" + industry.Id + "'>" + industry.IndustryName + "</option>");
                            }
                        }
                    }
                    //$('#drp-industries').val(industryvalues).trigger('chosen:updated');
                }
            },
            error: function (result) {
                showToaster("error", "Error !", result.responseText);
            }
        });
    }
</script>