<main id="main" class="main">
    <div class="row">
        <!-- Recent Sales -->
        <div class="col-12">
            <div class="card recent-sales overflow-auto">

                <div class="card-body">
                    <h5 class="card-title">Solutions</h5>

                    <table class="table table-borderless datatable" id="solutionList">
                        <thead>
                            <tr>
                                <th style="width:10%">Id</th>
                                <th style="width:10%">Title</th>
                                @*  <th style="width:10%">Sub Title</th>*@
                                <th style="width:30%">Description</th>
                                <th style="width:20%">Image</th>
                                <th style="width:10%">Services</th>
                                <th style="width:10%">Industries</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div><!-- End Recent Sales -->
    </div>
</main>

<div class="modal" id="DetailsPopModal" tabindex="-1" aria-labelledby="DetailsPopModal" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title main-title">Details</h4>
                <a class="close" onclick="ResetDetailsForm();"><i class="bi bi-x-circle"></i></a>
            </div>
            <div class="modal-body p-0">
                <div class="row">
                    <div class="col">
                        <div class="card">
                            <div class="card-body">
                                <form name="ProjectDetailsForm">
                                    <input type="hidden" id="SolutionId" value="0">
                                    <input type="hidden" id="IndustryId" value="0">
                                    <input type="hidden" id="ProjectOulineId" value="0">

                                    <div class="form-group pt-3">
                                        <label for="ProjectType"> Select Project Type </label>
                                        <select class="form-select" name="ProjectType" id="ProjectType">
                                            <option value="SMALL">Small</option>
                                            <option value="MEDIUM">Medium</option>
                                            <option value="LARGE">Large</option>
                                        </select>
                                    </div>

                                    <div class="form-group pt-3">
                                        <label for="Description">Project Outline</label>
                                        <textarea id="industry-ProjectOutline" class="form-control" name="ProjectOutline" rows="4" cols="50" maxlength="330"></textarea>
                                    </div>

                                    <div class="form-group pt-3">
                                        <label for="projectDetails">Project Details</label>
                                        <textarea id="industry-ProjectDetails" class="form-control" name="ProjectDetails" rows="4" cols="50" maxlength="330"></textarea>
                                    </div>

                                    <div class="form-group pt-3">
                                        <label for="ProjectDuration">Project Duration</label>
                                        <input type="text" class="form-control" id="industry-ProjectDuration" name="ProjectDuration" placeholder="Project Duration">
                                    </div>

                                    <div class="form-group pt-3">
                                        <label for="TeamSize">Team Size</label>
                                        <input type="text" class="form-control" id="industry-TeamSize" name="TeamSize" value="2" readonly>
                                    </div>

                                    <div class="form-group pt-3">
                                        <button type="button" class="btn btn-primary" onclick="OpenMileStonePopup()">Add Milestones</button>
                                        <button type="button" class="btn btn-primary" onclick="OpenPointsPopup()">Add Highlights</button>
                                    </div>

                                    <div id="MileStonediv" style="padding-top: 3%;">
                                        <label for="mileStone" class="cls-table-label">Milestones Grid</label>
                                        <table class="table" id="MileStoneTable">
                                            <thead style="border: 1px solid #e8e8e8;">
                                                <tr>
                                                    <th>Id</th>
                                                    <th>Description</th>
                                                    <th>Title</th>
                                                    <th>Days</th>
                                                    <th></th>
                                                </tr>
                                            </thead>
                                            <tbody class="MileStonebody">
                                            </tbody>
                                        </table>
                                    </div>

                                    <div id="Pointsdiv" style="padding-top: 3%;">
                                        <label for="points" class="cls-table-label">Highlights Grid</label>
                                        <table class="table" id="PointsTable">
                                            <thead style="border: 1px solid #e8e8e8;">
                                                <tr>
                                                    <th>Id</th>
                                                    <th>Label</th>
                                                    <th>Value</th>
                                                    <th></th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                            </tbody>
                                        </table>
                                    </div>

                                    <div class="form-group pt-3">
                                        <button type="submit" class="btn btn-brand">Submit</button>
                                        <button type="button" class="btn btn-secondary" onclick="ResetDetailsForm()">Close</button>
                                        <div class="view_action_Link d-flex justify-content-end">
                                            <span style="background-color:#d38b4e; width:1rem;"></span>
                                            <div class="d-flex justify-content-center align-items-center">
                                                <a href="" class="cls-milestone-popup" id="clsGuidelineModal" data-bs-toggle="modal" data-bs-target="#guidelineModal">View Guidelines</a>
                                                <img src="~/assets/img/dashboard/icons-send.png" />
                                            </div>
                                        </div>
                                    </div>

                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal" id="MileStonePopModal" tabindex="-1" aria-labelledby="MileStonePopModal" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title main-title">Add Milestone</h4>
                <a class="close" onclick="ResetMileStoneForm();"><i class="bi bi-x-circle"></i></a>
            </div>
            <div class="modal-body p-0">
                <div class="row">
                    <div class="col">
                        <div class="card">
                            <div class="card-body">
                                <form class="row g-3 mt-3" name="MileStoneForm">
                                    <input type="hidden" id="MileStoneId" value="0" />
                                    <div class="col-12">
                                        <label for="Title" class="form-label">Title</label>
                                        <div class="input-group">
                                            <input type="text" id="mileStoneTitle" class="form-control" name="milestonetitle" />
                                        </div>
                                    </div>
                                    <div class="col-12">
                                        <label for="Description" class="form-label">Description</label>
                                        <div class="input-group">
                                            <input type="text" id="mileStoneDescription" class="form-control" name="milestonedescription" />
                                        </div>
                                    </div>
                                    <div class="col-12">
                                        <label for="Days" class="form-label">Days</label>
                                        <div class="input-group">
                                            <input type="text" id="txtMilestoneDays" class="form-control" name="txtMilestoneDays" />
                                        </div>
                                    </div>
                                    <div class="col-12" style="display:none;">
                                        <label for="dueDate" class="form-label">Due Date</label>
                                        <div class="input-group">
                                            @*<input type="text" id="mileStonedueDate" class="form-control" name="milestoneduedate" />*@
                                            <input type="date" id="mileStonedueDate" class="form-control" name="milestoneduedate">
                                        </div>
                                    </div>
                                    <div class="text-center">
                                        <button type="submit" class="btn btn-brand">Submit</button>
                                        <button type="button" class="btn btn-secondary" onclick="ResetMileStoneForm();">Reset</button>
                                    </div>
                                </form>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal" id="PointsPopModal" tabindex="-1" aria-labelledby="PointsPopModal" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title main-title">Add Highlights</h4>
                <a class="close" onclick="ResetPointsForm();"><i class="bi bi-x-circle"></i></a>
            </div>
            <div class="modal-body p-0">
                <div class="row">
                    <div class="col">
                        <div class="card">
                            <div class="card-body">
                                <form class="row g-3 mt-3" name="PointsForm">
                                    <input type="hidden" id="PointsId" value="0" />
                                    <div class="col-12">
                                        <label for="points" class="form-label">Label</label>
                                        <div class="input-group">
                                            <input type="text" id="pointsKey-id" class="form-control" name="pointsKey" />
                                        </div>
                                    </div>

                                    <div class="col-12">
                                        <label for="points" class="form-label">Value</label>
                                        <div class="input-group">
                                            <input type="text" id="pointsValue-id" class="form-control" name="pointsValue" />
                                        </div>
                                    </div>
                                    <div class="text-center">
                                        <button type="submit" class="btn btn-brand">Submit</button>
                                        <button type="button" class="btn btn-secondary" onclick="ResetPointsForm();">Reset</button>
                                    </div>
                                </form>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $(function () {
        GetSolutionList();
        $("form[name='MileStoneForm']").validate({
            rules: {
                milestonedescription: { required: true },
                milestonetitle: { required: true },
                txtMilestoneDays: { required: true },
            },
            messages: {
                milestonedescription: { required: "Please enter description" },
                milestonetitle: { required: "please enter title" },
                txtMilestoneDays: { required: "Please enter days" }
            },
            errorPlacement: function (error, element) {
                if (element.parent('.input-group').length) {
                    error.insertAfter(element.parent());
                }
                else {
                    error.insertAfter(element);
                }
            },
            submitHandler: function (form) {
                SaveMilStoneData()
            }
        })

        $("form[name='PointsForm']").validate({
            rules: {
                pointsKey: { required: true },
                pointsValue: { required: true }
            },
            messages: {
                pointsKey: { required: "Please enter points key" },
                pointsValue: { required: "Please enter points value" }
            },
            errorPlacement: function (error, element) {
                if (element.parent('.input-group').length) {
                    error.insertAfter(element.parent());
                }
                else {
                    error.insertAfter(element);
                }
            },
            submitHandler: function (form) {
                SavePointsData()
            }
        });

        $("form[name='ProjectDetailsForm']").validate({
            rules: {
                ProjectOutline: { required: true },
                ProjectDuration: { required: true },
                ProjectDetails: { required: true }
            },
            messages: {
                ProjectOutline: { required: "Please enter project outline" },
                ProjectDuration: { required: "Please enter project duration" },
                ProjectDetails: { required: "Please enter project details" }
            },
            errorPlacement: function (error, element) {
                if (element.parent('.input-group').length) {
                    error.insertAfter(element.parent());
                }
                else {
                    error.insertAfter(element);
                }
            },
            submitHandler: function (form) {
                SaveSolutionIndustryDescription()
            }
        });
    })

    function GetSolutionList() {
        $("#preloader").show();
        $.ajax({
            type: "Get",
            url: "@Url.Action("GetSolutionsIndustryDetailList", "Solutions")",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                $("#preloader").hide();
                $('#solutionList').DataTable({
                    destroy: true,
                    data: result.Result,
                    "columns": [
                        {
                            "data": "Id",
                            "render": function (data, type, row) {
                                return '<a class="cls-service" onclick=OpenDetailsPopModal(' + data + ',' + row.SolutionId + ',' + row.IndustryId + ')>' + data + '</a>';
                            }
                        },
                        {
                            "data": "Title",
                            "render": function (data, type, row) {
                                var title = data.length > 35 ? data.substring(0, 35) + "..." : data;
                                return "<span title='" + data + "'>" + title + "</span>";
                            }
                        },
                        //{ "data": "SubTitle" },
                        {
                            "data": "Description",
                            "render": function (data, type, row) {
                                if (data != null) {
                                    var description = data.length > 35 ? data.substring(0, 35) + "..." : data;
                                    return "<span title='" + data + "'>" + description + "</span>";
                                }
                                else {
                                    return "<span></span>";
                                }

                            }
                        },
                        {
                            "data": "ImageUrlWithSas",
                            "render": function (data, type, row) {
                                if (data != null) {
                                    return '<img src="' + data + '" alt="Image" height="70" width="150" />';
                                }
                                else {
                                    return "<span></span>";
                                }

                            }
                        },
                        { "data": "Services" },
                        { "data": "Industries" }

                    ]
                });


            },
            error: function (result) {
                //alert("failure");
                showToaster("error", "Error !", "Failure");
            }
        });
    }

    function OpenDetailsPopModal(Id, SolutionId, IndustryId) {
        $("#DetailsPopModal").modal('show');
        $("#SolutionId").val(SolutionId);
        $("#IndustryId").val(IndustryId);
        GetSolutionDefineDetails();
       
    }

    function GetSolutionDefineDetails() {

        var data = {
            SolutionId: parseInt($("#SolutionId").val()),
            IndustryId: parseInt($("#IndustryId").val()),
            ProjectType: $("#ProjectType").val(),
        };

        $("#preloader").show();

        $.ajax({
            type: "POST",
            url: "@Url.Action("GetSolutionDefineData", "Home")",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(data),
            success: function (result) {
                if (result.Result != null) {
                    $("#industry-ProjectDetails").val(result.Result.ProjectDetails);
                    $("#industry-ProjectOutline").val(result.Result.ProjectOutline);
                    $("#industry-ProjectDuration").val(result.Result.Duration);
                } else {
                    $("#industry-ProjectDetails").val("");
                    $("#industry-ProjectOutline").val("");
                    $("#industry-ProjectDuration").val("");
                }
                
                var ProjectType = $("#ProjectType").val();
                if (ProjectType == "LARGE") {
                    $("#industry-TeamSize").val(5);
                }
                if (ProjectType == "MEDIUM") {
                    $("#industry-TeamSize").val(3);
                }
                if (ProjectType == "SMALL") {
                    $("#industry-TeamSize").val(2);
                }
                GetMiletoneList();
                $("#preloader").hide();
            },
            error: function (result) {
                showToaster("error", "Error !", result.Message);
                $("#preloader").hide();
            }
        });
    }

    function GetMiletoneList() {
        var data = {
            SolutionId: parseInt($("#SolutionId").val()),
            IndustryId: parseInt($("#IndustryId").val()),
            ProjectType: $("#ProjectType").val(),
        }

        $("#preloader").show();
        $.ajax({
            type: "POST",
            url: "/Home/GetMiletoneList",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(data),
            success: function (result) {
                var data = result.Result
                var index = 0;
                var subObj = '';
                var htm = '';
                for (index = 0; index < data.length; index++) {
                    subObj = data[index];

                    htm += '<tr>';
                    //htm += '<td class="" >' + subObj.Id + '</td>';
                    htm += '<td onclick=EditMiletoneData(' + subObj.Id + ') class=cls-milestone>' + subObj.Id + '</td>';
                    htm += '<td>' + subObj.Description + '</td>';
                    htm += '<td>' + subObj.Title + '</td>';
                    htm += '<td>' + subObj.Days + '</td>';
                    htm += '<td><a class="btn btn-danger btn-sm" onclick=DeleteMileStoneById(' + subObj.Id + ')>Delete</a></td>';
                    htm += '</tr>';
                }
                $("#MileStoneTable").find("tr:gt(0)").remove();
                $("#MileStoneTable tbody").append(htm);
                GetPointsList();
                $("#preloader").hide();
            },
            error: function (result) {
                showToaster("error", "Error !", result);
                $("#preloader").hide();
            }
        });
    }

    function GetPointsList() {

        var data = {
            SolutionId: parseInt($("#SolutionId").val()),
            IndustryId: parseInt($("#IndustryId").val()),
            ProjectType: $("#ProjectType").val(),
        }

        $("#preloader").show();
        $.ajax({
            type: "POST",
            url: "/Home/GetPointsList",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(data),
            success: function (result) {
                var data = result.Result
                var index = 0;
                var subObj = '';
                var htm = '';
                for (index = 0; index < data.length; index++) {
                    subObj = data[index];
                    if (subObj.PointKey == null || subObj.PointKey == undefined) {
                        subObj.PointKey = ""
                    }
                    if (subObj.PointValue == null || subObj.PointValue == undefined) {
                        subObj.PointValue = ""
                    }
                    htm += '<tr>';
                    htm += '<td class=cls-milestone onclick=GetPointsDataById(' + subObj.Id + ')>' + subObj.Id + '</td>';
                    htm += '<td>' + subObj.PointKey + '</td>';
                    htm += '<td>' + subObj.PointValue + '</td>';
                    htm += '<td><a class="btn btn-danger btn-sm" onclick=DeletePointsById(' + subObj.Id + ')>Delete</a></td>';
                    htm += '</tr>';
                }
                $("#PointsTable").find("tr:gt(0)").remove();
                $("#PointsTable tbody").append(htm);
                $("#preloader").hide();
            },
            error: function (result) {
                showToaster("error", "Error !", result);
                $("#preloader").hide();
            }
        });
    }

    function OpenMileStonePopup() {
        $("#MileStonePopModal").modal('show')
    }

    function SaveMilStoneData() {
        var MileStoneData = {
            Id: $("#MileStoneId").val(),
            Description: $("#mileStoneDescription").val(),
            Title: $("#mileStoneTitle").val(),
            //DueDate: $("#mileStonedueDate").val(),
            Days: $("#txtMilestoneDays").val(),
            SolutionId: $("#SolutionId").val(),
            IndustryId: $("#IndustryId").val(),
            ProjectType: $("#ProjectType").val(),
        };
        $("#preloader").show();
        $.ajax({
            type: "POST",
            url: "/Home/SaveMileStone",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(MileStoneData),
            success: function (result) {
                $("#preloader").hide();
                showToaster("success", "Success", result.Message);
                ResetMileStoneForm()
            },
            error: function (result) {
                showToaster("error", "Error !", result);
            }
        });
    }


    function ResetMileStoneForm() {
        $("#MileStoneId").val(0);
        $("#mileStoneDescription").val("");
        $("#mileStoneTitle").val("");
        $("#txtMilestoneDays").val("0");
        $("#mileStonedueDate").val("");
        $("#MileStonePopModal").modal('hide')
        GetMiletoneList()
    }

    function OpenPointsPopup() {
        if ($("#PointsTable tbody tr").length >= 3) {
            showToaster("warning", "Warning !", "you have reached a limit for adding points");
        } else {
            $("#PointsPopModal").modal('show')
        }

    }

    function SavePointsData() {
        var PointsData = {
            Id: $("#PointsId").val(),
            PointKey: $("#pointsKey-id").val(),
            PointValue: $("#pointsValue-id").val(),
            SolutionId: $("#SolutionId").val(),
            IndustryId: $("#IndustryId").val(),
            ProjectType: $("#ProjectType").val()
        };

        $("#preloader").show();
        $.ajax({
            type: "POST",
            url: "/Home/SavePoints",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(PointsData),
            success: function (result) {
                $("#preloader").hide();
                showToaster("success", "Success", result.Message);
                ResetPointsForm()
            },
            error: function (result) {
                showToaster("error", "Error !", result);
            }
        });
    }

    function ResetPointsForm() {
        $("#PointsId").val(0);
        $("#pointsKey-id").val("");
        $("#pointsValue-id").val("");
        $("#PointsPopModal").modal('hide')
        GetPointsList()
    }

    function DeletePointsById(Id) {

        Swal.fire({
            title: 'Are you sure you want to delete points?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then(function (t) {
            if (!t.isConfirmed) return;

            var Data = {
                Id: Id,
            };
            $.ajax({
                type: "POST",
                url: "/Home/DeletePoints",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify(Data),
                success: function (result) {
                    showToaster("success", "Success", result.Message);
                    GetPointsList()
                },
                error: function (result) {
                    showToaster("error", "Error !", result);
                }
            });
        });
    }

    function DeleteMileStoneById(Id) {
        Swal.fire({
            title: 'Are you sure you want to delete milestone?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then(function (t) {
            if (!t.isConfirmed) return;
            var Data = {
                Id: Id,
            };
            $.ajax({
                type: "POST",
                url: "/Home/DeleteMileStone",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify(Data),
                success: function (result) {
                    showToaster("success", "Success", result.Message);
                    GetMiletoneList()
                },
                error: function (result) {
                    showToaster("error", "Error !", result);
                }
            });

        });
    }

    function EditMiletoneData(id) {
        var data = {
            Id: id,
        };
        $.ajax({
            type: "POST",
            url: "/Home/GetMileStoneById",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(data),
            success: function (result) {
                if (result != null) {
                    $("#MileStonePopModal").modal('show')
                    var data = result.Result;
                    $("#MileStoneId").val(data.Id);
                    $("#mileStoneDescription").val(data.Description);
                    $("#txtMilestoneDays").val(data.Days);
                    $("#mileStoneTitle").val(data.Title);
                    $("#mileStonedueDate").val(moment(data.DueDate).format('YYYY-MM-DD'));
                }
            },
            error: function (result) {
                //alert("Error occured..");
                showToaster("error", "Error !", result);
            }
        });
    }

    function GetPointsDataById(id) {
        var data = {
            Id: id,
        };
        $.ajax({
            type: "POST",
            url: "/Home/GetPointsDataById",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(data),
            success: function (result) {
                if (result != null) {
                    $("#PointsPopModal").modal('show')
                    var data = result.Result;
                    $("#PointsId").val(data.Id);
                    $("#pointsKey-id").val(data.PointKey);
                    $("#pointsValue-id").val(data.PointValue);
                }
            },
            error: function (result) {
                showToaster("error", "Error !", result);
            }
        });
    }

    function SaveSolutionIndustryDescription() {
       
        var DefineData = {
            Id: $("#ProjectOulineId").val(),
            ProjectOutline: $("#industry-ProjectOutline").val(),
            ProjectDetails: $("#industry-ProjectDetails").val(),
            SolutionId: $("#SolutionId").val(),
            IndustryId: $("#IndustryId").val(),
            ProjectType: $("#ProjectType").val(),
            Duration: $("#industry-ProjectDuration").val(),
            TeamSize: $("#industry-TeamSize").val(),
        };

        $("#preloader").show();
        $.ajax({
            type: "POST",
            url: "/Home/UpdateIndustryOutline",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(DefineData),
            success: function (result) {
                //alert(result.Message);
                showToaster("success", "Success", result.Message);
                ResetDetailsForm()
                $("#preloader").hide();
            },
            error: function (result) {
                //alert("Error occured..");
                showToaster("error", "Error !", result);
            }
        });
    }

    function ResetDetailsForm() {
        $("#industry-ProjectOutline").val("")
        $("#industry-ProjectDetails").val("")
        $("#SolutionId").val(0)
        $("#IndustryId").val(0)
        $("#ProjectType").val("SMALL")
        //ResetMileStoneForm()
        $("#DetailsPopModal").modal('hide')
    }

    $("#ProjectType").change(function () {
        GetSolutionDefineDetails()
    });
</script>