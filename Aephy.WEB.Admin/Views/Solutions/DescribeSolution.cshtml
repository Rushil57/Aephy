@{
    ViewData["Title"] = "- Describe solution";
}
<main id="main" class="main">
    <div class="row">
        <!-- Recent Sales -->
        <div class="col-12">
            <div class="card recent-sales overflow-auto">

                <div class="card-body">
                    <h5 class="card-title">Solutions</h5>

                    <table class="table table-borderless datatable" id="solutionList">
                        <thead>
                            <tr>
                                <th style="width:10%">Id</th>
                                <th style="width:10%">Title</th>
                                @*  <th style="width:10%">Sub Title</th>*@
                                <th style="width:30%">Description</th>
                                <th style="width:20%">Image</th>
                                <th style="width:10%">Services</th>
                                <th style="width:10%">Industries</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div><!-- End Recent Sales -->
    </div>
</main>

<div class="modal" id="EditsolutionModal" tabindex="-1" aria-labelledby="editSolutionModal" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Edit Solution</h4>
                <a class="close" onclick="ResetSolutionIndustryDetailForm();"><i class="bi bi-x-circle"></i></a>
            </div>
            <div class="modal-body p-0">
                <div class="row">
                    <div class="col">
                        <div class="card">
                            <div class="card-body">

                                <form class="row g-3 mt-3 cls-Solution" name="addSolutiondescribeForm">
                                    <input type="hidden" id="SolutionDetailsId" value="0">
                                    <input type="hidden" id="SolutionId" value="0">
                                    <input type="hidden" id="IndustryId" value="0">
                                    <input type="hidden" id="ImagePath" value="">

                                    <div class="col-12" style="display:none;">
                                        <label for="SolutionTitle" class="form-label">Solution Title</label>
                                        <div class="input-group">
                                            <input type="text" class="form-control" id="SolutionTitle" name="SolutionTitle" readonly>
                                        </div>
                                    </div>
                                    <div class="col-12 cls-subtitle" style="display:none;">
                                        <label for="Solution_SubTitle" class="form-label">Solution SubTitle</label>
                                        <div class="input-group">
                                            <input type="text" class="form-control" id="Solution_SubTitle" name="Solution_SubTitle" readonly>
                                        </div>
                                    </div>
                                    <div class="col-12">
                                        <label for="Services" class="form-label">Services</label>
                                        <div class="input-group" id="services">
                                            <select data-placeholder="Choose tags ..." id="drp-services" name="SolutionServices" class="form-control" disabled>
                                                <option value="">Choose Services</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-12" style="display:none;">
                                        <label for="SolutionDescription" class="form-label">Solution Description</label>
                                        <div class="input-group">
                                            <textarea class="form-control" id="SolutionDescription" name="SolutionDescription" style="height:100px;" readonly></textarea>
                                        </div>
                                    </div>
                                    <div class="col-12" id="img-id" style="display:none;">
                                        <label for="SolutionImage" class="form-label">Image</label>
                                        <div class="input-group">
                                            <input type="file" class="form-control" id="SolutionImage" name="SolutionImage" disabled />
                                        </div>
                                        <div id="solutionImagepreview"></div>
                                    </div>

                                    <div class="col-12">
                                        <div class="input-group">
                                            <table class="table" id="AssignFreeLancerTable">
                                                <thead style="border: 1px solid #e8e8e8;">
                                                    <tr>
                                                        <th>Id</th>
                                                        <th>First Name</th>
                                                        <th>Last Name</th>
                                                        <th>Freelancer Level</th>
                                                        <th>Delete</th>
                                                    </tr>
                                                </thead>
                                                <tbody class="AssignFreeLancerbody">
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>

                                    <div class="col-12" id="main-industry-div">
                                        <label for="Industries" class="form-label">Industries</label>
                                        <div class="input-group" id="industries">
                                            <select data-placeholder="Choose tags ..." name="Industries" multiple class="chosen-select" id="drp-industries">
                                            </select>
                                        </div>
                                    </div>

                                    <div class="col-12" style="display:none">
                                        <label for="IsActiveByAdmin" class="form-label">Is Active</label>
                                        <div class="input-group" id="IsActiveByAdmindiv">
                                            <input type="checkbox" id="IsActiveByAdmin" class="form-check-input" />
                                        </div>
                                    </div>

                                    <div class="col-12 pt-3">
                                        <label for="drp-assigned-freelancers" class="form-label">
                                            <a class="text-primary" onclick="OpenTopProfessionalsPopup();">Add Top Professionals</a>
                                        </label>

                                        <table class="table" id="TopProfessionalTable">
                                            <thead style="border: 1px solid #e8e8e8;">
                                                <tr>
                                                    <th>Id</th>
                                                    <th>Title</th>
                                                    <th>Description</th>
                                                    <th>Rate</th>
                                                    <th>Delete</th>
                                                </tr>
                                            </thead>
                                            <tbody class="AssignFreeLancerbody">
                                            </tbody>
                                        </table>

                                    </div>

                                    <div class="col-12 pt-3">
                                        <label for="successfullProject" class="form-label">
                                            <a class="text-primary" onclick="OpenSuccessfullPopup();">Add Successfull Projects</a>
                                        </label>

                                        <table class="table" id="SuccessfullProjectTable">
                                            <thead style="border: 1px solid #e8e8e8;">
                                                <tr>
                                                    <th>Id</th>
                                                    <th>Title</th>
                                                    <th>Description</th>
                                                    <th>Delete</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                            </tbody>
                                        </table>

                                    </div>


                                    <div class="col-12">
                                        <label for="IsActiveForFreelancer" class="form-label">Is Active For Freelancer</label>
                                        <input type="checkbox" id="IsActiveForFreelancer" class="form-check-input" />
                                    </div>

                                    <div class="col-12">
                                        <label for="IsActiveForClient" class="form-label">Is Active For Client</label>
                                        <input type="checkbox" id="IsActiveForClient" class="form-check-input" />
                                    </div>

                                    <div class="text-center">
                                        <button type="submit" class="btn btn-brand">Submit</button>
                                        <button type="reset" class="btn btn-secondary" onclick="ResetSolutionIndustryDetailForm();">Close</button>
                                    </div>

                                    <hr />
                                    Project Architecture - Details

                                    <div class="col-12">
                                        <label for="ProjectType" class="form-label">Select Project Type</label>
                                        <div class="input-group">
                                            <select class="form-select" name="ProjectType" id="ProjectType">
                                                <option value="SMALL">Small</option>
                                                <option value="MEDIUM">Medium</option>
                                                <option value="LARGE">Large</option>
                                            </select>
                                        </div>
                                    </div>

                                    <div class="col-12">
                                        <label for="ProjectDetails" class="form-label">Project Details</label>
                                        <div class="input-group">
                                            <textarea class="form-control" id="projectDetails" name="projectDetails" style="height:100px;" readonly></textarea>
                                        </div>
                                    </div>

                                    <div class="col-12">
                                        <label for="SolutionDescription" class="form-label">Project Outline</label>
                                        <div class="input-group">
                                            <textarea class="form-control" id="projectOutline" name="projectOutline" style="height:100px;" readonly></textarea>
                                        </div>
                                    </div>

                                    <div class="col-12">
                                        <label for="ProjectDuration" class="form-label">Project Duration</label>
                                        <input type="text" class="form-control" id="industry-ProjectDuration" name="ProjectDuration" placeholder="Project Duration" readonly>
                                    </div>

                                    <div class="col-12">
                                        <label for="TeamSize" class="form-label">Team Size</label>
                                        <input type="text" class="form-control" id="industry-TeamSize" name="TeamSize" value="2" readonly>
                                    </div>
                                    <div class="col-12">
                                        <label for="SolutionDescription" class="form-label">Milestone(s)</label>
                                        <div class="input-group">
                                            <table class="table" id="MileStoneTable">
                                                <thead style="border: 1px solid #e8e8e8;">
                                                    <tr>
                                                        <th>Id</th>
                                                        <th>Description</th>
                                                        <th>Title</th>
                                                        <th>Days</th>
                                                        <th></th>
                                                    </tr>
                                                </thead>
                                                <tbody class="MileStonebody">
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>


                                    <div class="col-12">
                                        <label for="points" class="form-label">Highlight(s)</label>
                                        <div class="input-group">
                                            <table class="table" id="PointsTable">
                                                <thead style="border: 1px solid #e8e8e8;">
                                                    <tr>
                                                        <th>Id</th>
                                                        <th>Label</th>
                                                        <th>Value</th>
                                                        <th></th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                    <div class="text-center">
                                        <button type="button" onclick="ActionByAdminOnSolution('1')" class="btn btn-brand">Approve</button>
                                        <button type="button" onclick="ActionByAdminOnSolution('2')" class="btn btn-secondary">Reject</button>
                                    </div>
                                </form><!-- Vertical Form -->


                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal" id="addFreeLanceModal" tabindex="-1" aria-labelledby="guidelineModal" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Add New User</h4>
                <a class="close" onclick="ResetFreeLanceForm();"><i class="bi bi-x-circle"></i></a>
            </div>
            <div class="modal-body p-0">
                <div class="row">
                    <div class="col">
                        <div class="card">
                            <div class="card-body">
                                <!-- Vertical Form -->
                                <form class="row g-3 mt-3" name="addInviteForm">

                                    <div class="col-12">
                                        <label for="FreeLancerLavel" class="form-label">Select Level</label>
                                        <div class="input-group">
                                            <select class="form-select" aria-label="Default select example" name="level" id="FreeLancerLavel">
                                                <option value="">Select Level</option>
                                                <option value="Expert">Expert</option>
                                                <option value="Associate">Associate</option>
                                                <option value="Project Manager">Project Manager</option>
                                            </select>
                                        </div>
                                    </div>

                                    <div class="col-12">
                                        <label for="FreeLancers" class="form-label">Freelancers</label>
                                        <div class="input-group">
                                            <table class="table" id="FreeLancerTable">
                                                <thead style="border: 1px solid #e8e8e8;">
                                                    <tr>
                                                        <th></th>
                                                        <th>First Name</th>
                                                        <th>Last Name</th>
                                                    </tr>
                                                </thead>
                                                <tbody class="FreeLancerbody">
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>

                                    <div class="text-center">
                                        <button type="button" id="AddFreeLancer" class="btn btn-brand">Add FreeLancer</button>
                                        <button type="reset" class="btn btn-secondary" onclick="ResetFreeLanceForm();">Reset</button>
                                    </div>
                                </form><!-- Vertical Form -->

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="modal" id="TopProfessional" tabindex="-1" aria-labelledby="TopProfessionalModal" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Add Top Professional</h4>
                <a class="close" onclick="ResetProfessionalForm();"><i class="bi bi-x-circle"></i></a>
            </div>
            <div class="modal-body p-0">
                <div class="row">
                    <div class="col">
                        <div class="card">
                            <div class="card-body">
                              <input type="hidden" id="TopProfessionalId" value="0" />
                                <form class="row g-3 mt-3" name="TopProfessionalForm">
                                    <div class="col-12">
                                        <label for="FreeLancer" class="form-label">Select Freelancer</label>
                                        <select class="form-select" aria-label="Default select example" name="drpfreelancer" id="drp-FreeLancer">
                                            <option value="">Select Freelancer</option>
                                        </select>
                                    </div>

                                    <div class="col-12">
                                        <label for="FreelancerTitle" class="form-label">Title</label>
                                        <input type="text" id="FreelancerTitle" class="form-control" name="FreelancerTitle" />
                                    </div>

                                    <div class="col-12">
                                        <label for="Description" class="form-label">Description</label>
                                        @*<input type="text" id="TopDescription" class="form-control" name="topDescription"/>*@
                                        <textarea type="text" id="TopDescription" class="form-control" name="topDescription" rows="4" cols="50"></textarea>
                                    </div>

                                    <div class="col-12">
                                        <label for="projectRate" class="form-label">Rate</label>
                                        <input type="text" id="projectRate" class="form-control" name="projectrate" />
                                    </div>

                                    <div class="col-12">
                                        <label for="freelancerprofile" class="form-label">Profile Upload</label>
                                        <input type="file" id="freelancerProfile" class="form-control" onchange="ChangeUserUploadImage(this)" />
                                        <div id="UserImagepreview"></div>
                                    </div>

                                 @*   <div class="col-12">
                                        <label for="IsActiveTopProffesional" class="form-label">Active Top Professional</label>
                                        <input type="checkbox" id="IsActiveTopProffesional" class="form-check-input" />
                                    </div>*@

                                    <div class="col-12">
                                        <input type="checkbox" id="IsVisibleOnLandingPage" class="form-check-input" />
                                        <label for="IsVisibleOnLandingPage" class="form-label"> Is Visible On Landing Page</label>
                                    </div>

                                    <div class="text-center">
                                        <button type="submit" id="AddTopProfessional" class="btn btn-brand">Save</button>
                                        <button type="reset" class="btn btn-secondary" onclick="ResetProfessionalForm();">Reset</button>
                                    </div>
                                </form>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal" id="SuccessfullProject" tabindex="-1" aria-labelledby="SuccessfullProjectModal" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Add Successfull Project</h4>
                <a class="close" onclick="ResetSuccessfullProjectForm();"><i class="bi bi-x-circle"></i></a>
            </div>
            <div class="modal-body p-0">
                <div class="row">
                    <div class="col">
                        <div class="card">
                            <div class="card-body">
                                <input type="hidden" id="SuccessfullProjectId" value="0" />
                                <form class="row g-3 mt-3" name="SuccessfullProjectForm" id="ProjectFormId">
                                    <div class="col-12">
                                        <label for="SuccessfullProjectTitle" class="form-label">Title</label>
                                        <input type="text" id="SuccessfullProjectTitle" class="form-control" name="SuccessfullprojectTitle" />
                                    </div>

                                    <div class="col-12">
                                        <label for="Description" class="form-label">Description</label>
                                        <textarea type="text" id="SuccessfullProjectDescription" class="form-control" name="SuccessfullprojectDescription" rows="4" cols="50"></textarea>
                                    </div>

                                    <div class="col-12">
                                        <label for="IsActiveProject" class="form-label">Active Project</label>
                                        <input type="checkbox" id="IsActiveProject" class="form-check-input" />
                                    </div>

                                    <div class="text-center">
                                        <button type="submit" id="AddSuccessfullProject" class="btn btn-brand">Save</button>
                                    </div>

                                    <div class="col-12">
                                        <button type="button" class="btn btn-primary" onclick="OpenResultPopUp()" id="result-btn" disabled>Add Result</button>
                                    </div>

                                    <div class="col-12">
                                        <table class="table" id="ResultTable">
                                            <thead style="border: 1px solid #e8e8e8;">
                                                <tr>
                                                    <th>Id</th>
                                                    <th>Key</th>
                                                    <th>value</th>
                                                    <th>Delete</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                            </tbody>
                                        </table>
                                    </div>

                                    <div class="text-center">
                                        <button type="reset" class="btn btn-secondary" onclick="ResetSuccessfullProjectForm();">Close</button>
                                    </div>
                                </form>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal" id="SuccessfullProjectResult" tabindex="-1" aria-labelledby="SuccessfullProjectResultModal" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Add Project Result</h4>
                <a class="close" onclick="ResetResultForm();"><i class="bi bi-x-circle"></i></a>
            </div>
            <div class="modal-body p-0">
                <div class="row">
                    <div class="col">
                        <div class="card">
                            <div class="card-body">
                                <input type="hidden" id="ProjectResultId" value="0" />
                                <form class="row g-3 mt-3" name="ResultForm" id="resultFormId">
                                    <div class="col-12">
                                        <label for="ResultKey" class="form-label">Key</label>
                                        <input type="text" id="ResultKey" class="form-control" name="Resultkey" placeholder="Key" />
                                    </div>

                                    <div class="col-12">
                                        <label for="ResultValue" class="form-label">Value</label>
                                        <input type="text" id="ResultValue" class="form-control" name="Resultvalue" placeholder="Value" />
                                        @*<textarea type="text" id="ResultValue" class="form-control" name="Resultvalue"></textarea>*@
                                    </div>

                                    <div class="text-center">
                                        <button type="submit" class="btn btn-brand">Save</button>
                                        <button type="reset" class="btn btn-secondary" onclick="ResetResultForm();">Reset</button>
                                    </div>
                                </form>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



<script>

    /*
        hote code for finalIdsData and architectData dont change this array and array function.
        without full flow knowladge change to hight chance to breack FreelancerPool table entry.
    */

    let finalIdsData = [];
    let architectData = [];


    $(function () {
        $("form[name='addSolutiondescribeForm']").validate({
            rules: {
                SolutionTitle: { required: true },

            },
            messages: {
                SolutionTitle: { required: "please select solution" },

            },
            submitHandler: function (form) {
                SaveDescribeSolutionData()
            }
        });
        $("form[name='TopProfessionalForm']").validate({
            rules: {
                drpfreelancer: { required: true },
                FreelancerTitle: { required: true },
                topDescription: { required: true },
                projectrate: {
                    required: true,
                    number: true
                },
            },
            messages: {
                drpfreelancer: { required: "Please select valid option" },
                FreelancerTitle: { required: "Please enter title" },
                topDescription: { required: "Please enter description" },
                projectrate: {
                    required: "Please enter rate",
                    number: "Enter valid rate"
                },
            },
            submitHandler: function (form) {
                SaveTopProfessionalData()
            }
        });

        $("form[name='ResultForm']").validate({
            rules: {
                Resultkey: { required: true },
                Resultvalue: { required: true }
            },
            messages: {
                Resultkey: { required: "Please enter valid key" },
                Resultvalue: { required: "Please enter valid value" }
            },
            submitHandler: function (form) {
                SaveProjectResult()
            }
        });

        $("form[name='SuccessfullProjectForm']").validate({
            rules: {
                SuccessfullprojectTitle: { required: true },
                SuccessfullprojectDescription: { required: true }
            },
            messages: {
                SuccessfullprojectTitle: { required: "Please enter proper title" },
                SuccessfullprojectDescription: { required: "Please enter proper description" }
            },
            submitHandler: function (form) {
                SaveSuccessfullProject()
            }
        });

        GetSolutionList()
        $(".cls-subtitle").css("display", "none")
        $("#ProjectType").change(function () {
            GetSolutionDefineDetails()
        });

    });

    function GetSolutionList() {
        $("#preloader").show();
        $.ajax({
            type: "Get",
            url: "@Url.Action("GetSolutionsIndustryDetailList", "Solutions")",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                $("#preloader").hide();
                $('#solutionList').DataTable({
                    destroy: true,
                    data: result.Result,
                    "columns": [
                        {
                            "data": "Id",
                            "render": function (data, type, row) {
                                return '<a class="cls-service" onclick=GetSolutionDetailsDataById(' + data + ')>' + data + '</a>';
                            }
                        },
                        {
                            "data": "Title",
                            "render": function (data, type, row) {
                                var title = data.length > 35 ? data.substring(0, 35) + "..." : data;
                                return "<span title='" + data + "'>" + title + "</span>";
                            }
                        },
                        //{ "data": "SubTitle" },
                        {
                            "data": "Description",
                            "render": function (data, type, row) {
                                if (data != null) {
                                    var description = data.length > 35 ? data.substring(0, 35) + "..." : data;
                                    return "<span title='" + data + "'>" + description + "</span>";
                                }
                                else {
                                    return "<span></span>";
                                }

                            }
                        },
                        {
                            "data": "ImageUrlWithSas",
                            "render": function (data, type, row) {
                                if (data != null) {
                                    return '<img src="' + data + '" alt="Image" height="70" width="150" />';
                                }
                                else {
                                    return "<span></span>";
                                }

                            }
                        },
                        { "data": "Services" },
                        { "data": "Industries" }

                    ]
                });


            },
            error: function (result) {
                //alert("failure");
                showToaster("error", "Error !", "Failure");
            }
        });
    }


    function GetSolutionDetailsDataById(Id) {
        var ServiceData = {
            Id: Id,
        };
        $("#preloader").show();
        $("#drp-assigned-freelancers").empty();
        $("#MileStoneTable tbody").empty();
       // GetFreelancerList();
        $.ajax({
            type: "POST",
            url: "@Url.Action("GetSolutionDetailsById", "Solutions")",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(ServiceData),
            success: function (result) {
                var data = result.Result;
                $("#EditsolutionModal").modal('show')
                $("#SolutionDetailsId").val(data.SolutionIndustryDetails.Id)
                $("#SolutionTitle").val(data.Solution.Title)
                $("#SolutionId").val(data.Solution.Id)
                $("#IndustryId").val(data.Industryname.Id)
                $("#Solution_SubTitle").val(data.Solution.SubTitle)
                $("#SolutionDescription").val(data.Solution.Description)
                $("#drp-assigned-freelancers").val(data.SolutionIndustryDetails.AssignedFreelancerId).trigger('chosen:updated');
                $("#drp-services").val(data.Services.ServicesId)
                $('#drp-industries').val(data.Industryname.Id).trigger('chosen:updated');
                $('#drp-industries option').attr('disabled', true).trigger('chosen:updated');
                $("#solutionImagepreview").find("span").first().remove();
                $("#IsActiveByAdmin").prop('checked', data.SolutionIndustryDetails.IsActiveByAdmin == 1 ? true : false);
                $("#IsActiveForFreelancer").prop('checked', data.SolutionIndustryDetails.IsActiveForFreelancer == 1 ? true : false);
                $("#IsActiveForClient").prop('checked', data.SolutionIndustryDetails.IsActiveForClient == 1 ? true : false);
                //
                //$("#projectOutline").val(data.SolutionIndustryDetails.ProjectOutline);
                //$("#projectDetails").val(data.SolutionIndustryDetails.ProjectDetails);


                if (data.SolutionDefine != null) {
                    $("#projectOutline").val(data.SolutionDefine.ProjectOutline);
                    $("#projectDetails").val(data.SolutionDefine.ProjectDetails);
                    $("#industry-ProjectDuration").val(data.SolutionDefine.Duration)
                }

                var htm = '';
                if (data.MilestoneDetails.length > 0) {
                    for (index = 0; index < data.MilestoneDetails.length; index++) {
                        subObj = data.MilestoneDetails[index];

                        htm += '<tr>';
                        htm += '<td>' + subObj.Id + '</td>';
                        htm += '<td>' + subObj.Description + '</td>';
                        htm += '<td>' + subObj.Title + '</td>';
                        htm += '<td>' + subObj.Days + '</td>';
                        htm += '<td><a class="text-danger" onclick=DeleteMileStoneById(' + subObj.Id + ')>Delete</a></td>';
                        htm += '</tr>';
                    }
                }
                $("#MileStoneTable").find("tr:gt(0)").remove();
                $("#MileStoneTable tbody").append(htm);


                var pointsTable = '';
                if (data.PointsDetails.length > 0) {
                    for (index = 0; index < data.PointsDetails.length; index++) {
                        subObj = data.PointsDetails[index];
                        if (subObj.PointKey == null || subObj.PointKey == undefined) {
                            subObj.PointKey = ""
                        }
                        if (subObj.PointValue == null || subObj.PointValue == undefined) {
                            subObj.PointValue = ""
                        }
                        pointsTable += '<tr>';
                        pointsTable += '<td>' + subObj.Id + '</td>';
                        pointsTable += '<td>' + subObj.PointKey + '</td>';
                        pointsTable += '<td>' + subObj.PointValue + '</td>';
                        pointsTable += '<td><a class="text-danger" onclick=DeleteHighlightById(' + subObj.Id + ')>Delete</a></td>';
                        pointsTable += '</tr>';
                    }
                }
                $("#PointsTable").find("tr:gt(0)").remove();
                $("#PointsTable tbody").append(pointsTable);


                $('#solutionImagepreview').show();
                var span = document.createElement('span');
                span.innerHTML =
                    ['<img class="SolutionImage" src="', data.Solution.ImageUrlWithSas, '" style="height:200px;width:200px;"/>']
                        .join('');
                document.getElementById('solutionImagepreview').insertBefore(span, null);

                BindIndustriesControles(data.Industryname, data.SolutionIndustryDetails);

                //--- FreeLancer pool entry bind --//
                DestroyDatatable("#AssignFreeLancerTable");
                finalIdsData = [];
                architectData = [];
                if (data.FreeLancerPoolIds.length > 0) {
                    data.FreeLancerPoolIds.forEach(function (key) {
                        finalIdsData.push(key);
                    });

                    RefreshDataTable();
                }
               
                //--- FreeLancer pool entry bind end --//
                GetTopProfessionalList()
                GetProjectList()
                $("#preloader").hide();
            },
            error: function (result) {
                showToaster("error", "Error !", "Something went wrong !!");
            }
        });
    }

    function GetFreelancerList() {
        $.ajax({
            type: "Get",
            url: "@Url.Action("GetFreelancers", "Solutions")",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                $.each(result.Result, function (data, value) {
                    $("#drp-assigned-freelancers").append($("<option     />").val(value.Id).text(value.FirstName + " " + value.LastName));
                });
                $('#drp-assigned-freelancers').trigger('chosen:updated');
            },
            error: function (err) {
                $("#preloader").hide();
                //alert("Something Went Wrong!");
                showToaster("error", "Error !", "Something went wrong !!");
            }
        });
    }

    function GetAssignedFreelancerById() {
        $.ajax({
            type: "Get",
            url: "@Url.Action("GetFreelancers", "Solutions")",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                $.each(result.Result, function (data, value) {
                    $("#drp-assigned-freelancers").append($("<option     />").val(value.Id).text(value.FirstName + " " + value.LastName));
                });
                $('#drp-assigned-freelancers').trigger('chosen:updated');
            },
            error: function (err) {
                $("#preloader").hide();
                //alert("Something Went Wrong!");
                showToaster("error", "Error !", "Something went wrong !!");
            }
        });
    }

    function BindIndustriesControles(value, IndustryValue) {
        if (IndustryValue.Description == null) {
            IndustryValue.Description = "";
        }
        $('.cls-industriesdiv').remove();
        var addcontrols = "<div class='cls-industriesdiv'>" +
            "<div class='col-12'>" +
            "<label class='form-label'>Description (" + value.IndustryName + ") </label>" +
            "<div class='input-group'>" +
            //"<textarea type='text' class='form-control industrydescription' id=\"Description_" + value.IndustryName + "\" value=" + IndustryValue.Description + "></textarea>" +
            '<input type="text" class="form-control industrydescription"  value="' + IndustryValue.Description + '">' +
            "</div>" +
            "</div>" +
            "<div class='col-12'>" +
            "<label class='form-label'>Image (" + value.IndustryName + ")</label>" +
            "<div class='input-group'>" +
            "<input type='file' class='form-control industryImage' id=\"Image_" + value.IndustryName + "\" onchange='ChangeUploadImage(this)'>" +
            "</div>" +
            '<div id=solutionDetailsImagepreview_' + value.IndustryName + '>' +
            "</div>" +
            "</div>"
        $(addcontrols).insertAfter("#main-industry-div");

        if (IndustryValue.ImageUrlWithSas != null) {
            $("#solutionDetailsImagepreview_" + value.IndustryName).find("span").first().remove();
            $('#solutionDetailsImagepreview_' + value.IndustryName).show();
            var span = document.createElement('span');
            span.innerHTML =
                ['<img class="SolutionImage" src="', IndustryValue.ImageUrlWithSas, '" style="height:200px;width:200px;"/>']
                    .join('');
            if (document.getElementById('solutionDetailsImagepreview_' + value.IndustryName) != null) {
                document.getElementById('solutionDetailsImagepreview_' + value.IndustryName).insertBefore(span, null);
            }
        }
    }

    function ChangeUploadImage(value) {
        var name = value.id.split("_")[1]
        if (value.files && value.files[0]) {
            var reader = new FileReader();
            reader.onload = (function (e) {
                $("#solutionDetailsImagepreview_" + name).find("span").first().remove();
                $('#solutionDetailsImagepreview_' + name).show();
                var span = document.createElement('span');
                span.innerHTML =
                    ['<img class="SolutionImage" src="', e.target.result, '" title="', escape(e.name), '" style="height:200px;width:200px;"/>']
                        .join('');

                if (document.getElementById('solutionDetailsImagepreview_' + name) != null) {
                    document.getElementById('solutionDetailsImagepreview_' + name).insertBefore(span, null);
                }

            });

            reader.readAsDataURL(value.files[0]);
        }
    }

    function SaveDescribeSolutionData() {
        var freelancerId = $("#drp-assigned-freelancers").val();
        var fileUpload = $(".industryImage").get(0);
        var files = fileUpload.files;
        var SolutionData = {
            Id: $("#SolutionDetailsId").val(),
            Description: $(".industrydescription").val(),
            AssignedFreelancerIds: finalIdsData,
            IsArchitectIds: architectData,
            ActiveByAdmin: $("#IsActiveByAdmin").prop('checked') ? 1 : 2,
            IsActiveForFreelancer: $("#IsActiveForFreelancer").prop('checked') ? true : false,
            IsActiveForClient: $("#IsActiveForClient").prop('checked') ? true : false,
            SolutionId: $("#SolutionId").val(),
            IndustryId: $("#IndustryId").val(),
        };
        var formData = new FormData();
        for (var i = 0; i < files.length; i++) {
            formData.append("httpPostedFileBase", files[i]);
        }
        formData.append("SolutionData", JSON.stringify(SolutionData));
        $("#preloader").show();
        $.ajax({
            url: '/Solutions/AddorEditSolutionDetails',
            type: "POST",
            contentType: false,
            processData: false,
            data: formData,
            dataType: 'json',
            success: function (result) {
                $("#preloader").hide();
                //alert(result.Message);
                showToaster("success", "Success", result.Message);
                ResetSolutionIndustryDetailForm();
                GetSolutionList();
            },
            error: function (err) {
                $("#preloader").hide();
                //alert("Something Went Wrong!");
                showToaster("error", "Error !", "Something went wrong !!");
            }
        });
    }

    function ResetSolutionIndustryDetailForm() {
        $("#EditsolutionModal").modal('hide');
        $("#solution-img").remove();
        $("#SolutionTitle").val("");
        $("#Solution_SubTitle").val("");
        $("#SolutionDescription").val("");
        $("#SolutionImage").val("");
        $('#drp-services').val("").trigger('chosen:updated');
        $("#drp-industries").val("").trigger('chosen:updated');

        $("#SolutionDetailsId").val(0);
        $("#SolutionId").val(0);
        $("#IndustryId").val(0);
        $("#ProjectType").val("SMALL");
        $(".SolutionImage").attr('src', "");
        $("#solutionImagepreview").hide();
        $("#ImagePath").val("");
        $('.cls-industriesdiv').remove();

        $("#projectDetails").val('');
        $("#projectOutline").val('');
        $("#industry-ProjectDuration").val("");
        $("#industry-TeamSize").val(2);
    }

    function ActionByAdminOnSolution(actionVal) {
        try {
            $("#preloader").show();
            $.ajax({
                url: '/Solutions/ActionByAdminOnSolution?solutionIndustryDetailsId=' + $("#SolutionDetailsId").val() + '&actionType=' + actionVal,
                type: "POST",
                data: {},
                dataType: 'json',
                success: function (result) {
                    $("#preloader").hide();
                    //alert(result.Message);
                    showToaster("success", "Success", result.Message);
                    ResetSolutionIndustryDetailForm();
                    GetSolutionList();
                },
                error: function (err) {
                    $("#preloader").hide();
                    //alert("Something Went Wrong!");
                    showToaster("error", "Error !", "Something went wrong !!");
                }
            });
        }
        catch (err) {
            //alert(err);
            showToaster("error", "Error !", err);
        }
    }

    function OpenFreelancePopup() {
        $("#EditsolutionModal").modal('hide');
        $("#addFreeLanceModal").modal('show');

        DestroyDatatable("#FreeLancerTable");
        $("#FreeLancerLavel").val('');
    }

    function ResetFreeLanceForm() {
        $("#addFreeLanceModal").modal('hide');
        $("#EditsolutionModal").modal('show');
    }

    $("#FreeLancerLavel").change(function () {

        $.ajax({
            type: "GET",
            url: "@Url.Action("GetFreeLancerByType", "Solutions")",
            data: { freeLancerLavel: this.value },
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {

                $('#FreeLancerTable').DataTable({
                    destroy: true,
                    data: result.Result,
                    paging: false,
                    lengthChange: false,
                    searching: false,
                    ordering: false,
                    info: false,
                    autoWidth: false,
                    responsive: false,
                    "columns": [
                        {
                            "data": "Id",
                            "render": function (data, type, row) {
                                return "<input type=\"checkBox\" class=\"chkFreeLancers\" id=\"" + row.Id + "\" value=\"" + row.Id + "\"/>";
                            }
                        },
                        { "data": "FirstName" },
                        { "data": "LastName" },
                    ]
                });
            },
            error: function (result) {
                showToaster("error", "Error !", "Something went wrong !!");
            }

        });

    });


    $("#AddFreeLancer").click(function () {

        $('.chkFreeLancers:checked').each(function (i) {
            finalIdsData.push($(this).val());
        });

        if ($("#FreeLancerLavel").val() != '' && finalIdsData.length != 0) {
            RefreshDataTable();
        }
        else {
            showToaster("error", "Validation Error !", "Please select Level or Freelancer");
        }
    });

    function RemoveFreeLancer(id) {
        const index = finalIdsData.indexOf(id);
        if (index > -1) {
            finalIdsData.splice(index, 1);
        }

        RefreshDataTable();
    }

    function RefreshDataTable() {

        var userIdsModel = {
            Ids: finalIdsData,
            SolutionId: parseInt($("#SolutionId").val()),
            IndustryId: parseInt($("#IndustryId").val()),
        };

        $.ajax({
            type: "POST",
            url: "@Url.Action("GetUsersByIds", "Solutions")",
            data: JSON.stringify(userIdsModel),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {

                $("#addFreeLanceModal").modal('hide');
                $("#EditsolutionModal").modal('show');

                $('#AssignFreeLancerTable').DataTable({
                    destroy: true,
                    data: result.Result,
                    //paging: false,
                    lengthChange: false,
                    //searching: false,
                    //ordering: false,
                    info: false,
                    autoWidth: false,
                    //responsive: false,
                    "columns": [
                        { "data": "Id", "visible": false },
                        { "data": "FirstName" },
                        { "data": "LastName" },
                        { "data": "Lavel" },
                        {
                            "data": "Id",
                            "render": function (data, type, row) {
                                return "<a class=\"text-danger\" checked=\"true\" onclick=\"RemoveFreeLancer('" + row.Id + "');\">Delete</a>";
                            }
                        },
                    ]
                });

                CheckArchitect();
            },
            error: function (result) {
                showToaster("error", "Error !", "Something went wrong !!");
            }
        });
    }

    function DestroyDatatable(tableId) {
        var table = $(tableId).DataTable({
            destroy: true,
            paging: false,
            lengthChange: false,
            searching: false,
            ordering: false,
            info: false,
            autoWidth: false,
            responsive: false,
        });
        table.clear().draw();
    }

    function FillArchitect() {

        architectData = [];

        $(".chkArchitect:checked").each(function (i) {

            if (architectData.length >= 1) {
                showToaster("error", "Maximum Limit !", "Select only one architect per solution.");
                CheckArchitect();
            }
            else {
                architectData.push($(this).val());
            }

        });
    }

    function CheckArchitect() {

        $(".chkArchitect:checked").each(function (i) {
            $("#chk_" + $(this).val()).prop('checked', false);
        });

        architectData.forEach(function (key) {
            $("#chk_" + key).prop('checked', true);
        });
    }


    function GetSolutionDefineDetails() {

        var data = {
            SolutionId: parseInt($("#SolutionId").val()),
            IndustryId: parseInt($("#IndustryId").val()),
            ProjectType: $("#ProjectType").val()
        };

        $("#preloader").show();

        $.ajax({
            type: "POST",
            url: "@Url.Action("GetSolutionDefineData", "Solutions")",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(data),
            success: function (result) {
                console.log(result);

                var data = result.Result;
                if (result.StatusCode == 200) {
                    if (data.SolutionDefine != null) {
                        $("#projectDetails").val(data.SolutionDefine.ProjectDetails);
                        $("#projectOutline").val(data.SolutionDefine.ProjectOutline);
                        $("#industry-ProjectDuration").val(data.SolutionDefine.Duration)
                    }
                    else {
                        $("#projectDetails").val("");
                        $("#projectOutline").val("");
                        $("#industry-ProjectDuration").val("")
                    }
                    var htm = '';
                    if (data.SolutionMilestone.length > 0) {
                        for (index = 0; index < data.SolutionMilestone.length; index++) {
                            subObj = data.SolutionMilestone[index];

                            htm += '<tr>';
                            htm += '<td>' + subObj.Id + '</td>';
                            htm += '<td>' + subObj.Description + '</td>';
                            htm += '<td>' + subObj.Title + '</td>';
                            htm += '<td>' + subObj.Days + '</td>';
                            htm += '<td><a class="text-danger" onclick=DeleteMileStoneById(' + subObj.Id + ')>Delete</a></td>';
                            htm += '</tr>';
                        }
                    }
                    $("#MileStoneTable").find("tr:gt(0)").remove();
                    $("#MileStoneTable tbody").append(htm);


                    var pointsTable = '';
                    if (data.SolutionPoints.length > 0) {
                        for (index = 0; index < data.SolutionPoints.length; index++) {
                            subObj = data.SolutionPoints[index];
                            if (subObj.PointKey == null || subObj.PointKey == undefined) {
                                subObj.PointKey = ""
                            }
                            if (subObj.PointValue == null || subObj.PointValue == undefined) {
                                subObj.PointValue = ""
                            }
                            pointsTable += '<tr>';
                            pointsTable += '<td>' + subObj.Id + '</td>';
                            pointsTable += '<td>' + subObj.PointKey + '</td>';
                            pointsTable += '<td>' + subObj.PointValue + '</td>';
                            pointsTable += '<td><a class="text-danger" onclick=DeleteHighlightById(' + subObj.Id + ')>Delete</a></td>';
                            pointsTable += '</tr>';
                        }
                    }
                    $("#PointsTable").find("tr:gt(0)").remove();
                    $("#PointsTable tbody").append(pointsTable);

                    $("#preloader").hide();
                }
                else {
                    showToaster("error", "Error !", "Failure");
                }
                var ProjectType = $("#ProjectType").val();
                if (ProjectType == "LARGE") {
                    $("#industry-TeamSize").val(5);
                }
                if (ProjectType == "MEDIUM") {
                    $("#industry-TeamSize").val(3);
                }
                if (ProjectType == "SMALL") {
                    $("#industry-TeamSize").val(2);
                }
            },
            error: function (result) {
                //alert("failure");
                showToaster("error", "Error !", "Failure");
                $("#preloader").hide();
            }
        });
    }

    function OpenTopProfessionalsPopup() {
        $("#TopProfessional").modal('show');
        $("#IsActiveTopProffesional").prop('checked', true);
        $("#IsVisibleOnLandingPage").prop('checked',true);
        FreelancerList()
    }

    function FreelancerList() {
        $.ajax({
            type: "Get",
            url: "@Url.Action("GetFreelancersName", "Solutions")",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                $("#drp-FreeLancer option:not(:first)").remove()
                $.each(result.Result, function (data, value) {
                    $("#drp-FreeLancer").append($("<option     />").val(value.Id).text(value.FirstName + " " + value.LastName));
                });
            },
            error: function (err) {
                $("#preloader").hide();
                showToaster("error", "Error !", "Something went wrong !!");
            }
        });
    }

    function SaveTopProfessionalData() {
        var fileUpload = $("#freelancerProfile").get(0);
        var files = fileUpload.files;

        var data = {
            Id : parseInt($("#TopProfessionalId").val()),
            SolutionId: parseInt($("#SolutionId").val()),
            IndustryId: parseInt($("#IndustryId").val()),
            FreelancerId: $("#drp-FreeLancer").val(),
            TopProfessionalTitle: $("#FreelancerTitle").val(),
            Description: $("#TopDescription").val(),
            Rate: $("#projectRate").val(),
            IsVisibleOnLandingPage: $("#IsVisibleOnLandingPage").is(':checked')
        }

        var formData = new FormData();
        for (var i = 0; i < files.length; i++) {
            formData.append("httpPostedFileBase", files[i]);
        }
        formData.append("TopProfessionalData", JSON.stringify(data));
        $("#preloader").show();
        $.ajax({
            url: '/Solutions/SaveTopProfessionalData',
            type: "POST",
            contentType: false,
            processData: false,
            data: formData,
            dataType: 'json',
            success: function (result) {
                $("#preloader").hide();
                if (result.Message == "indexOverflow") {
                    showToaster("error", "Error !", "Cannot add more Top Professionals for LandigPage!");
                }else{
                    showToaster("success", "Success", result.Message);
                }
                ResetProfessionalForm()
                GetTopProfessionalList()
            },
            error: function (err) {
                $("#preloader").hide();
                showToaster("error", "Error !", "Failure");
            }
        });
    }


    function ResetProfessionalForm() {
        $("#drp-FreeLancer").val("");
        $("#FreelancerTitle").val("");
        $("#TopDescription").val("");
        $("#projectRate").val("");
        $("#freelancerProfile").val("");
        $(".UserImage").attr('src', "");
        $("#UserImagepreview").hide();
        $("#TopProfessional").modal('hide');
        $("#TopProfessionalId").val(0);
    }
    function GetTopProfessionalList() {
        var data = {
            SolutionId: parseInt($("#SolutionId").val()),
            IndustryId: parseInt($("#IndustryId").val()),
        }
        $.ajax({
            type: "POST",
            url: "@Url.Action("GetTopProfessionalList", "Solutions")",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(data),
            success: function (result) {
                $('#TopProfessionalTable').DataTable({
                    destroy: true,
                    data: result.Result,
                    "columns": [
                        {
                            "data": "Id",
                            "render": function (data, type, row) {
                                return '<a class="cls-service" onclick="GetTopProfessionalDetails(' + data + ');">' + data + '</a>'
                            }
                        },
                        { "data": "TopProfessionalTitle" },
                        {
                            "data": "Description",
                            "render": function (data, type, row) {
                                if (data != null) {
                                    var description = data.length > 35 ? data.substring(0, 35) + "..." : data;
                                    return "<span title='" + data + "'>" + description + "</span>";
                                }
                                else {
                                    return "<span></span>";
                                }

                            }
                        },
                        { "data": "Rate" },
                        {
                            "data": "Id",
                            "render": function (data, type, row) {
                                return '<a class="text-danger" onclick="DeleteTopProfessional(' + data + ');">Delete</a>'
                            }
                        }

                    ]
                });
            },
            error: function (err) {
                $("#preloader").hide();
                showToaster("error", "Error !", "Something went wrong !!");
            }
        });
    }

    function DeleteTopProfessional(Id) {
        Swal.fire({
            text: "Are you sure want to delete top professional?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then(function (t) {
            if (!t.isConfirmed) return;

            var data = {
                Id: Id,
            };

            $.ajax({
                type: "POST",
                url: "@Url.Action("DeleteTopProfessional", "Solutions")",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify(data),
                success: function (result) {
                    showToaster("success", "Success", result.Message);
                    GetTopProfessionalList()

                },
                error: function (result) {
                    showToaster("error", "Error !", "Something went wrong !!");
                }
            });

        });
    }

    function ChangeUserUploadImage(value) {
        if (value.files && value.files[0]) {
            var reader = new FileReader();
            reader.onload = (function (e) {
                $("#UserImagepreview").find("span").first().remove();
                $('#UserImagepreview').show();
                var span = document.createElement('span');
                span.innerHTML =
                    ['<img class="UserImage" src="', e.target.result, '" title="', escape(e.name), '" style="height:200px;width:200px;"/>']
                        .join('');

                if (document.getElementById('UserImagepreview') != null) {
                    document.getElementById('UserImagepreview').insertBefore(span, null);
                }

            });

            reader.readAsDataURL(value.files[0]);
        }
    }

    function OpenSuccessfullPopup() {
        $("#SuccessfullProject").modal('show');
        $("#IsActiveProject").prop('checked', true);
        $("#result-btn").prop('disabled', true);
        GetProjectResultList();
    }

    function OpenResultPopUp() {
        if ($("#ResultTable  tbody tr").length >= 2) {
            showToaster("warning", "Warning !", "you have reached a limit for adding project result");
        } else {
            $("#SuccessfullProjectResult").modal('show')
        }
    }

    function SaveProjectResult() {
        var data = {
            Id: parseInt($("#ProjectResultId").val()),
            SolutionSuccessfullProjectId: parseInt($("#SuccessfullProjectId").val()),
            ResultKey: $("#ResultKey").val(),
            ResultValue: $("#ResultValue").val()
        }
        $("#preloader").show();
        $.ajax({
            type: "POST",
            url: "@Url.Action("AddSuccessfullProjectResult", "Solutions")",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(data),
            success: function (result) {
                showToaster("success", "Success", result.Message);
                ResetResultForm();
                GetProjectResultList();
                $("#preloader").hide();

            },
            error: function (result) {
                showToaster("error", "Error !", "Something went wrong !!");
            }
        });
    }

    function SaveSuccessfullProject() {
        var data = {
            Id: $("#SuccessfullProjectId").val(),
            SolutionId: parseInt($("#SolutionId").val()),
            IndustryId: parseInt($("#IndustryId").val()),
            Title: $("#SuccessfullProjectTitle").val(),
            Description: $("#SuccessfullProjectDescription").val(),
            IsActive: $("#IsActiveProject").is(':checked')

        }
        $("#preloader").show();
        $.ajax({
            type: "POST",
            url: "@Url.Action("AddSuccessfullProject", "Solutions")",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(data),
            success: function (result) {
                if (result.Message == "Data Save Successfully!") {
                    showToaster("success", "Success", result.Message);
                    $("#SuccessfullProjectId").val(result.Result);
                    $("#result-btn").prop('disabled', false);

                } else {
                    showToaster("success", "Success !", result.Message);
                }
                $("#preloader").hide();
                GetProjectList();

            },
            error: function (result) {
                showToaster("error", "Error !", "Something went wrong !!");
            }
        });
    }

    function ResetSuccessfullProjectForm() {
        $("#SuccessfullProjectTitle").val("");
        $("#SuccessfullProjectDescription").val("");
        $("#SuccessfullProject").modal('hide');
        $("#SuccessfullProjectId").val(0);
        $("#IsActiveProject").prop('checked', false);
        $("#ProjectFormId").data('validator').resetForm();
    }

    function GetProjectList() {
        var data = {
            SolutionId: parseInt($("#SolutionId").val()),
            IndustryId: parseInt($("#IndustryId").val()),
        }
        $.ajax({
            type: "POST",
            url: "@Url.Action("GetSuccessfullProjectList", "Solutions")",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(data),
            success: function (result) {
                $('#SuccessfullProjectTable').DataTable({
                    destroy: true,
                    data: result.Result,
                    "columns": [
                        {
                            "data": "Id",
                            "render": function (data, type, row) {
                                return '<a class="cls-service" onclick="GetSuccessfullProjectDetails(' + data + ');">' + data + '</a>'
                            }
                        },
                        { "data": "Title" },
                        {
                            "data": "Description",
                            "render": function (data, type, row) {
                                if (data != null) {
                                    var description = data.length > 35 ? data.substring(0, 35) + "..." : data;
                                    return "<span title='" + data + "'>" + description + "</span>";
                                }
                                else {
                                    return "<span></span>";
                                }

                            }
                        },
                        {
                            "data": "Id",
                            "render": function (data, type, row) {
                                return '<a class="text-danger" onclick="DeleteSuccessfullProject(' + data + ');">Delete</a>'
                            }
                        }

                    ]
                });
            },
            error: function (err) {
                $("#preloader").hide();
                showToaster("error", "Error !", "Something went wrong !!");
            }
        });
    }

    function ResetResultForm() {
        $("#ResultKey").val("");
        $("#ResultValue").val("");
        $("#SuccessfullProjectResult").modal('hide');
        $("#ProjectResultId").val(0);
        $("#resultFormId").data('validator').resetForm();
    }

    function GetProjectResultList() {
        var data = {
            Id: parseInt($("#SuccessfullProjectId").val())
        }
        $.ajax({
            type: "POST",
            url: "@Url.Action("GetProjectResultList", "Solutions")",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(data),
            success: function (result) {
                $('#ResultTable').DataTable({
                    destroy: true,
                    data: result.Result,
                    "columns": [
                        {
                            "data": "Id",
                            "render": function (data, type, row) {
                                return '<a class="cls-service" onclick="GetProjectResultDetails(' + data + ');">' + data + '</a>'
                            }
                        },
                        { "data": "ResultKey" },
                        { "data": "ResultValue" },
                        {
                            "data": "Id",
                            "render": function (data, type, row) {
                                return '<a class="text-danger" onclick="DeleteProjectResult(' + data + ');">Delete</a>'
                            }
                        }

                    ]
                });
            },
            error: function (err) {
                $("#preloader").hide();
                showToaster("error", "Error !", "Something went wrong !!");
            }
        });
    }

    function DeleteProjectResult(Id) {
        Swal.fire({
            text: "Are you sure want to delete project Result?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then(function (t) {
            if (!t.isConfirmed) return;

            var data = {
                Id: Id,
            };
            $("#preloader").show();
            $.ajax({
                type: "POST",
                url: "@Url.Action("DeleteProjectResult", "Solutions")",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify(data),
                success: function (result) {
                    showToaster("success", "Success", result.Message);
                    GetProjectResultList();
                    $("#preloader").hide();
                },
                error: function (result) {
                    showToaster("error", "Error !", "Something went wrong !!");
                }
            });

        });
    }

    function DeleteSuccessfullProject(Id) {
        Swal.fire({
            text: "Are you sure want to delete project?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then(function (t) {
            if (!t.isConfirmed) return;

            var data = {
                Id: Id,
            };
            $("#preloader").show();
            $.ajax({
                type: "POST",
                url: "@Url.Action("DeleteSuccessfullProject", "Solutions")",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify(data),
                success: function (result) {
                    showToaster("success", "Success", result.Message);
                    GetProjectList();
                    $("#preloader").hide();
                },
                error: function (result) {
                    showToaster("error", "Error !", "Something went wrong !!");
                }
            });

        });
    }

    function GetProjectResultDetails(Id) {
        var data = {
            Id: Id,
        };

        $.ajax({
            type: "POST",
            url: "@Url.Action("GetProjectResultById", "Solutions")",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(data),
            success: function (result) {
                if (result.Message == "Success") {
                    if (result != null) {
                        var data = result.Result;
                        $("#SuccessfullProjectResult").modal('show')
                        $("#ResultKey").val(data.ResultKey);
                        $("#ResultValue").val(data.ResultValue);
                        $("#ProjectResultId").val(data.Id);
                    }
                }
                else {
                    showToaster("error", "Error !", result.Message);
                }
            },
            error: function (result) {
                showToaster("error", "Error !", "Something went wrong !!");
            }
        });
    }

    function GetSuccessfullProjectDetails(Id) {
        var data = {
            Id: Id,
        };

        $.ajax({
            type: "POST",
            url: "@Url.Action("GetSuccessfullProjectDetailsById", "Solutions")",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(data),
            success: function (result) {
                if (result.Message == "Success") {
                    if (result != null) {
                        var data = result.Result;
                        $("#SuccessfullProject").modal('show')
                        $("#SuccessfullProjectTitle").val(data.Title);
                        $("#SuccessfullProjectDescription").val(data.Description);
                        $("#SuccessfullProjectId").val(data.Id);
                        if (data.IsActive) {
                            $("#IsActiveProject").prop('checked', true);
                        }
                        $("#result-btn").prop('disabled', false);
                        GetProjectResultList();
                    }
                }
                else {
                    showToaster("error", "Error !", result.Message);
                }
            },
            error: function (result) {
                showToaster("error", "Error !", "Something went wrong !!");
            }
        });
    }

    function DeleteMileStoneById(id) {
        Swal.fire({
            text: "Are you sure want to delete milestone?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then(function (t) {
            if (!t.isConfirmed) return;

            var Data = {
                Id: id,
            };
            $("#preloader").show();
            $.ajax({
                type: "POST",
                url: "@Url.Action("RemoveMileStoneData", "Solutions")",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify(Data),
                success: function (result) {
                    showToaster("success", "Success", result.Message);
                    $("#preloader").hide();
                },
                error: function (result) {
                    showToaster("error", "Error !", "Something went wrong !!");
                }
            });

        });
    }

    function DeleteHighlightById(id) {
        Swal.fire({
            text: "Are you sure want to delete highlight?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then(function (t) {
            if (!t.isConfirmed) return;

            var Data = {
                Id: id,
            };
            $("#preloader").show();
            $.ajax({
                type: "POST",
                url: "@Url.Action("RemoveHighlightData", "Solutions")",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify(Data),
                success: function (result) {
                    showToaster("success", "Success", result.Message);
                    $("#preloader").hide();
                },
                error: function (result) {
                    showToaster("error", "Error !", "Something went wrong !!");
                }
            });
        });
    }

    function GetTopProfessionalDetails(id) {
         var data = {
            Id: id,
        };
         $("#preloader").show();
        $.ajax({
            type: "POST",
            url: "@Url.Action("GetTopProfessionalDetails", "Solutions")",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(data),
            success: function (result) {
                if (result.Message == "Success") {
                    if (result != null) {
                        var data = result.Result;
                        $("#TopProfessional").modal('show')
                        FreelancerList();
                        $("#TopProfessionalId").val(data.TopProfessionalData.Id);
                        $("#FreelancerTitle").val(data.TopProfessionalData.TopProfessionalTitle);
                        $("#TopDescription").val(data.TopProfessionalData.Description);
                        $("#projectRate").val(data.TopProfessionalData.Rate);
                        $("#IsVisibleOnLandingPage").prop('checked',data.TopProfessionalData.IsVisibleOnLandingPage);
                        setTimeout(function () {
                            $("#drp-FreeLancer").val(data.TopProfessionalData.FreelancerId)
                        }, 2000);
                        if(data.FreelancerData.ImageUrlWithSas != null){
                             $("#UserImagepreview").find("span").first().remove();
                                $('#UserImagepreview').show();
                                var span = document.createElement('span');
                                span.innerHTML =
                                    ['<img class="UserImage" src="', data.FreelancerData.ImageUrlWithSas, '" style="height:200px;width:200px;"/>']
                                        .join('');

                                if (document.getElementById('UserImagepreview') != null) {
                                    document.getElementById('UserImagepreview').insertBefore(span, null);
                                }
                        }

                         $("#preloader").hide();
                    }
                }
                else {
                    showToaster("error", "Error !", result.Message);
                }
            },
            error: function (result) {
                showToaster("error", "Error !", "Something went wrong !!");
            }
        });
    }

</script>