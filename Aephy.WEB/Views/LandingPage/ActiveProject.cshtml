@using Microsoft.Extensions.Configuration  
@inject IConfiguration Configuration
@using System

@{

    ViewData["Title"] = "Active Project";
    Layout = "~/Views/Shared/_LandingPageLayout.cshtml";

      string apiKey = Configuration.GetSection("FirebaseConfig:apiKey").Value.ToString();
    string authDomain = Configuration.GetSection("FirebaseConfig:authDomain").Value.ToString();
    string projectId = Configuration.GetSection("FirebaseConfig:projectId").Value.ToString();
    string storageBucket = Configuration.GetSection("FirebaseConfig:storageBucket").Value.ToString();
    string messagingSenderId = Configuration.GetSection("FirebaseConfig:messagingSenderId").Value.ToString();
    string appId = Configuration.GetSection("FirebaseConfig:appId").Value.ToString();
    string measurementId = Configuration.GetSection("FirebaseConfig:measurementId").Value.ToString();
}
<link href="../assets/css/projectstylesheet.css" rel="stylesheet" />
<link href="~/assets/css/chat.css" rel="stylesheet" />

<main class="main cls-fixed-common" id="main">

    <div class="container">
        <div class="row">
            <!--First Main Column-->
            <div class="col-lg-7 col-12">
                <!-- ======= Project Section ======= -->
                <section id="Project" class="Project pt-4 mainProject">
                    <div class="container-flued projectBanner">
                        <h4 class="Project-title-size title-path" id="project-title"></h4>
                        <!-- First Row -->
                        <div class="row justify-content-center">
                            <div class="box px-0">
                                <!-- first column -->
                                <div class="col-0 col-sm-auto order-lg-last order-last right-box justify-content-center align-items-center" style="height:fit-content">
                                    <div class="row m-lg-2 d-flex justify-content-center align-center RButtons">
                                        <div class="col-6 d-flex justify-content-center">
                                            <label class="project-progress"></label>
                                        </div>
                                    </div>
                                    <div class="row m-lg-2 pt-4">
                                        <h5 class="section-detail-size" style="text-align:center;">
                                              Project Price & Size
                                            &nbsp;<a data-toggle="popover" class="info-popover" data-bs-content="Prices shown are an estimated average and may vary based on the freelancers' hourly rates and availability."><i class="bi bi-info-circle-fill cls-team-info-icon"></i></a>
                                        </h5>
                                    </div>
                                    <div class="row m-lg-2 pt-2 pb-2 d-flex justify-content-center align-center border-bottom border-black" style="text-align:center;">
                                        <div class="col-4">
                                        <label class="radio-inline" style="text-align:center;">
                                                <input class="form-check-input" type="radio"  id="solution-fund-radio-check" />
                                                <h4 class="projectfund-projecttype"></h4>
                                                <h5 style="opacity:0.5;" class="cls-projectPrice"></h5>
                                            </label>
                                        </div>
                                    </div>
                                    <div class="projectDetails-div">
                                        <div class="row me-lg-2 me-4 detailRow">
                                                <div class="col key section-detail-size">Duration</div>
                                                <div class="col val section-detail-size cls-duration"></div>
                                        </div>
                                        <div class="row me-lg-2 me-4 detailRow">
                                            <div class="col key section-detail-size">Team Size &nbsp;<a data-toggle="popover" class="team-popover"><i class="bi bi-info-circle-fill cls-team-info-icon"></i></a></div>
                                            <div class="col val section-detail-size cls-team-size"></div>
                                        </div>
                                    </div>
                                      <div class="projectPoints-div">

                                        </div>

                                    <div class="row d-flex justify-content-center align-center" style="font-size: 16px;">
                                        <div style="text-align: center;font-size: 16px;display: flex;width: 100%;">
                                             <a data-toggle="popover" class="checkout-popover btn btn-brand cls-fundPopOver" data-open-accessibility-text-original="16px" style="font-size: 16px;width: 45%;">Fund</a>
                                            <button type="button" class="btn btn-brand cls-fundProgress" onclick="ProjectInitiated(true,false)" style="width:42%;font-size:15px;display:none;"></button>
                                            <button type="button" class="btn btn-brand cls-solutionDetails" style="width:45%;" onclick="CheckEvent()"></button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- Second column -->
                            <div class="col-12 content order-first order-lg-first left-box">
                                <img src="" id="project-image" class="img-flued" style="width:100%;height:55%;" />
                                <h3 class="pt-2 label-title-size title-path">Solution</h3>
                                <p class="section-detail-size cls-project-description">

                                </p>
                            </div>
                        </div>

                        <!-- Second Row for description -->
                        <div class="row justify-content-center second-row">
                            <div class="col-12 content d-flex flex-column">
                                <h3 class="pt-2 label-title-size title-path">Solution</h3>
                                <p class="section-detail-size cls-project-description">

                                </p>
                                <div class="row m-lg-2 m-4 d-flex justify-content-center align-center align-items-center RButtons">
                                    <div class="section-header">
                                    <hr />
                                    <h2 class="justify-content-start align-items-center"><label style="background-color:#fff; padding:0 1.3em 0 1.3em;">Projects</label></h2>
                                    </div>
                                    <div class="col-lg-4 col-md-4 d-flex justify-content-center">
                                        <input type="radio" id="projSize" name="projSize" checked/>
                                    </div>
                                </div>

                                <!--Description column-->

                                <input type="hidden" value="0" id="SolutionDefineId" />
                                <h4 class="pt-2 label-title-size title-path">Project Outline <i class="bi bi-pencil-fill cls-edit-pencil" title="Click To Edit" id="projectOutlinePencilIcon" onclick='EditActiveSolutionDetailsByFreelancer(this,"ProjectOutline")'></i><i class="bi cls-save-icon bi-save-fill" id="projectOutlineSaveIcon" title="Click To Save" style="font-size: 20px;display:none" onclick='EditActiveSolutionDefineDetails("ProjectOutline")'></i></h4>
                                <p style="display:block;" id="project-outline-div">

                                </p>
                                <textarea id="ProjectOutline" class="form-control cls-solution-details" style="display:none;border:1px solid rgb(211, 139, 78);" rows="4" cols="50"></textarea>
                            </div>
                        </div>
                    </div>
                </section>

                <!-- ======= What's Included Section ======= -->
                <section id="Project" class="Project pt-4">
                    <div class="container-flued">
                        <div class="row justify-content-center">
                            <div class="col-12 content d-flex flex-column">
                                <h3 class="pt-2 label-title-size title-path">Project Details <i class="bi bi-pencil-fill cls-edit-pencil" title="Click To Edit" id="projectDetailPencilIcon" onclick='EditActiveSolutionDetailsByFreelancer(this,"ProjectDetail")'></i><i class="bi cls-save-icon bi-save-fill" title="Click To Save" id="projectDetailSaveIcon" style="font-size: 20px;display:none" onclick='EditActiveSolutionDefineDetails("ProjectDetail")'></i></h3>
                                <p class="section-detail-size" id="project-details-div">

                                </p>
                                <textarea id="ProjectDetails" class="form-control cls-solution-details" style="display:none;border:1px solid rgb(211, 139, 78);" rows="4" cols="50"></textarea>
                            </div>
                        </div>

                        <div class="row justify-content-center" style="display: flex;align-items: center;justify-content: center;background:#2E1F47;letter-spacing: 0.6px;">
                            <!-- first row -->
                            <div class="progressContainer d-flex flex-column px-0">
                                <h3 class="pt-2 label-title-size title-path" style="padding:0 0 0 0.5em;">Milestones</h3>
                                <ul class="progress" id="progress-div">

                                </ul>
                                <div class="d-flex align-self-start" style="padding:1rem 0 0 1em;">
                                    <a href="" class="cls-milestone-popup" id="clsMilestonePopup" data-bs-toggle="modal" data-bs-target="#milestonesModal">View Details</a>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                           <div class="col">
                               <h3 class="label-title-size title-path">Solution Team</h3>
                                <div class="row" id="solutionTeamSection">
                                    
                                </div>
                           </div>
                        </div>

                         <div class="row" style="margin-top:5%;">
                           <div class="col">
                               <h3 class="label-title-size title-path">Documents</h3>
                               <a class="cls-new-activeDocuments" onclick="OpenDocumentsUploadPopUp()" style="margin-top:8%;">Add New</a>
                                <div class="row" id="DoumentsSection" style="margin-top:1%;">
                                     <div class="card-body">
                                            <table class="table datatable" id="table-DocumentDetails">
                                                <thead>
                                                    <tr>
                                                        <th scope="col">Document Name</th>
                                                        <th scope="col">File</th>
                                                        <th scope="col">Delete</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                </tbody>
                                            </table>
                                        </div>
                                </div>
                           </div>
                        </div>
                       
                        <div class="row JoinUs" style="padding:50px 0;">
                            <div class="col-12 column-client-guide">
                                <h3 class="label-title-size title-path">
                                    Client Guide
                                </h3>
                                <ul>
                                    <li data-aos="fade-up" data-aos-delay="100">
                                        <i class="bi bi-send"></i>
                                        <div>
                                            <h5 class="Project-title-size">
                                                Project Initiation After Purchase
                                            </h5>
                                            <p>
                                                Upon securing a project, it typically commences within 2-4 days or on a client-preferred date. Our platform assures at least two hours of overlapping communication between clients and their respective freelance teams.
                                            </p>
                                            <details>
                                                <summary class="collapsible expand-client-guide">Expand</summary>
                                                <div class="content">
                                                    Our system is built for flexibility, allowing clients to define their communication schedules. We ensure a minimum of two hours of overlapping work time for real-time interaction and project discussions. This arrangement, adjustable upon client-freelancer communication, accommodates varying project complexities and client preferences.
                                                </div>
                                            </details>
                                        </div>
                                    </li>
                                    <li data-aos="fade-up" data-aos-delay="200">
                                        <i class="bi bi-send"></i>
                                        <div>
                                            <h5 class="Project-title-size">
                                                Provision of Project Information
                                            </h5>
                                            <p>
                                                To deliver precise and comprehensive projects, our freelancers require specific details from the client.
                                            </p>
                                            <details>
                                                <summary class="collapsible expand-client-guide">Expand</summary>
                                                <div class="content">
                                                    Submitting detailed and accurate project information enables a more accurate execution of project requirements. Necessary details may include project objectives, required datasets, key performance metrics, deadlines, and other project-specific elements. Such information equips freelancers to produce a project outcome that perfectly aligns with client expectations.
                                                </div>
                                            </details>
                                        </div>
                                    </li>
                                    <li data-aos="fade-up" data-aos-delay="300">
                                        <i class="bi bi-send"></i>
                                        <div>
                                            <h5 class="Project-title-size">
                                                Project Completion, Payment Processing, and Feedback
                                            </h5>
                                            <p>
                                                Payment procedure commences once the project requirements are met and the client approves the final deliverable.
                                            </p>
                                            <details>
                                                <summary class="collapsible expand-client-guide">Expand</summary>
                                                <div class="content">
                                                    Our platform incorporates an escrow service, enhancing financial security by securely holding funds until the successful completion of the project or its milestones, as chosen by the client. Funds are then released to the freelancer only upon client satisfaction and approval of either the completed project or its individual milestones. Post-project feedback from clients is strongly encouraged, aiding us in continuous service enhancement and upholding a high-quality freelance network.
                                                </div>
                                            </details>
                                        </div>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </section>
            </div>

            <!--Second Main Column-->
            <div class="col-lg-5 col-12 rightStickyRow">

                <input type="hidden" id="solutionFundId" value="0" />
                <input type="hidden" id="solutionFundMileStoneId" value="0" />
                <div class="row mx-lg-4" id="solutionfund-popUp">
                    <!-- first column -->
                    <div class="col-lg-12 rightSticky-box justify-content-center align-items-center">
                        <div class="row m-lg-2 m-4 d-flex justify-content-center align-center RButtons">
                            <div class="col-lg-6 col-md-6 d-flex justify-content-center" style="width:63% !important">
                                <label class="project-progress"></label>
                            </div>
                        </div>
                        <div class="row m-lg-2 pt-4">
                            <h5 class="section-detail-size" style="text-align:center;">
                               Project Price & Size
                                &nbsp;<a data-toggle="popover" class="info-popover" data-bs-content="Prices shown are an estimated average and may vary based on the freelancers' hourly rates and availability."><i class="bi bi-info-circle-fill cls-team-info-icon"></i></a>
                            </h5>
                        </div>
                        <div class="row m-lg-2 pt-2 pb-2 d-flex justify-content-center align-center border-bottom border-black" style="text-align:center;">

                            <div class="col-4">
                                <label class="radio-inline" style="text-align:center;">
                                    <input class="form-check-input" type="radio"  id="solution-fund-radio-check" />
                                    <h4 class="projectfund-projecttype"></h4>
                                    <h5 style="opacity:0.5;" id="projectfund-projectprice" class="cls-projectPrice"></h5>
                                </label>
                            </div>

                        </div>
                        <div class="projectDetails-div">
                              <div class="row me-lg-2 me-4 detailRow">
                                 <div class="col key section-detail-size">Duration</div>
                                 <div class="col val text-end section-detail-size cls-duration"></div>
                              </div>
                              <div class="row me-lg-2 me-4 detailRow">
                                <div class="col key section-detail-size">Team Size &nbsp;<a data-toggle="popover" class="team-popover"><i class="bi bi-info-circle-fill cls-team-info-icon"></i></a></div>
                                <div class="col val text-end section-detail-size cls-team-size"></div>
                              </div>
                        </div>
                        <div class="projectPoints-div"> 

                        </div> 
                        <div class="row d-flex justify-content-center align-center">
                            <div style="text-align: center;font-size: 16px;width: 100%;display:flex">
                                <a data-toggle="popover" class="checkout-popover btn btn-brand cls-fundPopOver" data-open-accessibility-text-original="16px" style="font-size: 16px;width: 45%;">Fund</a>
                                <button type="button" class="btn btn-brand cls-fundProgress" id="solutionfund-furtherprogress" onclick="ProjectInitiated(true,false)" style="width:42%;font-size:15px;display:none;"></button>
                                <button type="button" class="btn btn-brand cls-solutionDetails" id="solutionfund-details" style="width:45%;" onclick="CheckEvent()"></button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>

<!-- Milestones Modal -->
    <div class="modal fade" id="milestonesModal" tabindex="-1" aria-labelledby="milestonesModal" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Milestones</h4>
                    <a class="close" data-dismiss="#milestonesModal"><i class="bi bi-x-circle"></i></a>
                </div>
                <div class="modal-body p-0">
                    <div class="progressContainer d-flex flex-column">
                        <div class="form-group pt-3" id="milestone-btn-div" style="display:none;">
                             <button type="button" class="btn btn-primary" onclick="OpenMileStonePopup()" id="btn-milestone">Add Milestones</button>
                        </div>

                        <ul class="progress" id="milestone-Popup-div">
                        </ul>
                        <div class="d-flex align-self-start btn-more-less" style="padding:1rem 0 0 1em;">
                            <a class="cls-milestone-showmore cls-milestone" onclick="MilestoneViewMore();" id="clsMilestoneShowmore">View Details<i class="bi bi-caret-down-fill"></i></a>
                        </div>
                        <div class="d-flex align-self-start btn-more-less" style="padding:1rem 0 0 1em;">
                            <a class="cls-milestone-showless cls-milestone" onclick="MilestoneViewLess();" id="clsMilestoneShowless">Hide Details<i class="bi bi-caret-up-fill"></i></a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
  
    <!-- GuidelineModal Modal -->
    <div class="modal fade" id="guidelineModal" tabindex="-1" aria-labelledby="guidelineModal" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Guidelines</h4>
                    <a class="close" data-dismiss="#guidelineModal"><i class="bi bi-x-circle"></i></a>
                </div>
                <div class="modal-body p-0">
                    <div class="progressContainer d-flex flex-column">
                        <ol>
                            <li data-aos="fade-up" data-aos-delay="100" class="list-title-size">
                                <h3 class="list-title-size">Before You Dive In</h3>
                                <p class="section-detail-size">This document has been designed as a reference for project architects. It offers guidelines for creating the “Project Outline” and "Project Details" and “Milestones” sections for predefined solutions. Team size will be determined based on the project scale: Small: 1 Project Manager + 1 Associate, Medium: 1 Project Manager + 1 Expert + 1 Associate, Large: 1 Project Leader + 2 Experts + 2 Associates. For Custom projects, team size and timelines will be selected based on client preferences. Although we typically suggest maintaining a uniform duration for predefined projects, regardless of whether they are small, medium, or large, it's important to consider that larger projects, given their increased complexity, might not only require a larger team of freelancers, but also an extended timeline for completion. While there is a limit to the number of words displayed on the platform, the Project Architect can create a more detailed version of the solution which can be made available to viewers as an attachment, accessible via a pop-up window. All relevant information should be adjusted based on the size of each project and populated once for each project scale: small, medium, and large.</p>
                            </li>
                            <li data-aos="fade-up" data-aos-delay="100" class="list-title-size">
                                <h3 class="list-title-size">Project Outline</h3>
                                <ul>
                                    <li class="section-detail-size">
                                        Paragraph 1:<p>Focus on the expected benefits and outcomes of the project. Highlight any unique features or advantages that differentiate this project from others in the field.</p>
                                    </li>
                                    <li class="section-detail-size">
                                        Paragraph 2:<p>Provide an overview of the project process, mentioning any key milestones or deliverables. Ensure the summary is client-focused, communicating effectively what potential clients can expect to gain from their collaboration with freelancers on the website.</p>
                                    </li class="section-detail-size">
                                </ul>
                            </li>
                            <li data-aos="fade-up" data-aos-delay="100" class="list-title-size">
                                <h3 class="list-title-size">Project Details</h3>
                                <h4 class="section-title-size">
                                    Defining the scope and requirements for an AI project involves several steps
                                </h4>
                                <ul>
                                    <li class="section-detail-size">
                                        Paragraph 1:<p>Identify the problem: First, identify the business problem or opportunity that the AI project will address. This can involve analysing data, identifying inefficiencies, or uncovering opportunities for automation.</p>
                                    </li>
                                    <li class="section-detail-size">
                                        Paragraph 2:<p>Determine the goals: Next, determine the goals of the project. These should be specific, measurable, and aligned with the business problem or opportunity identified in step one. For example, a goal might be to reduce customer service response time by 50%.</p>
                                    </li>
                                    <li class="section-detail-size">
                                        Paragraph 3:<p>Define the scope: Once the goals are established, define the scope of the project. This should include the data sources that will be used, the technology stack that will be employed, and any other key parameters.</p>
                                    </li>
                                    <li class="section-detail-size">
                                        Paragraph 4:<p>Define the requirements: Based on the goals and scope, define the technical requirements for the project. This may include selecting specific AI algorithms, defining data pre-processing steps, and selecting performance metrics.</p>
                                    </li>
                                    <li class="section-detail-size">
                                        Paragraph 5:<p>Prioritize requirements: Once the requirements are defined, prioritize them based on their importance to achieving the project goals. This will help ensure that the most critical features are implemented first.</p>
                                    </li>
                                    <li class="section-detail-size">
                                        Paragraph 6:<p>Develop a plan: Finally, develop a project plan that outlines the timeline, milestones, and resources required to deliver the project. This plan should be reviewed and updated regularly to ensure that the project plan stays on track.</p>
                                    </li>
                                </ul>
                            </li>
                            <li data-aos="fade-up" data-aos-delay="100" class="list-title-size">
                                <h3 class="list-title-size">Milestones</h3>
                                <h4 class="section-title-size">
                                    Milestones should be created by following the guidelines as described below:
                                </h4>
                                <ul class="section-title-size">
                                    <li data-aos="fade-up" data-aos-delay="100">
                                        <p class="section-detail-size">
                                            Identification - Identify the key deliverables and deadlines that signify progress in the project.
                                        </p>
                                    </li>
                                    <li data-aos="fade-up" data-aos-delay="100">
                                        <p class="section-detail-size">Relevance - Ensure each milestone is related directly to the project's goals and objectives.</p>
                                    </li>
                                    <li data-aos="fade-up" data-aos-delay="100">
                                        <p class="section-detail-size">
                                            Measurable - Milestones should be tangible and quantifiable so that it's clear when they have been achieved.
                                        </p>
                                    </li>
                                    <li data-aos="fade-up" data-aos-delay="100">
                                        <p class="section-detail-size">
                                            Timely - Set realistic yet ambitious timelines for each milestone to keep the project on track.
                                        </p>
                                    </li>
                                    <li data-aos="fade-up" data-aos-delay="100">
                                        <p class="section-detail-size">
                                            Review - Regularly review and update the milestones after client and freelancers’ feedback.
                                        </p>
                                    </li>
                                </ul>
                            </li>
                            <li data-aos="fade-up" data-aos-delay="100" class="list-title-size">
                                <h3 class="list-title-size">Project Highlights</h3>
                                <p class="section-detail-size">On the main box, before the "Buy" and "Message" options, the project designer can add up to 3 summary points that are significant and beneficial for the client. These points should capture the essence of the project, its key deliverables, and client benefits.</p>
                            </li>
                        </ol>

                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal" id="MileStonePopModal" tabindex="-1" aria-labelledby="MileStonePopModal" aria-hidden="true">
    
        <div class="modal-dialog modal-dialog-centered modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title main-title">Add Milestone</h4>
                    <a onclick="ResetMileStoneForm();" style="cursor:pointer;"><i class="bi bi-x-circle"></i></a>
                </div>
                 <div class="modal-body p-0">
                    <div class="row">
                    <div class="col">
                        <div class="card">
                            <div class="card-body">
                                <form class="row g-3 mt-3" name="MileStoneForm">
                                    <input type="hidden" id="MileStoneId" value="0" />
                                    <div class="col-12">
                                        <label for="Title" class="form-label">Title</label>
                                        <div class="input-group">
                                            <input type="text" id="mileStoneTitle" class="form-control" name="milestonetitle" />
                                        </div>
                                    </div>
                                    <div class="col-12">
                                        <label for="Description" class="form-label">Description</label>
                                        <div class="input-group">
                                            <input type="text" id="mileStoneDescription" class="form-control" name="milestonedescription" />
                                        </div>
                                    </div>
                                    <div class="col-12">
                                        <label for="Days" class="form-label">Days</label>
                                        <div class="input-group">
                                            <input type="text" id="txtMilestoneDays" class="form-control" name="txtMilestoneDays" />
                                        </div>
                                    </div>
                                    <div class="col-12" style="display:none;">
                                        <label for="dueDate" class="form-label">Due Date</label>
                                        <div class="input-group">
                                            @*<input type="text" id="mileStonedueDate" class="form-control" name="milestoneduedate" />*@
                                            <input type="date" id="mileStonedueDate" class="form-control" name="milestoneduedate">
                                        </div>
                                    </div>
                                    <div class="text-center">
                                        <button type="submit" class="btn btn-brand">Submit</button>
                                        <button  type="button" class="btn btn-secondary" onclick="ResetMileStoneForm();">Reset</button>
                                    </div>
                                </form>

                            </div>
                        </div>
                    </div>
                </div>
                <div></div>
            </div>
            
            </div>
        </div>
    </div>

    <div class="modal" id="DocumnetsModal" tabindex="-1" aria-labelledby="DocumnetsModal" aria-hidden="true">
    
        <div class="modal-dialog modal-dialog-centered modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title main-title">Upload Documents</h4>
                    <a onclick="ResetDocumentPopUp();" style="cursor:pointer;"><i class="bi bi-x-circle"></i></a>
                </div>
                 <div class="modal-body p-0">
                    <div class="row">
                    <div class="col">
                        <div class="card">
                            <div class="card-body">
                                <form class="row g-3 mt-3" name="UploadDocumentForm">
                                    <div class="col-12">
                                        <label for="Description" class="form-label">Description</label>
                                        <div class="input-group">
                                            <textarea class="form-control" id="ActiveProjectDescription" name="activeprojectdescription" rows="4" cols="50"></textarea>
                                        </div>
                                    </div>
                                    <div class="col-12">
                                        <label for="Days" class="form-label">Upload File</label>
                                        <div class="input-group">
                                            <input class="form-control" type="file" id="ActiveProjectDocument" name="activeprojectdocument">
                                        </div>
                                    </div>
                                    <div class="text-center">
                                        <button type="submit" class="btn btn-brand">Submit</button>
                                        <button  type="button" class="btn btn-secondary" onclick="ResetDocumentPopUp();">Reset</button>
                                    </div>
                                </form>

                            </div>
                        </div>
                    </div>
                </div>
                <div></div>
            </div>
            
            </div>
        </div>
    </div>

    <div class="modal fade" id="chatModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" role="dialog" aria-hidden="true">
      <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title">Chat</h5>
            <a onclick="closeChatModal()">
              <span aria-hidden="true">&times;</span>
            </a>
          </div>
          <div class="modal-body">
            <div class="messaging">
              <div class="inbox_msg">
                <div class="inbox_people">
                  <div class="headind_srch">
                    <div class="recent_heading">
                      <h4 id="freelancer-name">Freelanceres</h4>
                    </div>
                   
                  </div>
                  <div class="inbox_chat" id="inboxPeople">
                  </div>
                </div>
                <div class="mesgs">
                  <div class="msg_history" id="chat_history">
                    <div class="text-center">
                        <img src="https://shorturl.at/bhou4"/>
                    </div>
                  </div>
                  <div class="type_msg d-none" id="type-chat">
                    <div class="input_msg_write">
                      <input type="text" id="txt_message" class="write_msg" placeholder="Type a message" />
                      <button class="msg_send_btn" type="button" id="btn_chat_send">
                        <i class="bi bi-send" aria-hidden="true"></i>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <script src="https://www.gstatic.com/firebasejs/8.10.1/firebase-app.js"></script>
<script src="https://www.gstatic.com/firebasejs/8.10.1/firebase-database.js"></script>
<script src="https://www.gstatic.com/firebasejs/8.10.1/firebase-messaging.js"></script>
   <script src="~/assets/js/chat.js"></script>
<script>
    $(document).ready(function () {

         firebaseConfig = {
            apiKey: "@apiKey",
            authDomain: "@authDomain",
            projectId: "@projectId",
            storageBucket: "@storageBucket",
            messagingSenderId: "@messagingSenderId",
            appId: "@appId",
            measurementId: "@measurementId"
        };

        InitFirebase(firebaseConfig);

        $('.close').on('click', function () {
            $('#milestonesModal').modal('hide');

            $('#clsClientReviewsPopup').modal('hide');

            $('#guidelineModal').modal('hide');
        });
        $(".info-popover").popover();
        var newContent = "<div class='checkoutOption'><a title='milestone' role='button'>Milestone (Milestone 1)</a> <hr/> <a title='project'  role='button'>Project</a></div>";
        $('.checkout-popover').popover({
           content:newContent,
           html:true,
        });
        GetProjectDetails();

         if('@Context.Session.GetString("LoggedUserLevel")' == 'Project Manager'){
            $(".cls-edit-pencil").show()
         }else{
             $(".cls-edit-pencil").hide()
         }

        $("form[name='MileStoneForm']").validate({
            rules: {
                milestonedescription: { required: true },
                milestonetitle: { required: true },
                txtMilestoneDays: { required: true },
            },
            messages: {
                milestonedescription: { required: "Please enter description" },
                milestonetitle: { required: "please enter title" },
                txtMilestoneDays: { required: "Please enter days" }
            },
            errorPlacement: function (error, element) {
                if (element.parent('.input-group').length) {
                    error.insertAfter(element.parent());
                }
                else {
                    error.insertAfter(element);
                }
            },
            submitHandler: function (form) {
                SaveMilStoneData()
            }
        });

         $("form[name='UploadDocumentForm']").validate({
            rules: {
                activeprojectdescription: { required: true },
                activeprojectdocument: { required: true },
            },
            messages: {
                activeprojectdescription: { required: "Please enter description" },
                activeprojectdocument: { required: "please upload valid file" },
            },
            errorPlacement: function (error, element) {
                if (element.parent('.input-group').length) {
                    error.insertAfter(element.parent());
                }
                else {
                    error.insertAfter(element);
                }
            },
            submitHandler: function (form) {
                SaveActiveProjectDocuments()
            }
        });
    });

    
    $(document).on("click", ".checkoutOption a", function(event) {
        event.preventDefault();
        var checkoutType = this.title;
        if(checkoutType == "project"){
            ProjectInitiated(false,false)
        }
        if(checkoutType == "milestone"){
            ProjectInitiated(true,false)
        }

    })

    function MilestoneViewMore(){
        $(".cls-milestone-showmore").css("display", "none");
        $(".cls-milestone-hide").css("display", "block");
        $(".cls-milestone-showless").css("display", "block");
    }

    function MilestoneViewLess(){
        $(".cls-milestone-showmore").css("display", "block");
        $(".cls-milestone-hide").css("display", "none");
        $(".cls-milestone-showless").css("display", "none");
    }

    function GetProjectDetails(){
         $("#preloader").show();
        var Industryid = @ViewData["Industry"]; 
        var Serviceid = @ViewData["Service"];
        var Solutionid = @ViewData["Solution"];

        var data = {
            IndustryId : Industryid,
            SolutionId : Solutionid,
        }
         $.ajax({
            type: "POST",
            url: "@Url.Action("GetProjectDetails", "Home")",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(data),
            success: function (result) {
                var data = result.Result
                $(".cls-project-description").text(data.ProjectData.Description)
                $("#project-image").attr("src",data.ProjectData.ImageUrlWithSas)
                var projectTitle = data.ServiceName +  " > " + data.SolutionName + " / " + data.IndustryName
                $("#project-title").text(projectTitle)
                GetProjectTypeValue()
                 $("#preloader").hide();
            },
            error: function (result) {
                $("#preloader").hide();
                showToaster("error", "Error !", "Something went wrong !!");
            }
        });
    }

    function GetProjectTypeValue(){
        $("#preloader").show();
       
            var solutionfundId =  sessionStorage.getItem("SolutionFundId")
             var Industryid = @ViewData["Industry"]; 
             var Serviceid = @ViewData["Service"];
             var Solutionid = @ViewData["Solution"];
            

        var data = {
            IndustryId : Industryid,
            SolutionId : Solutionid,
            SolutionFundId : solutionfundId
        }
         $.ajax({
            type: "POST",
            url: "@Url.Action("GetActiveProjectDetails", "Home")",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(data),
            success: function (result) {
                var data = result.Result
                var projecttype = data.SolutionFund.ProjectType;
                if(data.SolutionDefine != null){
                    $("#project-outline-div").text(data.SolutionDefine.ProjectOutline)
                    $("#project-details-div").text(data.SolutionDefine.ProjectDetails)
                    $("#SolutionDefineId").val(data.SolutionDefine.Id);

                    if(data.SolutionDefine.Duration != null){
                        $(".cls-duration").text(data.SolutionDefine.Duration)
                    }
                    else{
                        $(".cls-duration").text("-")
                    }

                    if(data.SolutionDefine.TeamSize == 0){
                        var teamsize = 0;
                         if(projecttype == "medium"){
                             teamsize = 3;
                        }
                        if(projecttype == "large"){
                            teamsize = 5;
                        }
                        if(projecttype == "small"){
                            teamsize = 2;
                        }
                        $(".cls-team-size").text(teamsize)
                    }
                    else{
                        $(".cls-team-size").text(data.SolutionDefine.TeamSize)
                    }

                }
                else{
                   $("#project-outline-div").text("No Data Available")
                   $("#project-details-div").text("No Data Available")
                    $(".cls-duration").text("-")
                    var teamsize = 0;
                    if(projecttype == "medium"){
                       teamsize = 3
                    }
                    if(projecttype == "large"){
                        teamsize = 5
                    }
                    if(projecttype == "small"){
                        teamsize = 2
                    }
                    $(".cls-team-size").text(teamsize)
                }
                if(data.MileStone != ""){
                    BindMileStoneSection(data.MileStone);
                }
                 else{
                    $('#progress-div').empty()
                   $(".cls-mileStone").remove()
                   $( "<p class='cls-mileStone'>No Data Available</p>" ).insertAfter("#progress-div");
                    $(".cls-mileStone").css("fontSize", "16px");
                    $(".cls-mileStone").css("padding-left", "14px");
                    $(".cls-milestone-popup").css("display","none")
                }
                if(data.PointsData != ""){
                    var pointsSection = "";
                     $.each(data.PointsData, function (pointsdata, pointsvalues) {
                         if(pointsvalues.PointKey == null || pointsvalues.PointKey == undefined){
                             pointsvalues.PointKey = ""
                         }
                         if(pointsvalues.PointValue == null || pointsvalues.PointValue == undefined){
                             pointsvalues.PointValue = ""
                         }
                      pointsSection += '<div class="row me-lg-2 me-4 detailRow">' +
                            '<div class="col key section-detail-size">'+pointsvalues.PointKey +'</div>' +
                            '<div class="col val text-end section-detail-size">'+pointsvalues.PointValue +'</div>' +
                        '</div>';
                     })
                     $('.projectPoints-div').html(pointsSection);
                }
                else{
                    $(".projectPoints-div").html("");
                }

                if(data.SolutionTeam != ""){
                     BindSolutionTeamData(data.SolutionTeam);
                }
                else{
                    $(".cls-temp").remove();
                    $( "<p class='cls-temp'>No Data Available</p>" ).insertAfter("#solutionTeamSection");

                }
                if(data.SuccessfullProjects != ""){
                    BindSuccessfullProject(data.SuccessfullProjects);
                    $(".cls-temp").remove();
                }else{
                    $(".cls-temp").remove();
                    $( "<p class='cls-temp'>No Data Available</p>" ).insertAfter("#SuccessfulProjectsCarousel");
                }

                   if(data.SolutionFund != null)
                   {
                      var teamsize = 0;
                       if(projecttype == "medium"){
                          teamsize = 3;
                       }
                       if(projecttype == "large"){
                         teamsize = 5;
                       }
                       if(projecttype == "small"){
                                teamsize = 2;
                       }
                       $(".cls-team-size").text(teamsize)

                       var mileStoneData;
                       if(data.MileStoneProgressData != null){
                           mileStoneData = data.MileStoneProgressData;
                       }else{
                           mileStoneData = data.MileStone[0];
                       }
                      
                      $("#solutionFundMileStoneId").val(mileStoneData.Id);
                      $("#solutionFundId").val(data.SolutionFund.Id);
                      BindSolutionFundData(data.SolutionFund,mileStoneData,data.FundDecided,data.FundCompleted,data.IsProjectStop,data.SolutionFund.ProjectPrice,data.FundStopByClient);
                   }
                
                if(data.DocumentDataList != ""){
                    $("#DoumentsSection").show()
                     var index = 0;
                        var subObj = '';
                        var htm = '';
                        for (index = 0; index < data.DocumentDataList.length; index++) {
                            
                                subObj = data.DocumentDataList[index];
                                htm += '<tr>';
                                htm += '<td>' + subObj.DocumentName + '</td>';
                                htm += "<td><a class='cls-dwld-document' onclick=DownloadDocument('"+subObj.DocumentPath+"') >Download File</a></td>";
                                htm += "<td><a onclick=DeleteSolutionDocument('"+subObj.Id+"')><i class='ri-delete-bin-6-line cls-document-deleteicon'></i></a></td>";
                                htm += '</tr>';
                            
                        }
                        $("#table-DocumentDetails").find("tr:gt(0)").remove();
                        $("#table-DocumentDetails tbody").append(htm);
                        $(".cls-documentTemp").hide();
                }else{
                    $("#DoumentsSection").hide();
                    $( "<p class='cls-documentTemp'>No Data Available</p>" ).insertAfter("#DoumentsSection");
                    $(".cls-documentTemp").css("padding-top","10px");
                }

                var newContent = "";
                if(projecttype == "medium"){
                    newContent = "1 Project Manager + 1 Expert + 1 Associate";
                }
                else if(projecttype == "large"){
                    newContent = "1 Project Leader + 2 Experts + 2 Associates";
                }
                else if(projecttype == "small"){
                    newContent = "1 Project Manager + 1 Associate";
                }
               $('.team-popover').popover('dispose');
                $('.team-popover').popover({
                    content:newContent,
                });

                  if ('@Context.Session.GetString("LoggedUserRole")' == 'Freelancer'){
                        $("#solutionfund-popUp").hide();
                         if('@Context.Session.GetString("LoggedUserLevel")' == 'Project Manager'){
                             $("#milestone-btn-div").show();
                            $(".cls-milestone-edit-pencil").show();
                         }else{
                             $("#milestone-btn-div").hide();
                             $(".cls-milestone-edit-pencil").hide()
                         }
                  }
                  else{
                        $("#solutionfund-popUp").show();
                  }

                 $("#preloader").hide();
            },
            error: function (result) {
                $("#preloader").hide();
                showToaster("error", "Error !", "Something went wrong !!");
            }
        });
    }

    function BindSuccessfullProject(data){
          var successfullProject = "";
          $.each(data, function (datas, values) {

              var description = values.Description.length > 430 ? values.Description.substring(0, 430) + "..." : values.Description;

            successfullProject += '<div class="carousel-item project-carousel">' +
              '<div class="col-lg-6 col-md-6 d-flex justify-content-center cls-main">' +
                 '<div class="box cls-Successful-Projects">' +
                   '<div class="icon-msg">' +
                     '<h3>'+ values.Title +'</h3>' +
                    '</div>' +
                    '<div class="description" title="'+values.Description  +'">'+ description +'</div>' +
                    '<div class="child col-10 mx-lg-2 cls-result">' +
                        '<div class="title border-bottom">' +
                            'Results' +
                         '</div>' +
                     '<div class="content">';
                        if(values.projectResultList != null){
                              $.each(values.projectResultList, function (resultData, resultValue) {
                                successfullProject += '<div class="info">' +
                                                       '<div class="name">'+resultValue.ResultValue+'</div>' +
                                                            '<div class="sub">' +
                                                                '<div class="sub-title">'+resultValue.ResultKey+'</div>' +
                                                            '</div>' +
                                                     '</div>';
                              });   
                        }
                        successfullProject += '</div></div></div></div></div>';
                     });
                     $('#successfull-project-section').html(successfullProject);
                     $('.cls-Successful-Projects .cls-result .content .info:nth-child(2)').addClass('right-info');
                    $('.project-carousel').first().addClass('active');
                    $('.project-indicators > li').first().addClass('active');

                    $(".cls-main:nth-child(even) .cls-Successful-Projects").css("background-color","#808080ad")
                    $(".cls-main:nth-child(even) .cls-Successful-Projects .cls-result").css("background-color", 'rgb(128 128 128 / 0%)')

                  

                    if(data.length >= 3){
                        $(".project-indicators").css("display","block");
                        $(".project-indicators").css("margin-top","36%");
                    }else{
                        $(".project-indicators").css("display","none");
                        $(".project-indicators").css("margin-top","0%")
                    }

                      var item = document.querySelectorAll('.project-carousel')
                         item.forEach((el) => {
                                const minPerSlide = 4
                                let next = el.nextElementSibling
                                  if(data.length != 1){
                                       for (var i = 1; i < minPerSlide; i++) {
                                        if (!next) {
                                            next = item[0]
                                        }
                                        let cloneChild = next.cloneNode(true)
                                        el.appendChild(cloneChild.children[0])
                                        next = next.nextElementSibling
                                  }  
                                }

                            })

                }

    function ProjectInitiated(mileStoneCheckOut,nextMilestoneData){

        if('@Context.Session.GetString("LoggedUserRole")' == 'Client'){
             var projectType = $("input[name='projSize']:checked").val();
            var Industryid = @ViewData["Industry"]; 
            var Solutionid = @ViewData["Solution"];

            var data = {
                Id : $("#solutionFundId").val(),
                IndustryId : Industryid,
                SolutionId : Solutionid,
                ProjectType : projectType,
                ProjectPrice : $("#projectfund-projectprice").html().replace("$", "").replace(",",""),
                MileStoneId : $("#solutionFundMileStoneId").val(),
                MileStoneCheckout : mileStoneCheckOut,
                GetNextMileStoneData : nextMilestoneData

            }
           $("#preloader").show();
            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                url: "@Url.Action("SaveProjectInitiated", "LandingPage")",
                data: JSON.stringify(data),
                success: function (result) {
                   if(result.Message == "projectDetails"){
                       var data = result.Result;
                       $("#solutionFundId").val(data.ProjectDetails.Id);
                       sessionStorage.setItem("SolutionFundId",data.ProjectDetails.Id)
                        $("#solutionFundMileStoneId").val(data.MileStoneData.Id);
                       BindSolutionFundData(data.ProjectDetails,data.MileStoneData,data.FundDecided,false,false,data.NextMileStonePrice,false);
                       if(data.MilestoneList != ""){
                           BindMileStoneSection(data.MilestoneList);
                       }
                        $("#preloader").hide();
                       return;
                   }
                   if(result.Message == "EmptyMilestoneData"){
                       showToaster("error", "Error !", "No MilestoneData Available");
                        $("#preloader").hide();
                   }
                   if(result.Message == "CompleteProcess"){
                       var ProjectData = result.Result.ProjectDetails;
                       if(ProjectData.FundType == 1){
                           CheckoutSolution(false,ProjectData.ProjectPrice);
                       }else{
                           CheckoutSolution(true,ProjectData.ProjectPrice);
                       } 
                       $("#preloader").hide();
                       return;
                   }             
                   if(result.Message == "NoFurtherMileStone"){
                       $(".cls-fundProgress").text('Project Completed');
                       DisabledSolutionFurtherProgressButton();
                       $(".project-progress").html("Project Completed");
                        DisabledSolutionDetailsButton();
                         if(result.MilestoneList != ""){
                           BindMileStoneSection(result.MilestoneList);
                       }
                       $("#preloader").hide();
                       return;
                   }
                   else{
                        showToaster("success", "Success !", result.Message);
                         $("#preloader").hide();
                         if(result.Result.FundType == 1){
                            $(".cls-fundProgress").text('Project Completed');
                            DisabledSolutionFurtherProgressButton()
                            $(".project-progress").html("Project Completed");
                            DisabledSolutionDetailsButton()
                            $("#preloader").hide();
                            return;
                         }
                         else{
                              if(result.Result.IsTransfer)
                                {
                                    $(".cls-fundProgress").removeClass('disabled');
                                    $(".cls-fundProgress").css("color","white");
                                    setTimeout(function () {
                                         $("#solutionFundId").val(0);
                                           ProjectInitiated(false,true);
                                    }, 2500);
                                }
                            $("#preloader").hide();
                            return;
                         }
                       
                   }
                   
                },
                error: function (result) {
                    $("#preloader").hide();
                    showToaster("error", "Error !", "Something went wrong !!");
                }
            });
        }
        else{
             showToaster("warning", "Warning !", "Login as a client to purchase project !!");
        }


    }

   function BindSolutionFundData(data,milestoneData,fundDecided,IsFundCompleted,IsProjectStop, NextMilestonePrice,FundStopByClient){

       var projectPrice = parseInt(data.ProjectPrice).toLocaleString('en-US');
          $("#solutionfund-popUp").css("display","block")
          $("#solution-fund-radio-check").prop("checked", true);

          var projectType = data.ProjectType;
          projectType =  projectType.split(' ').map(projectType => projectType.charAt(0).toUpperCase() + projectType.slice(1).toLowerCase()).join(' ');
           $("input[name=projSize][value='"+projectType+"']").prop("checked",true);
           $('input:radio[name=projSize]').val(projectType);
           $('input:radio[name=projSize]').attr('label',projectType);

          $(".projectfund-projecttype").html(projectType)
          $(".cls-projectPrice").html("$" + projectPrice)

           if(data.ProjectStatus == "INITIATED" || data.ProjectStatus == "INPROGRESS"){

              $(".cls-solutionDetails").text('Stop Project');
              fundDecided = fundDecided + 1;
               if(data.FundType == 1){
                   $(".cls-fundProgress").text("Fund Project " + fundDecided);

                   var total = fundDecided - 1;
                   if(total == 0){
                        var status = data.ProjectStatus
                        status =  status.split(' ').map(status => status.charAt(0).toUpperCase() + status.slice(1).toLowerCase()).join(' ');

                        $(".project-progress").html("Project " + status)
                   }
               }
               if(data.FundType == 0){
                   
                     if(fundDecided > 0 ){
                         var total = fundDecided - 1
                          $(".cls-fundProgress").show();
                          $(".cls-fundPopOver").hide();
                          $(".cls-fundProgress").text("Fund Milestone " + fundDecided)
                          $(".project-progress").html("Milestone " + total + " is Completed")
                          $(".cls-projectPrice").html("$" + parseInt(NextMilestonePrice).toLocaleString('en-US'))
                      }else{
                          $(".cls-fundPopOver").show();
                          $(".cls-fundProgress").hide();
                            var status = data.ProjectStatus
                            status =  status.split(' ').map(status => status.charAt(0).toUpperCase() + status.slice(1).toLowerCase()).join(' ');
                            $(".project-progress").html("Project " + status)

                      }

               }
           }

           if(data.ProjectStatus == "COMPLETED"){

               $(".cls-fundPopOver").hide();
               $(".cls-fundProgress").show();

              if(data.FundType == 1)
              {
                     if(IsFundCompleted)
                     {
                          $(".cls-fundProgress").text('Project Completed');
                          DisabledSolutionFurtherProgressButton();
                          $(".project-progress").html("Project Completed");
                          DisabledSolutionDetailsButton();
                     }
                    else
                      {
                        $(".cls-fundProgress").text("Pay Project");
                        $(".project-progress").html("Project is in Progress");
                         if(IsProjectStop){
                             DisabledSolutionFurtherProgressButton()
                             DisabledSolutionDetailsButton();
                          }
                         
                    }
                    
              }
              if(data.FundType == 0)
              {
                if(IsFundCompleted)
                   {
                     $(".cls-fundProgress").text('Project Completed');
                     DisabledSolutionFurtherProgressButton();
                     $(".project-progress").html("Project Completed");
                     DisabledSolutionDetailsButton();
                   }
                else
                  {
                     if(fundDecided > 0 )
                     {
                         if(IsProjectStop){
                            DisabledSolutionFurtherProgressButton();
                            DisabledSolutionDetailsButton();
                         }
                     }
                        $(".cls-fundProgress").text("Pay Milestone " + fundDecided);
                        $(".project-progress").html("Milestone " + fundDecided + " is in Progress");
                   }
                       
              }
               $(".cls-solutionDetails").text('Raise a Dispute');
               if(data.IsDispute){
                    $(".cls-fundProgress").addClass('disabled');
                    $("#solutionfund-projectPay").addClass('disabled');
                    $(".btn.disabled").css("background-color", "var(--brand)");
                    $(".btn.disabled").css("color","black");
               }
           }

            if(FundStopByClient){
                   DisabledSolutionDetailsButton()
	               DisabledFundButton()
                   DisabledSolutionFurtherProgressButton()
              }
   }

   function CheckEvent(){
        var event =  $("#solutionfund-details").text();
        if(event == "Raise a Dispute"){
                RaiseDispute();
                 return;
        }
        if(event == "Stop Project"){
            StopActiveProject();
            return
        }
   }

   function RaiseDispute(){
        var Industryid = @ViewData["Industry"]; 
            var Solutionid = @ViewData["Solution"];

            var data = {
                IndustryId : Industryid,
                SolutionId : Solutionid,
                ProjectType :$("input[name='projSize']:checked").val(),
            }
           $("#preloader").show();
            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                url: "@Url.Action("RaiseDispute", "LandingPage")",
                data: JSON.stringify(data),
                success: function (result) {
                    if(result.Message == "Dispute Raised"){
                        showToaster("success", "Success", result.Message);
                        $(".cls-fundProgress").css("cursor","not-allowed");    
                        
                            $(".cls-fundProgress").addClass('disabled');
                           
                            $(".btn.disabled").css("background-color", "var(--brand)");
                             $(".btn.disabled").css("color","black");
                    }else{
                        showToaster("warning", "Warning!", result.Message);
                    }

                    $("#preloader").hide();
                },
                error: function (result) {
                    $("#preloader").hide();
                    showToaster("error", "Error !", result);
                }
            });
   }

   function CheckoutSolution(checkoutType, projectPrice){

        var Industryid = @ViewData["Industry"]; 
        var Solutionid = @ViewData["Solution"];
        var data = {
            IndustryId : Industryid,
            SolutionId : Solutionid,
            Id :$("#solutionFundMileStoneId").val(),
            SolutionFundId :$("#solutionFundId").val(),
            MileStoneCheckout : checkoutType,
            ProjectPrice : projectPrice
        }
       $("#preloader").show();
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            url: "@Url.Action("CheckOut", "LandingPage")",
            data: JSON.stringify(data),
            success: function (result) {
                if(result.Message != "success"){
                    showToaster("warning", "Warning !", result.Message);
                }else{
                    window.location.href = result.Result;
                }
                
                $("#preloader").hide();
            },
            error: function (result) {
                $("#preloader").hide();
                showToaster("error", "Error !", "Something went wrong !!");
            }
        });
        //window.location = "@Url.Action("CheckOut", "LandingPage")?data=" + JSON.stringify(data)
    }

   function EditActiveSolutionDetailsByFreelancer1(curIcon, EditType){
        //var solutiondefineId = $("#SolutionDefineId").val();
        //if(solutiondefineId != 0){
        //    alert(ProjectType)
        //}
        if($(curIcon).hasClass('bi-save-fill')){
            $(curIcon).attr('title','Click To Edit')
            $(curIcon).removeClass('bi-save-fill').addClass('bi-pencil-fill');
            if(EditType == "ProjectOutline"){
                $("#project-outline-div").show();
                $("#ProjectOutline").hide();
                 $("#project-outline-div").html($("#ProjectOutline").val());
            }
            if(EditType == "ProjectDetail"){
                $("#project-details-div").show();
                $("#ProjectDetails").hide();
                $("#project-details-div").html($("#ProjectDetails").val());
            }
            showToaster("success", "Success !", "Data Updated Successfully");
        }
        else{
            $(curIcon).removeClass('bi-pencil-fill').addClass('bi-save-fill');
            $(curIcon).attr('title','Click To Save');
            if(EditType == "ProjectOutline"){
                $("#project-outline-div").hide();
               //$("#project-outline-div").html()
                $("#ProjectOutline").show();
                 $("#ProjectOutline").val($("#project-outline-div").html())
            }
            if(EditType == "ProjectDetail"){
                $("#project-details-div").hide();
                $("#ProjectDetails").show();
                $("#ProjectDetails").val($("#project-details-div").html())
            }
        }
    }

      function OpenMileStonePopup() {
        $("#MileStonePopModal").modal('show')
    }

    function SaveMilStoneData(){

        var solutionid = @ViewData["Solution"];
        var Industryid = @ViewData["Industry"]; 

          var MileStoneData = {
            Id: $("#MileStoneId").val(),
            Description: $("#mileStoneDescription").val(),
            Title: $("#mileStoneTitle").val(),
            Days: $("#txtMilestoneDays").val(),
            SolutionId: solutionid,
            IndustryId:Industryid,
            ProjectType: $("#projSize").val().toUpperCase(),
        };
        $("#preloader").show();
        $.ajax({
            type: "POST",
            url: "@Url.Action("SaveMileStone", "Home")",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(MileStoneData),
            success: function (result) {
                $("#preloader").hide();
                showToaster("success", "Success", result.Message);
                GetProjectTypeValue()
                ResetMileStoneForm()
            },
            error: function (result) {
                showToaster("error", "Error !", result);
            }
        });
    }

    function ResetMileStoneForm() {
        $("#MileStoneId").val(0);
        $("#mileStoneDescription").val("");
        $("#mileStoneTitle").val("");
        $("#txtMilestoneDays").val(0);
        $("#mileStonedueDate").val("");
        $("#MileStonePopModal").modal('hide')
    }

    function EditActiveMileStoneDetailsByFreelancer(id){
        var data = {
            Id: id,
        };
         $("#preloader").show();
        $.ajax({
            type: "POST",
            url: "@Url.Action("GetMileStoneById", "Home")",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(data),
            success: function (result) {
                if (result != null) {
                    $("#MileStonePopModal").modal('show')
                    var data = result.Result;
                    $("#MileStoneId").val(data.Id);
                    $("#mileStoneDescription").val(data.Description);
                    $("#txtMilestoneDays").val(data.Days);
                    $("#mileStoneTitle").val(data.Title);
                    $("#mileStonedueDate").val(moment(data.DueDate).format('YYYY-MM-DD'));
                }
                 $("#preloader").hide();
            },
            error: function (result) {
                showToaster("error", "Error !",result);
            }
        });

    }

     function EditActiveSolutionDetailsByFreelancer(curIcon, EditType){
      if(EditType == "ProjectOutline"){
          $("#ProjectOutline").show();
          $("#project-outline-div").hide();
          $("#ProjectOutline").html($("#project-outline-div").html());
          $("#projectOutlinePencilIcon").hide();
          $("#projectOutlineSaveIcon").show();
      }
      if(EditType == "ProjectDetail"){
          $("#ProjectDetails").show();
          $("#project-details-div").hide();
          $("#ProjectDetails").html($("#project-details-div").html());
          $("#projectDetailPencilIcon").hide();
          $("#projectDetailSaveIcon").show();
      }
    }

    function EditActiveSolutionDefineDetails(EditType){
         var solutiondefineId = $("#SolutionDefineId").val();
        if(solutiondefineId != 0){
            var Projectdetail = "";
            var Projectoutline = "";
            if(EditType == "ProjectOutline"){
                Projectdetail = $("#project-details-div").html();
                Projectoutline =  $("#ProjectOutline").val();
            }
            if(EditType == "ProjectDetail"){
                  Projectdetail = $("#ProjectDetails").val();
                Projectoutline =  $("#project-outline-div").html();
            }

              var data = {
                Id: solutiondefineId,
                ProjectDetails : Projectdetail,
                ProjectOutline : Projectoutline
            };

             $("#preloader").show();
            $.ajax({
                type: "POST",
                url: "@Url.Action("EditActiveSolutionDefineDetails", "Home")",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify(data),
                success: function (result) {
                     showToaster("success", "Success", result.Message);
                     ResetDefineDetails()
                      $("#preloader").hide();
                },
                error: function (result) {
                    showToaster("error", "Error !",result);
                }
            });
        }
    }

    function ResetDefineDetails(){
       $("#ProjectOutline").hide();
       $("#project-outline-div").show();
       $("#projectOutlinePencilIcon").show();
       $("#projectOutlineSaveIcon").hide();
       $("#ProjectDetails").hide();
       $("#project-details-div").show();
       $("#projectDetailPencilIcon").show();
       $("#projectDetailSaveIcon").hide();
       GetProjectTypeValue()
    }

    function OpenDocumentsUploadPopUp(){
        $("#DocumnetsModal").modal('show')
    }

    function SaveActiveProjectDocuments(){
        
        var filename = $("#ActiveProjectDocument").val();
        var validFileExtentions = /(\.pdf|\.docx)$/i;
        if (validFileExtentions.exec(filename)) {
            $('#preloader').show();
            var fileUpload = $("#ActiveProjectDocument").get(0);
            var files = fileUpload.files;

            var data = {
                SolutionFundId : $("#solutionFundId").val(),
                Description: $("#ActiveProjectDescription").val(),
            }
            
            var formData = new FormData();
            for (var i = 0; i < files.length; i++) {
                formData.append("httpPostedFileBase", files[i]);
            }
            formData.append("ActiveProjectsDocumentDetails", JSON.stringify(data));

            $.ajax({
                type: "POST",
                url: "@Url.Action("SaveActiveProjectDocumentsDetails", "LandingPage")",
                contentType: false,
                processData: false,
                data: formData,
                success: function (result) {
                     showToaster("success", "Success !", result);
                     ResetDocumentPopUp();
                      GetProjectTypeValue()
                    $('#preloader').hide();
                },
                error: function (result) {
                    $('#preloader').hide();

                }
            });
        } else {
            showToaster("error", "Error !", "You can upload only PDF or Document file..");
        }
    }

    function DownloadDocument(DocumentPath){
        if (DocumentPath != "") {
            window.location = "@Url.Action("DownloadApplicantCV", "Home")?Cvname=" + DocumentPath;
        }
    }

    function ResetDocumentPopUp(){
        $("#DocumnetsModal").modal('hide')
        $("#ActiveProjectDescription").val("");
        $("#ActiveProjectDocument").val("")
    }

    function BindMileStoneSection(milestoneData){
         var milestoneSection = "";
         var milestonePopupsection = "";
           $.each(milestoneData, function (datas, values) {
               // if(values.MilestoneStatus == null){
               //     values.MilestoneStatus
               // }

               milestoneSection += '<li class="progress__item">' +
                   '<p class="progress__title Project-title-size cls-milestoneTitle">' + values.Title + '</p>';
                  if(values.MilestoneStatus != null){
                      milestoneSection +='<span class="badge bg-primary cls-milestoneStatus">' + values.MilestoneStatus + '</span>';
                  }
                  
                  milestoneSection +='<p class="progress__info__date"><i class="bi bi-calendar-week"></i>' +values.Days+' (Days)</p>' +
               '</li>'

              milestonePopupsection +=  '<li class="progress__item">' +
                 '<p class="progress__title">'+ values.Title+'<i class="bi bi-pencil-fill cls-milestone-edit-pencil" title="Click To Edit" onclick="EditActiveMileStoneDetailsByFreelancer('+values.Id+')" style="padding-left:2%;display:none;"></i></p>' +
                 '<p class="progress__info">'+values.Description+'</p>' +
                 '<p class="progress__info__date"><i class="bi bi-calendar-week"></i>'+values.Days+' (Days)</p>'+
              '</li>';
           })
        $('#progress-div').html(milestoneSection);
        $('#milestone-Popup-div').html(milestonePopupsection);
        $('#progress-div li:first').addClass('progress__item--active');
        $('#milestone-Popup-div li:first').addClass('progress__item--active');
        $(".cls-milestone-popup").css("display","block")
        $(".cls-mileStone").remove()
    }

    function BindSolutionTeamData(solutionTeamData){
         var solutionTeam = "";
         $.each(solutionTeamData, function (solutiondata, solutionValue) {
            var name =solutionValue.FreelancerName.split(" ")
            var firstname = name[0].charAt(0);
            var lastname = name[1].charAt(0);

            solutionTeam += '<div class="col-xxl-4 col-md-6">' +
                '<div class="card info-card cls-solutionTeam-card">' +
                    '<div class="card-body cls-solution-card">' +
                        '<div class="d-flex align-items-center">';
                            if(solutionValue.ImageUrlWithSas != null){
                               solutionTeam +='<img src="'+solutionValue.ImageUrlWithSas+'" alt="Image" style="height:46px;width:46px;border-radius:50%">';
                            }
                            else{
                               solutionTeam += '<div class="cls-freelancerImage">'+ firstname +''+ lastname +'</div>'
                            }
                          solutionTeam +='<div class="ps-3">' +
                          '<h6 style="margin-bottom: 0; !important">'+solutionValue.FreelancerName+'</h6>' +
                          '<span class="text-muted small pt-2">'+solutionValue.FreelancerLevel+'</span>' +
                          "<div style='padding-top: 5%;'><i class='bi bi-chat-left-dots cls-chat-icon' onclick=openChatModal("+solutionValue.IndustryId+","+solutionValue.SolutionId+",'"+solutionValue.ClientId+"')></i></div>" + 
                          '</div>' +
                        '</div>' +
                       '</div>' +
                     '</div>' +
                   '</div>' +
                 '</div>';
         })
        $('#solutionTeamSection').html(solutionTeam);
        $(".cls-temp").remove();
    }

     function DisabledSolutionFurtherProgressButton(){
         $(".cls-fundProgress").addClass('disabled');
         $(".cls-fundProgress").css("background-color", "var(--brand)");
         $(".cls-fundProgress").css("color","black");
     }

     function DisabledSolutionDetailsButton(){
       $(".cls-solutionDetails").addClass('disabled');
       $(".cls-solutionDetails").css("background-color", "var(--brand)");
       $(".cls-solutionDetails").css("color","black"); 
     }

     function DeleteSolutionDocument(documentId){
          Swal.fire({
            title: 'Are you sure you want to delete document?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then(function (t) {
            if (!t.isConfirmed) return;

          var data = {
               Id: documentId,
            };
             $("#preloader").show();
            $.ajax({
                type: "POST",
                url: "@Url.Action("DeleteActiveSolutionDocument", "LandingPage")",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify(data),
                success: function (result) {
                    showToaster("success", "Success", result.Message);
                    GetProjectTypeValue()
                     $("#preloader").hide();
                },
                error: function (result) {
                     $("#preloader").hide();
                    showToaster("error", "Error !", result);
                }
            });
        });
      }

      function openChatModal(IndustryId,SolutionID,ClietnId) {
        let model = {
            IndustryId : IndustryId,
            SolutionID : SolutionID,
            UserId: ClietnId,
            UserRole:''
        };

        $.ajax({
            type: "POST",
            url: "@Url.Action("GetChatResponse", "Home")",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(model),
            success: function (result) {
                if(result.StatusCode == 200)
                {
                    var index = 0;
                    var subObj = '';
                    var html = '';
                    var resultLength = result.Result.length;
                    var profileHtml = '';
                    if(resultLength > 0){
                        for (index = 0; index < resultLength; index++) {
                            subObj = result.Result[index];
                            if(subObj.ProfileUrl == null)
                            {
                                var splitName =  subObj.FreelancerName.split(" ");

                                html += "<div class=\"chat_list\" id="+ subObj.FreelancerId +" onclick=\"onPeopleClick('"+subObj.FreelancerId+"','"+subObj.FreelancerName+"');\">"+
                                            "<div class=\"chat_people\">"+
                                                "<div class=\"chat_no_img\">"+
	                                                splitName[0].charAt(0) +
                                                    splitName[1].charAt(0) +
	                                            "</div>"+
	                                            "<div class=\"chat_no_ib\">"+
	                                                "<h5>"+ subObj.FreelancerName +"</h5>"+
                                                "</div>"+
                                            "</div>"+
                                        "</div>";
                            }
                            else
                            {
                                html += "<div class=\"chat_list\" id="+ subObj.FreelancerId +" onclick=\"onPeopleClick('"+subObj.FreelancerId+"','"+subObj.FreelancerName+"');\">"+
                                            "<div class=\"chat_people\">"+
	                                            "<div class=\"chat_img\">"+
	                                                "<img src=\""+subObj.ProfileUrl+"\">"+
	                                            "</div>"+
	                                            "<div class=\"chat_ib\">"+
	                                                "<h5>"+ subObj.FreelancerName +"</h5>"+
                                                "</div>"+
                                            "</div>"+
                                        "</div>";
                            }
                        }
                    }
                    else{
                        html = '<tr><td colspan="7"><center>No Data Available</center></td><tr>';
                    }
                    $("#inboxPeople .chat_list").remove();
                    $("#inboxPeople").append(html);
                }
                $('#chatModal').modal('show');
            },
            error: function (result) {
                showToaster("error", "Error !", "Something went wrong !!");
            }
        });
    }

       function onPeopleClick(id,name)
    {
        reciverToken = null;

        $('#chatModal').modal('show');
        //$("#freelancer-name").html(name);
        $("#type-chat").removeClass("d-none");
        let currentUser = "@Context.Session.GetString("LoggedUser")";
        let role = "@Context.Session.GetString("LoggedUserRole")";

        if(role == "Client")
        {
            //username = name;
            //chatroom = currentUser +"-join-"+ id ;
            //bindMessage();
            //console.log(chatroom);

            var testchatroom = currentUser + "-join-" + id;
            var findRoom = firebase.database().ref("ChatRoom/"+testchatroom+"/").limitToFirst(1);
            findRoom.on("value", function(data) {

                if(data.val() != undefined)
                {
                    username = name;
                    chatroom = testchatroom;
                }
                else
                {
                    username = name;
                    chatroom = id + "-join-" + currentUser;
                }

                console.log(chatroom);

                bindMessage();

            }, function (error) {
                return false;
            });
        }
        else
        {
            var testchatroom = currentUser + "-join-" + id;
            var findRoom = firebase.database().ref("ChatRoom/"+testchatroom+"/").limitToFirst(1);
            findRoom.on("value", function(data) {

                if(data.val() != undefined)
                {
                    username = name;
                    chatroom = testchatroom;
                }
                else
                {
                    username = name;
                    chatroom = id + "-join-" + currentUser;
                }

                console.log(chatroom);

                bindMessage();

            }, function (error) {
                return false;
            });
        }
    }

        function closeChatModal(){
        $("#inboxPeople .chat_list").removeClass("active_chat");
        $("#type-chat").addClass("d-none");
        $("#txt_message").val("");
        $("#chat_history").empty();
        $("#chat_history").append("<div class=\"text-center\"><img src=\"https://shorturl.at/bhou4\"/></div>")
        $('#chatModal').modal('hide');
    }

     function bindMessage(){
        offconn();
        $("#chat_history").empty();

        let senderName = "@Context.Session.GetString("FullName").ToString()";

        fetchMessage(senderName);
    }

    $("#btn_chat_send").click(function(){
        sendChatMessage();
    });

     function sendChatMessage(){
        let msg = $("#txt_message").val();

        if(msg == "")
        {
            return false;
        }

        let senderName = "@Context.Session.GetString("FullName").ToString()";

        let model = {
            sedername : senderName,
            recivername : username,
            message : msg,
            timestamp : Date.now(),
            image : ''
        }

        $("#txt_message").val("");
        sendMessage(model);
        model = null;
    }

    function StopActiveProject(){
          var Industryid = @ViewData["Industry"]; 
            var Solutionid = @ViewData["Solution"];

            var data = {
                IndustryId : Industryid,
                SolutionId : Solutionid,
                ProjectType :$("input[name='projSize']:checked").val(),
                MileStoneId : $("#solutionFundMileStoneId").val(),
            }
           $("#preloader").show();
            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                url: "@Url.Action("StopActiveProject", "LandingPage")",
                data: JSON.stringify(data),
                success: function (result) {
                    if(result.Message == "Project Stopped"){
                        showToaster("success", "Success", result.Message);
                        DisabledSolutionDetailsButton()
	                    DisabledFundButton()
                        DisabledSolutionFurtherProgressButton();
                    }else{
                        showToaster("warning", "Warning!", result.Message);
                    }

                    $("#preloader").hide();
                },
                error: function (result) {
                    $("#preloader").hide();
                    showToaster("error", "Error !", result);
                }
            });
    }

    function DisabledFundButton(){
         $(".cls-fundPopOver").addClass('disabled');
       $(".cls-fundPopOver").css("background-color", "var(--brand)");
       $(".cls-fundPopOver").css("color","black"); 
    }
     
</script>