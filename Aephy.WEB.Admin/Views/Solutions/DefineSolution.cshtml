<main id="main" class="main">
    <div class="row">
        <!-- Recent Sales -->
        <div class="col-12">
            <div class="card recent-sales overflow-auto">

                <div class="card-body">
                    <h5 class="card-title">Solutions</h5>

                    <table class="table table-borderless datatable" id="solutionList">
                        <thead>
                            <tr>
                                <th style="width:10%">Id</th>
                                <th style="width:10%">Title</th>
                                @*  <th style="width:10%">Sub Title</th>*@
                                <th style="width:30%">Description</th>
                                <th style="width:20%">Image</th>
                                <th style="width:10%">Services</th>
                                <th style="width:10%">Industries</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div><!-- End Recent Sales -->
    </div>
</main>

<div class="modal" id="DetailsPopModal" tabindex="-1" aria-labelledby="DetailsPopModal" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title main-title">Details</h4>
                <a class="close" onclick="ResetDetailsForm();"><i class="bi bi-x-circle"></i></a>
            </div>
            <div class="modal-body p-0">
                <div class="row">
                    <div class="col">
                        <div class="card">
                            <div class="card-body">
                                <form name="ProjectDetailsForm">
                                    <input type="hidden" id="SolutionId" value="0">
                                    <input type="hidden" id="IndustryId" value="0">
                                    <input type="hidden" id="ProjectOulineId" value="0">

                                    <div class="form-group pt-3">
                                        <label for="ProjectType"> Select Project Type </label>
                                        <select class="form-select" name="ProjectType" id="ProjectType">
                                            <option value="SMALL">Small</option>
                                            <option value="MEDIUM">Medium</option>
                                            <option value="LARGE">Large</option>
                                        </select>
                                    </div>

                                    <div class="form-group pt-3">
                                        <label for="Description">Project Outline</label>
                                        <textarea id="industry-ProjectOutline" class="form-control" name="ProjectOutline" rows="4" cols="50" maxlength="330"></textarea>
                                    </div>

                                    <div class="form-group pt-3">
                                        <label for="projectDetails">Project Details</label>
                                        <textarea id="industry-ProjectDetails" class="form-control" name="ProjectDetails" rows="4" cols="50" maxlength="330"></textarea>
                                    </div>

                                    <div class="form-group pt-3">
                                        <label for="ProjectDuration">Project Duration</label>
                                        <input type="text" class="form-control" id="industry-ProjectDuration" name="ProjectDuration" placeholder="Project Duration">
                                    </div>

                                    <div class="form-group pt-3">
                                        <label for="TeamSize">Team Size</label>
                                        <input type="text" class="form-control" id="industry-TeamSize" name="TeamSize" value="2" readonly>
                                    </div>

                                    <div class="form-group pt-3">
                                        <button type="button" class="btn btn-primary" onclick="OpenMileStonePopup()">Add Milestones</button>
                                        <button type="button" class="btn btn-primary" onclick="OpenPointsPopup()">Add Highlights</button>
                                    </div>

                                    <div id="MileStonediv" style="padding-top: 3%;">
                                        <label for="mileStone" class="cls-table-label">Milestones Grid</label>
                                        <table class="table" id="MileStoneTable">
                                            <thead style="border: 1px solid #e8e8e8;">
                                                <tr>
                                                    <th>Id</th>
                                                    <th>Description</th>
                                                    <th>Title</th>
                                                    <th>Days</th>
                                                    <th></th>
                                                </tr>
                                            </thead>
                                            <tbody class="MileStonebody">
                                            </tbody>
                                        </table>
                                    </div>

                                    <div id="Pointsdiv" style="padding-top: 3%;">
                                        <label for="points" class="cls-table-label">Highlights Grid</label>
                                        <table class="table" id="PointsTable">
                                            <thead style="border: 1px solid #e8e8e8;">
                                                <tr>
                                                    <th>Id</th>
                                                    <th>Label</th>
                                                    <th>Value</th>
                                                    <th></th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                            </tbody>
                                        </table>
                                    </div>

                                    <div class="form-group pt-3" style="text-align:center">
                                        <button type="submit" class="btn btn-brand">Submit</button>
                                        <button type="button" class="btn btn-secondary" onclick="ResetDetailsForm()">Close</button>
                                       @*  <div class="view_action_Link d-flex justify-content-end">
                                            <span style="background-color:#d38b4e; width:1rem;"></span>
                                            <div class="d-flex justify-content-center align-items-center">
                                                <a href="" class="cls-milestone-popup" id="clsGuidelineModal" data-bs-toggle="modal" data-bs-target="#guidelineModal">View Guidelines</a>
                                                <img src="~/assets/img/icons-send.png" />
                                            </div>
                                        </div> *@
                                    </div>

                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal" id="MileStonePopModal" tabindex="-1" aria-labelledby="MileStonePopModal" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title main-title">Add Milestone</h4>
                <a class="close" onclick="ResetMileStoneForm();"><i class="bi bi-x-circle"></i></a>
            </div>
            <div class="modal-body p-0">
                <div class="row">
                    <div class="col">
                        <div class="card">
                            <div class="card-body">
                                <form class="row g-3 mt-3" name="MileStoneForm">
                                    <input type="hidden" id="MileStoneId" value="0" />
                                    <div class="col-12">
                                        <label for="Title" class="form-label">Title</label>
                                        <div class="input-group">
                                            <input type="text" id="mileStoneTitle" class="form-control" name="milestonetitle" />
                                        </div>
                                    </div>
                                    <div class="col-12">
                                        <label for="Description" class="form-label">Description</label>
                                        <div class="input-group">
                                            <input type="text" id="mileStoneDescription" class="form-control" name="milestonedescription" />
                                        </div>
                                    </div>
                                    <div class="col-12">
                                        <label for="Days" class="form-label">Days</label>
                                        <div class="input-group">
                                            <input type="text" id="txtMilestoneDays" class="form-control" name="txtMilestoneDays" />
                                        </div>
                                    </div>
                                    <div class="col-12" style="display:none;">
                                        <label for="dueDate" class="form-label">Due Date</label>
                                        <div class="input-group">
                                            @*<input type="text" id="mileStonedueDate" class="form-control" name="milestoneduedate" />*@
                                            <input type="date" id="mileStonedueDate" class="form-control" name="milestoneduedate">
                                        </div>
                                    </div>
                                    <div class="text-center">
                                        <button type="submit" class="btn btn-brand">Submit</button>
                                        <button type="button" class="btn btn-secondary" onclick="ResetMileStoneForm();">Reset</button>
                                    </div>
                                </form>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal" id="PointsPopModal" tabindex="-1" aria-labelledby="PointsPopModal" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title main-title">Add Highlights</h4>
                <a class="close" onclick="ResetPointsForm();"><i class="bi bi-x-circle"></i></a>
            </div>
            <div class="modal-body p-0">
                <div class="row">
                    <div class="col">
                        <div class="card">
                            <div class="card-body">
                                <form class="row g-3 mt-3" name="PointsForm">
                                    <input type="hidden" id="PointsId" value="0" />
                                    <div class="col-12">
                                        <label for="points" class="form-label">Label</label>
                                        <div class="input-group">
                                            <input type="text" id="pointsKey-id" class="form-control" name="pointsKey" />
                                        </div>
                                    </div>

                                    <div class="col-12">
                                        <label for="points" class="form-label">Value</label>
                                        <div class="input-group">
                                            <input type="text" id="pointsValue-id" class="form-control" name="pointsValue" />
                                        </div>
                                    </div>
                                    <div class="text-center">
                                        <button type="submit" class="btn btn-brand">Submit</button>
                                        <button type="button" class="btn btn-secondary" onclick="ResetPointsForm();">Reset</button>
                                    </div>
                                </form>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

 <div class="modal fade" id="guidelineModal" tabindex="-1" aria-labelledby="guidelineModal" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Guidelines</h4>
                    <a class="close" data-dismiss="#guidelineModal" onclick="hideGuidelinesModal();"><i class="bi bi-x-circle"></i></a>
                </div>
                <div class="modal-body p-0">
                    <div class="progressContainer d-flex flex-column">
                        <ol class="px-4 cls-ol-list">
                            <li data-aos="fade-up" data-aos-delay="100" class="list-title-size">
                                <h3 class="list-title-size">An Introduction to Predefined Al Projects: The Essential Role and Process of the Project Architect</h3>
                                <h4 class="section-title-size">
                                    In the innovative world of predefined Al projects, the central figure is the Project Architect, who shapes the success of the entire project lifecycle. The process, broken down into distinct stages, provides a seamless experience for clients and freelancers alike:
                                </h4>
                                <ol type="i" class="cls-ol-list">
                                    <li class="section-detail-size">
                                        Project Creation by the Project Architect: With a deep understanding of industry needs, the Project Architect initiates the project by defining its requirements, details, scope, and timeline. By meticulously outlining every aspect, the Architect ensures that the project is not only viable but also tailored to meet specific client demands.                                    </li>
                                    <li class="section-detail-size">
                                        Client Purchasing: Once the project is carefully crafted and approved, it becomes available for clients to purchase. The predefined nature of these projects means that clients can confidently select projects that align with their needs, knowing that all critical aspects have been expertly planned.                                    </li>
                                    <li class="section-detail-size">
                                        Advantages for Freelancers: When a client purchases a project, the robust definition created by the Project Architect comes into play. Freelancers selected to work on the project benefit from the Architect's groundwork, finding it easier to adhere to timelines and scope. This clarity eliminates guesswork and fosters efficiency.                                    </li>
                                    <li class="section-detail-size">
                                        Transparent and Incentivized Payment Structure: The Project Architect is motivated by receiving an extra 3% or 4% from the total project fees, depending on the project's size. This transparent payment system ensures fairness and encourages excellence.                                    </li>
                                    <li class="section-detail-size">
                                           Automated Price Estimation: Our platform uses the inputs provided by the Project Architect, along with other factors, to automatically estimate the project price. This approach streamlines the selection and purchasing process for clients, making it easier for them to choose the right predefined Al projects.                                    </li>
                                </ol>
                                <p class="section-detail-size">In essence, the predefined Al project model, championed by the role of the Project Architect, establishes a solid foundation that benefits all stakeholders. Clients gain access to projects that resonate with their needs, while freelancers enjoy clear guidance that makes execution straightforward. The process, built on precision and professionalism, reinforces the importance of careful planning, and leads to successful projects that meet and exceed expectations.</p>
                            </li>
                            <li data-aos="fade-up" data-aos-delay="100" class="list-title-size">
                                <h3 class="list-title-size">Before You Dive In</h3>
                                <p class="section-detail-size">This document has been designed as a reference for Project Architects. It offers guidelines for creating the “Project Outline”, "Project Details", “Milestones” and “Project Highlights” sections for predefined solutions. Predefined solutions refer to small, medium, and large projects. Custom projects, on the other hand, are not required to be defined by the project architect, as they will be determined later through communication with the client.
                                </p>
                                <h4 class="section-title-size">
                                    Team size will be determined based on the project scale:
                                </h4>
                                <ul>
                                    <li class="section-detail-size">
                                        Small : 1 Project Manager + 1 Associate
                                    </li>
                                    <li class="section-detail-size">
                                        Medium : 1 Project Manager + 1 Expert + 1 Associate
                                    </li>
                                    <li class="section-detail-size">
                                        Large : 1 Project Leader + 2 Experts + 2 Associates
                                    </li>
                                    <li class="section-detail-size">
                                        Custom projects : Team size and timelines will be selected based on client preferences.
                                    </li>
                                </ul>
                                <p class="section-detail-size">Although we typically suggest maintaining a uniform duration for predefined projects, regardless of whether they are small, medium, or large, it's important to consider that larger projects, given their increased complexity, might not only require a larger team of freelancers, but also an extended timeline for completion. The platform has a word limit for displaying information, Project Architects should stay within that limit and include all relevant information. All relevant information should be adjusted based on the size of each project - small, medium, or large - and populated accordingly. Once projects have been defined and submitted by the project Architect and approved by the admin, they can be accessed on the website by following the relevant path: / Browse Solutions / Selected Service / Selected Solution / Selected Industry. See below for a preview of how the project should be defined and identify which fields will be updated from the Project Architect's dashboard.</p>
                                <img src="~/assets/defineguidelines/choosesmall.png" class="img-fluid pt-4" alt="" style="width:100%;">
                                <p style="font-size: 15px !important;">Figure 1: Defining a Small Project</p>
                                <img src="~/assets/defineguidelines/choosemedium.png" class="img-fluid pt-4" alt="" style="width:100%;">
                                <p style="font-size: 15px !important;">Figure 2: Defining a Medium Project</p>
                                <img src="~/assets/defineguidelines/chooselarge.png" class="img-fluid pt-4" alt="" style="width:100%;">
                                <p style="font-size: 15px !important;">Figure 3: Defining a Large Project</p>
                            </li>
                            <li data-aos="fade-up" data-aos-delay="100" class="list-title-size">
                                <h3 class="list-title-size">Project Outline</h3>
                                <ul>
                                    <li class="section-detail-size">
                                        Paragraph 1:<p>Focus on the expected benefits and outcomes of the project. Highlight any unique features or advantages that differentiate this project from others in the field.</p>
                                    </li>
                                    <li class="section-detail-size">
                                        Paragraph 2:<p>Provide an overview of the project process, mentioning any key milestones or deliverables. Ensure the summary is client-focused, communicating effectively what potential clients can expect to gain from their collaboration with freelancers on the website.</p>
                                    </li class="section-detail-size">
                                </ul>
                            </li>
                            <li data-aos="fade-up" data-aos-delay="100" class="list-title-size">
                                <h3 class="list-title-size">Project Details</h3>
                                <h4 class="section-title-size">
                                Defining the scope and requirements for an AI project involves several steps:      
                                </h4>
                                <ul>
                                    <li class="section-detail-size">
                                        Paragraph 1:<p>Identify the problem: First, identify the business problem or opportunity that the AI project will address. This can involve analysing data, identifying inefficiencies, or uncovering opportunities for automation.</p>
                                    </li>
                                    <li class="section-detail-size">
                                        Paragraph 2:<p>Determine the goals: Next, determine the goals of the project. These should be specific, measurable, and aligned with the business problem or opportunity identified in step one. For example, a goal might be to reduce customer service response time by 50%.</p>
                                    </li>
                                    <li class="section-detail-size">
                                        Paragraph 3:<p>Define the scope: Once the goals are established, define the scope of the project. This should include the data sources that will be used, the technology stack that will be employed, and any other key parameters.</p>
                                    </li>
                                    <li class="section-detail-size">
                                        Paragraph 4:<p>Define the requirements: Based on the goals and scope, define the technical requirements for the project. This may include selecting specific AI algorithms, defining data pre-processing steps, and selecting performance metrics.</p>
                                    </li>
                                    <li class="section-detail-size">
                                        Paragraph 5:<p>Prioritize requirements: Once the requirements are defined, prioritize them based on their importance to achieving the project goals. This will help ensure that the most critical features are implemented first.</p>
                                    </li>
                                    <li class="section-detail-size">
                                        Paragraph 6:<p>Develop a plan: Finally, develop a project plan that outlines the timeline, milestones, and resources required to deliver the project. This plan should be reviewed and updated regularly to ensure that the project plan stays on track.</p>
                                    </li>
                                </ul>
                            </li>
                            <li data-aos="fade-up" data-aos-delay="100" class="list-title-size">
                                <h3 class="list-title-size">Milestones</h3>
                                <h4 class="section-title-size">
                                    Milestones should be created by following the guidelines as described below:
                                </h4>
                                <ul class="section-title-size">
                                    <li data-aos="fade-up" data-aos-delay="100">
                                        <p class="section-detail-size">
                                            Identification - Identify the key deliverables and deadlines that signify progress in the project.
                                        </p>
                                    </li>
                                    <li data-aos="fade-up" data-aos-delay="100">
                                        <p class="section-detail-size">Relevance - Ensure each milestone is related directly to the project's goals and objectives.</p>
                                    </li>
                                    <li data-aos="fade-up" data-aos-delay="100">
                                        <p class="section-detail-size">
                                            Measurable - Milestones should be tangible and quantifiable so that it's clear when they have been achieved.
                                        </p>
                                    </li>
                                    <li data-aos="fade-up" data-aos-delay="100">
                                        <p class="section-detail-size">
                                            Timely - Set realistic yet ambitious timelines for each milestone to keep the project on track.
                                        </p>
                                    </li>
                                    <li data-aos="fade-up" data-aos-delay="100">
                                        <p class="section-detail-size">
                                            Review - Regularly review and update the milestones after client and freelancers’ feedback.
                                        </p>
                                    </li>
                                </ul>
                            </li>
                            <li data-aos="fade-up" data-aos-delay="100" class="list-title-size">
                                <h3 class="list-title-size">Project Highlights</h3>
                                <p class="section-detail-size">On the main box, before the “Buy” and “Message” options, the Project Architect should define the duration of each project and can add up to 3 summary points. These points should capture the essence of the project, its key deliverables, and client benefits.</p>
                            </li>
                        </ol>
                        
                        <!--Appedix-->
                        <ol class="px-4 cls-ol-list" type="A">
                            <li data-aos="fade-up" data-aos-delay="100" class="list-title-size">
                                <h3 class="list-title-size">Determining Project Duration</h3>
                                <h4 class="section-title-size">
                                    When defining the duration for each predefined project, whether small, medium, or large, the Project Architect must consider the following factors:                                </h4>
                                <ol type="i">
                                    <li class="section-detail-size">
                                    Working Hours: Assume that freelancers involved in the project, including project managers, experts, and associates, will work 8 hours a day.
                                    </li>
                                    <li class="section-detail-size">
                                        Project Complexity: Evaluate the complexity of the project's tasks and requirements. A small project may be completed within a few weeks, while a medium or large project might require several months.                                    
                                    </li>
                                    <li class="section-detail-size">
                                        Team Composition: Consider the team size and roles for each project type (small: 1 Project Manager + 1 Associate, medium: 1 Project Manager + 1 Expert + 1 Associate, large: 1 Project Manager + 2 Experts + 2 Associates) and how this influences the timeline.
                                    </li>
                                    <li class="section-detail-size">
                                        Milestones and Deliverables: Break down the project into key milestones and deliverables, estimating the time needed for each phase, aligned with the project's goals and objectives.
                                    </li>
                                </ol>
                            </li>
                            <li data-aos="fade-up" data-aos-delay="100" class="list-title-size">
                                <h3 class="list-title-size">Approval, Feedback, and Aftercare Process</h3>
                                        <p class="section-detail-size">
                                            The process of review and approval for predefined Al projects starts with a thorough self-review by the Project Architect. Once the project is refined and aligned with the expectations, it is submitted through our website, followed by a meticulous examination and final approval by our team. This step ensures that the project meets the predefined standards and quality criteria.
                                            </p>
                                        <p class="section-detail-size">
                                            After the project is launched, aftercare services become an essential part of its ongoing success. These services include offering support to the Project Architect, gathering and analysing feedback from other freelancers and clients, and monitoring the sales volume of each project. This multifaceted approach fosters a continuous feedback loop, allowing the project to evolve and adapt to changing needs and demands. It underscores our commitment to excellence and continuous improvement, enhancing satisfaction among all stakeholders.
                                       </p>
                            </li>
                        </ol>
                    </div>
                </div>
            </div>
        </div>
    </div>

<script>
    $(function () {
        GetSolutionList();
        $("form[name='MileStoneForm']").validate({
            rules: {
                milestonedescription: { required: true },
                milestonetitle: { required: true },
                txtMilestoneDays: { required: true },
            },
            messages: {
                milestonedescription: { required: "Please enter description" },
                milestonetitle: { required: "please enter title" },
                txtMilestoneDays: { required: "Please enter days" }
            },
            errorPlacement: function (error, element) {
                if (element.parent('.input-group').length) {
                    error.insertAfter(element.parent());
                }
                else {
                    error.insertAfter(element);
                }
            },
            submitHandler: function (form) {
                SaveMilStoneData()
            }
        })

        $("form[name='PointsForm']").validate({
            rules: {
                pointsKey: { required: true },
                pointsValue: { required: true }
            },
            messages: {
                pointsKey: { required: "Please enter points key" },
                pointsValue: { required: "Please enter points value" }
            },
            errorPlacement: function (error, element) {
                if (element.parent('.input-group').length) {
                    error.insertAfter(element.parent());
                }
                else {
                    error.insertAfter(element);
                }
            },
            submitHandler: function (form) {
                SavePointsData()
            }
        });

        $("form[name='ProjectDetailsForm']").validate({
            rules: {
                ProjectOutline: { required: true },
                ProjectDuration: { required: true },
                ProjectDetails: { required: true }
            },
            messages: {
                ProjectOutline: { required: "Please enter project outline" },
                ProjectDuration: { required: "Please enter project duration" },
                ProjectDetails: { required: "Please enter project details" }
            },
            errorPlacement: function (error, element) {
                if (element.parent('.input-group').length) {
                    error.insertAfter(element.parent());
                }
                else {
                    error.insertAfter(element);
                }
            },
            submitHandler: function (form) {
                SaveSolutionIndustryDescription()
            }
        });
    })

    function GetSolutionList() {
        $("#preloader").show();
        $.ajax({
            type: "Get",
            url: "@Url.Action("GetSolutionsIndustryDetailList", "Solutions")",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                $("#preloader").hide();
                $('#solutionList').DataTable({
                    destroy: true,
                    data: result.Result,
                    "columns": [
                        {
                            "data": "Id",
                            "render": function (data, type, row) {
                                return '<a class="cls-service" onclick=OpenDetailsPopModal(' + data + ',' + row.SolutionId + ',' + row.IndustryId + ')>' + data + '</a>';
                            }
                        },
                        {
                            "data": "Title",
                            "render": function (data, type, row) {
                                var title = data.length > 35 ? data.substring(0, 35) + "..." : data;
                                return "<span title='" + data + "'>" + title + "</span>";
                            }
                        },
                        //{ "data": "SubTitle" },
                        {
                            "data": "Description",
                            "render": function (data, type, row) {
                                if (data != null) {
                                    var description = data.length > 35 ? data.substring(0, 35) + "..." : data;
                                    return "<span title='" + data + "'>" + description + "</span>";
                                }
                                else {
                                    return "<span></span>";
                                }

                            }
                        },
                        {
                            "data": "ImageUrlWithSas",
                            "render": function (data, type, row) {
                                if (data != null) {
                                    return '<img src="' + data + '" alt="Image" height="70" width="150" />';
                                }
                                else {
                                    return "<span></span>";
                                }

                            }
                        },
                        { "data": "Services" },
                        { "data": "Industries" }

                    ]
                });


            },
            error: function (result) {
                //alert("failure");
                showToaster("error", "Error !", "Failure");
            }
        });
    }

    function OpenDetailsPopModal(Id, SolutionId, IndustryId) {
        $("#DetailsPopModal").modal('show');
        $("#SolutionId").val(SolutionId);
        $("#IndustryId").val(IndustryId);
        GetSolutionDefineDetails();
       
    }

    function GetSolutionDefineDetails() {

        var data = {
            SolutionId: parseInt($("#SolutionId").val()),
            IndustryId: parseInt($("#IndustryId").val()),
            ProjectType: $("#ProjectType").val(),
        };

        $("#preloader").show();

        $.ajax({
            type: "POST",
            url: "@Url.Action("GetSolutionDefineData", "Solutions")",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(data),
            success: function (result) {
                if (result.Result != null) {
                    $("#industry-ProjectDetails").val(result.Result.ProjectDetails);
                    $("#industry-ProjectOutline").val(result.Result.ProjectOutline);
                    $("#industry-ProjectDuration").val(result.Result.Duration);
                } else {
                    $("#industry-ProjectDetails").val("");
                    $("#industry-ProjectOutline").val("");
                    $("#industry-ProjectDuration").val("");
                }
                
                var ProjectType = $("#ProjectType").val();
                if (ProjectType == "LARGE") {
                    $("#industry-TeamSize").val(5);
                }
                if (ProjectType == "MEDIUM") {
                    $("#industry-TeamSize").val(3);
                }
                if (ProjectType == "SMALL") {
                    $("#industry-TeamSize").val(2);
                }
                GetMiletoneList();
                $("#preloader").hide();
            },
            error: function (result) {
                showToaster("error", "Error !", result.Message);
                $("#preloader").hide();
            }
        });
    }

    function GetMiletoneList() {
        var data = {
            SolutionId: parseInt($("#SolutionId").val()),
            IndustryId: parseInt($("#IndustryId").val()),
            ProjectType: $("#ProjectType").val(),
        }

        $("#preloader").show();
        $.ajax({
            type: "POST",
            url: "/Solutions/GetMiletoneList",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(data),
            success: function (result) {
                var data = result.Result
                var index = 0;
                var subObj = '';
                var htm = '';
                for (index = 0; index < data.length; index++) {
                    subObj = data[index];

                    htm += '<tr>';
                    //htm += '<td class="" >' + subObj.Id + '</td>';
                    htm += '<td onclick=EditMiletoneData(' + subObj.Id + ') class=cls-milestone>' + subObj.Id + '</td>';
                    htm += '<td>' + subObj.Description + '</td>';
                    htm += '<td>' + subObj.Title + '</td>';
                    htm += '<td>' + subObj.Days + '</td>';
                    htm += '<td><a class="btn btn-danger btn-sm" onclick=DeleteMileStoneById(' + subObj.Id + ')>Delete</a></td>';
                    htm += '</tr>';
                }
                $("#MileStoneTable").find("tr:gt(0)").remove();
                $("#MileStoneTable tbody").append(htm);
                GetPointsList();
                $("#preloader").hide();
            },
            error: function (result) {
                showToaster("error", "Error !", result);
                $("#preloader").hide();
            }
        });
    }

    function GetPointsList() {

        var data = {
            SolutionId: parseInt($("#SolutionId").val()),
            IndustryId: parseInt($("#IndustryId").val()),
            ProjectType: $("#ProjectType").val(),
        }

        $("#preloader").show();
        $.ajax({
            type: "POST",
            url: "/Solutions/GetPointsList",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(data),
            success: function (result) {
                var data = result.Result
                var index = 0;
                var subObj = '';
                var htm = '';
                for (index = 0; index < data.length; index++) {
                    subObj = data[index];
                    if (subObj.PointKey == null || subObj.PointKey == undefined) {
                        subObj.PointKey = ""
                    }
                    if (subObj.PointValue == null || subObj.PointValue == undefined) {
                        subObj.PointValue = ""
                    }
                    htm += '<tr>';
                    htm += '<td class=cls-milestone onclick=GetPointsDataById(' + subObj.Id + ')>' + subObj.Id + '</td>';
                    htm += '<td>' + subObj.PointKey + '</td>';
                    htm += '<td>' + subObj.PointValue + '</td>';
                    htm += '<td><a class="btn btn-danger btn-sm" onclick=DeletePointsById(' + subObj.Id + ')>Delete</a></td>';
                    htm += '</tr>';
                }
                $("#PointsTable").find("tr:gt(0)").remove();
                $("#PointsTable tbody").append(htm);
                $("#preloader").hide();
            },
            error: function (result) {
                showToaster("error", "Error !", result);
                $("#preloader").hide();
            }
        });
    }

    function OpenMileStonePopup() {
        $("#MileStonePopModal").modal('show')
    }

    function SaveMilStoneData() {
        var MileStoneData = {
            Id: $("#MileStoneId").val(),
            Description: $("#mileStoneDescription").val(),
            Title: $("#mileStoneTitle").val(),
            //DueDate: $("#mileStonedueDate").val(),
            Days: $("#txtMilestoneDays").val(),
            SolutionId: $("#SolutionId").val(),
            IndustryId: $("#IndustryId").val(),
            ProjectType: $("#ProjectType").val(),
        };
        $("#preloader").show();
        $.ajax({
            type: "POST",
            url: "/Solutions/SaveMileStone",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(MileStoneData),
            success: function (result) {
                $("#preloader").hide();
                showToaster("success", "Success", result.Message);
                ResetMileStoneForm()
            },
            error: function (result) {
                showToaster("error", "Error !", result);
            }
        });
    }


    function ResetMileStoneForm() {
        $("#MileStoneId").val(0);
        $("#mileStoneDescription").val("");
        $("#mileStoneTitle").val("");
        $("#txtMilestoneDays").val("0");
        $("#mileStonedueDate").val("");
        $("#MileStonePopModal").modal('hide')
        GetMiletoneList()
    }

    function OpenPointsPopup() {
        if ($("#PointsTable tbody tr").length >= 3) {
            showToaster("warning", "Warning !", "you have reached a limit for adding points");
        } else {
            $("#PointsPopModal").modal('show')
        }

    }

    function SavePointsData() {
        var PointsData = {
            Id: $("#PointsId").val(),
            PointKey: $("#pointsKey-id").val(),
            PointValue: $("#pointsValue-id").val(),
            SolutionId: $("#SolutionId").val(),
            IndustryId: $("#IndustryId").val(),
            ProjectType: $("#ProjectType").val()
        };

        $("#preloader").show();
        $.ajax({
            type: "POST",
            url: "/Solutions/SavePoints",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(PointsData),
            success: function (result) {
                $("#preloader").hide();
                showToaster("success", "Success", result.Message);
                ResetPointsForm()
            },
            error: function (result) {
                showToaster("error", "Error !", result);
            }
        });
    }

    function ResetPointsForm() {
        $("#PointsId").val(0);
        $("#pointsKey-id").val("");
        $("#pointsValue-id").val("");
        $("#PointsPopModal").modal('hide')
        GetPointsList()
    }

    function DeletePointsById(Id) {

        Swal.fire({
            title: 'Are you sure you want to delete points?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then(function (t) {
            if (!t.isConfirmed) return;

            var Data = {
                Id: Id,
            };
            $.ajax({
                type: "POST",
                url: "/Solutions/DeletePoints",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify(Data),
                success: function (result) {
                    showToaster("success", "Success", result.Message);
                    GetPointsList()
                },
                error: function (result) {
                    showToaster("error", "Error !", result);
                }
            });
        });
    }

    function DeleteMileStoneById(Id) {
        Swal.fire({
            title: 'Are you sure you want to delete milestone?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then(function (t) {
            if (!t.isConfirmed) return;
            var Data = {
                Id: Id,
            };
            $.ajax({
                type: "POST",
                url: "/Solutions/DeleteMileStone",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify(Data),
                success: function (result) {
                    showToaster("success", "Success", result.Message);
                    GetMiletoneList()
                },
                error: function (result) {
                    showToaster("error", "Error !", result);
                }
            });

        });
    }

    function EditMiletoneData(id) {
        var data = {
            Id: id,
        };
        $.ajax({
            type: "POST",
            url: "/Solutions/GetMileStoneById",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(data),
            success: function (result) {
                if (result != null) {
                    $("#MileStonePopModal").modal('show')
                    var data = result.Result;
                    $("#MileStoneId").val(data.Id);
                    $("#mileStoneDescription").val(data.Description);
                    $("#txtMilestoneDays").val(data.Days);
                    $("#mileStoneTitle").val(data.Title);
                    $("#mileStonedueDate").val(moment(data.DueDate).format('YYYY-MM-DD'));
                }
            },
            error: function (result) {
                //alert("Error occured..");
                showToaster("error", "Error !", result);
            }
        });
    }

    function GetPointsDataById(id) {
        var data = {
            Id: id,
        };
        $.ajax({
            type: "POST",
            url: "/Solutions/GetPointsDataById",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(data),
            success: function (result) {
                if (result != null) {
                    $("#PointsPopModal").modal('show')
                    var data = result.Result;
                    $("#PointsId").val(data.Id);
                    $("#pointsKey-id").val(data.PointKey);
                    $("#pointsValue-id").val(data.PointValue);
                }
            },
            error: function (result) {
                showToaster("error", "Error !", result);
            }
        });
    }

    function SaveSolutionIndustryDescription() {
       
        var DefineData = {
            Id: $("#ProjectOulineId").val(),
            ProjectOutline: $("#industry-ProjectOutline").val(),
            ProjectDetails: $("#industry-ProjectDetails").val(),
            SolutionId: $("#SolutionId").val(),
            IndustryId: $("#IndustryId").val(),
            ProjectType: $("#ProjectType").val(),
            Duration: $("#industry-ProjectDuration").val(),
            TeamSize: $("#industry-TeamSize").val(),
        };

        $("#preloader").show();
        $.ajax({
            type: "POST",
            url: "/Solutions/UpdateIndustryOutline",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(DefineData),
            success: function (result) {
                //alert(result.Message);
                showToaster("success", "Success", result.Message);
                ResetDetailsForm()
                $("#preloader").hide();
            },
            error: function (result) {
                //alert("Error occured..");
                showToaster("error", "Error !", result);
            }
        });
    }

    function ResetDetailsForm() {
        $("#industry-ProjectOutline").val("")
        $("#industry-ProjectDetails").val("")
        $("#SolutionId").val(0)
        $("#IndustryId").val(0)
        $("#ProjectType").val("SMALL")
        //ResetMileStoneForm()
        $("#DetailsPopModal").modal('hide')
    }

    $("#ProjectType").change(function () {
        GetSolutionDefineDetails()
    });

    function hideGuidelinesModal() {
    $('#guidelineModal').modal('hide');
    }
</script>